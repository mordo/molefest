/* Modernizr 2.6.2 (Custom Build) | MIT & BSD
 * Build: http://modernizr.com/download/#-csstransitions-audio-video-touch-teststyles-testprop-testallprops-prefixes-domprefixes
 */
;window.Modernizr=function(a,b,c){function y(a){i.cssText=a}function z(a,b){return y(l.join(a+";")+(b||""))}function A(a,b){return typeof a===b}function B(a,b){return!!~(""+a).indexOf(b)}function C(a,b){for(var d in a){var e=a[d];if(!B(e,"-")&&i[e]!==c)return b=="pfx"?e:!0}return!1}function D(a,b,d){for(var e in a){var f=b[a[e]];if(f!==c)return d===!1?a[e]:A(f,"function")?f.bind(d||b):f}return!1}function E(a,b,c){var d=a.charAt(0).toUpperCase()+a.slice(1),e=(a+" "+n.join(d+" ")+d).split(" ");return A(b,"string")||A(b,"undefined")?C(e,b):(e=(a+" "+o.join(d+" ")+d).split(" "),D(e,b,c))}var d="2.6.2",e={},f=b.documentElement,g="modernizr",h=b.createElement(g),i=h.style,j,k={}.toString,l=" -webkit- -moz- -o- -ms- ".split(" "),m="Webkit Moz O ms",n=m.split(" "),o=m.toLowerCase().split(" "),p={},q={},r={},s=[],t=s.slice,u,v=function(a,c,d,e){var h,i,j,k,l=b.createElement("div"),m=b.body,n=m||b.createElement("body");if(parseInt(d,10))while(d--)j=b.createElement("div"),j.id=e?e[d]:g+(d+1),l.appendChild(j);return h=["&#173;",'<style id="s',g,'">',a,"</style>"].join(""),l.id=g,(m?l:n).innerHTML+=h,n.appendChild(l),m||(n.style.background="",n.style.overflow="hidden",k=f.style.overflow,f.style.overflow="hidden",f.appendChild(n)),i=c(l,a),m?l.parentNode.removeChild(l):(n.parentNode.removeChild(n),f.style.overflow=k),!!i},w={}.hasOwnProperty,x;!A(w,"undefined")&&!A(w.call,"undefined")?x=function(a,b){return w.call(a,b)}:x=function(a,b){return b in a&&A(a.constructor.prototype[b],"undefined")},Function.prototype.bind||(Function.prototype.bind=function(b){var c=this;if(typeof c!="function")throw new TypeError;var d=t.call(arguments,1),e=function(){if(this instanceof e){var a=function(){};a.prototype=c.prototype;var f=new a,g=c.apply(f,d.concat(t.call(arguments)));return Object(g)===g?g:f}return c.apply(b,d.concat(t.call(arguments)))};return e}),p.touch=function(){var c;return"ontouchstart"in a||a.DocumentTouch&&b instanceof DocumentTouch?c=!0:v(["@media (",l.join("touch-enabled),("),g,")","{#modernizr{top:9px;position:absolute}}"].join(""),function(a){c=a.offsetTop===9}),c},p.csstransitions=function(){return E("transition")},p.video=function(){var a=b.createElement("video"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('video/ogg; codecs="theora"').replace(/^no$/,""),c.h264=a.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/,""),c.webm=a.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/,"")}catch(d){}return c},p.audio=function(){var a=b.createElement("audio"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),c.mp3=a.canPlayType("audio/mpeg;").replace(/^no$/,""),c.wav=a.canPlayType('audio/wav; codecs="1"').replace(/^no$/,""),c.m4a=(a.canPlayType("audio/x-m4a;")||a.canPlayType("audio/aac;")).replace(/^no$/,"")}catch(d){}return c};for(var F in p)x(p,F)&&(u=F.toLowerCase(),e[u]=p[F](),s.push((e[u]?"":"no-")+u));return e.addTest=function(a,b){if(typeof a=="object")for(var d in a)x(a,d)&&e.addTest(d,a[d]);else{a=a.toLowerCase();if(e[a]!==c)return e;b=typeof b=="function"?b():b,typeof enableClasses!="undefined"&&enableClasses&&(f.className+=" "+(b?"":"no-")+a),e[a]=b}return e},y(""),h=j=null,e._version=d,e._prefixes=l,e._domPrefixes=o,e._cssomPrefixes=n,e.testProp=function(a){return C([a])},e.testAllProps=E,e.testStyles=v,e}(this,this.document);

(function(c){var M=function(a){a=c.extend(c.Event(a),function(){for(var a={},z=c.address.parameterNames(),d=0,e=z.length;d<e;d++)a[z[d]]=c.address.parameter(z[d]);return{value:c.address.value(),path:c.address.path(),pathNames:c.address.pathNames(),parameterNames:z,parameters:a,queryString:c.address.queryString()}}.call(c.address));c(c.address).trigger(a);return a},u=function(a){return Array.prototype.slice.call(a)},A=function(a,b,z){c().bind.apply(c(c.address),Array.prototype.slice.call(arguments)); return c.address},$=function(a,b){c().unbind.apply(c(c.address),Array.prototype.slice.call(arguments));return c.address},B=function(){return v.pushState&&d.state!==j},Q=function(){return("/"+k.pathname.replace(RegExp(d.state),"")+k.search+(I()?"#"+I():"")).replace(P,"index.html")},I=function(){var a=k.href.indexOf("#");return-1!=a?p(k.href.substr(a+1),h):""},q=function(){return B()?Q():I()},N=function(a){a=a.toString();return(d.strict&&"/"!=a.substr(0,1)?"/":"")+a},p=function(a,b){return d.crawlable&&b?(""!== a?"!":"")+a:a.replace(/^\!/,"")},r=function(a,b){return parseInt(a.css(b),10)},E=function(){if(!t){var a=q();decodeURI(e)!=decodeURI(a)&&(s&&7>w?k.reload():(s&&(!C&&d.history)&&n(J,50),_old=e,e=a,D(h)))}},D=function(a){var b=M(R);a=M(a?S:T);n(aa,10);if(b.isDefaultPrevented()||a.isDefaultPrevented())e=_old,B()?v.popState({},"",d.state.replace(/\/$/,"")+(""===e?"/":e)):(t=l,x?d.history?k.hash="#"+p(e,l):k.replace("#"+p(e,l)):e!=q()&&(d.history?k.hash="#"+p(e,l):k.replace("#"+p(e,l))),s&&!C&&d.history&& n(J,50),x?n(function(){t=h},1):t=h)},aa=function(){if("null"!==d.tracker&&d.tracker!==F){var a=c.isFunction(d.tracker)?d.tracker:f[d.tracker],b=(k.pathname+k.search+(c.address&&!B()?c.address.value():"")).replace(/\/\//,"/").replace(/^\/$/,"");c.isFunction(a)?a(b):c.isFunction(f.urchinTracker)?f.urchinTracker(b):f.pageTracker!==j&&c.isFunction(f.pageTracker._trackPageview)?f.pageTracker._trackPageview(b):f._gaq!==j&&c.isFunction(f._gaq.push)&&f._gaq.push(["_trackPageview",decodeURI(b)])}},J=function(){var a= "javascript:"+h+";document.open();document.writeln('<html><head><title>"+m.title.replace(/\'/g,"\\'")+"</title><script>var "+y+' = "'+encodeURIComponent(q()).replace(/\'/g,"\\'")+(m.domain!=k.hostname?'";document.domain="'+m.domain:"")+"\";\x3c/script></head></html>');document.close();";7>w?g.src=a:g.contentWindow.location.replace(a)},V=function(){if(G&&-1!=U){var a,b,c=G.substr(U+1).split("&");for(a=0;a<c.length;a++)b=c[a].split("="),/^(autoUpdate|crawlable|history|strict|wrap)$/.test(b[0])&&(d[b[0]]= isNaN(b[1])?/^(true|yes)$/i.test(b[1]):0!==parseInt(b[1],10)),/^(state|tracker)$/.test(b[0])&&(d[b[0]]=b[1]);G=F}_old=e;e=q()},X=function(){if(!W){W=l;V();var a=function(){var a,b=c("a"),e=b.size(),f=-1,j=function(){++f!=e&&(a=c(b.get(f)),a.is('[rel*="address:"]')&&a.address('[rel*="address:"]'),n(j,1))};n(j,1);if(d.crawlable){var h=k.pathname.replace(/\/$/,"");-1!=c("body").html().indexOf("_escaped_fragment_")&&c('a[href]:not([href^=http]), a[href*="'+document.domain+'"]').each(function(){var a= c(this).attr("href").replace(/^http:/,"").replace(RegExp(h+"/?$"),"");(""===a||-1!=a.indexOf("_escaped_fragment_"))&&c(this).attr("href","#"+encodeURI(decodeURIComponent(a.replace(/\/(.*)\?_escaped_fragment_=(.*)$/,"!$2"))))})}},b=c("body").ajaxComplete(a);a();d.wrap&&(c("body > *").wrapAll('<div style="padding:'+(r(b,"marginTop")+r(b,"paddingTop"))+"px "+(r(b,"marginRight")+r(b,"paddingRight"))+"px "+(r(b,"marginBottom")+r(b,"paddingBottom"))+"px "+(r(b,"marginLeft")+r(b,"paddingLeft"))+'px;" />').parent().wrap('<div id="'+ y+'" style="height:100%;overflow:auto;position:relative;'+(x&&!window.statusbar.visible?"resize:both;":"")+'" />'),c("html, body").css({height:"100%",margin:0,padding:0,overflow:"hidden"}),x&&c('<style type="text/css" />').appendTo("head").text("#"+y+"::-webkit-resizer { background-color: #fff; }"));s&&!C&&(a=m.getElementsByTagName("frameset")[0],g=m.createElement((a?"":"i")+"frame"),g.src="javascript:"+h,a?(a.insertAdjacentElement("beforeEnd",g),a[a.cols?"cols":"rows"]+=",0",g.noResize=l,g.frameBorder= g.frameSpacing=0):(g.style.display="none",g.style.width=g.style.height=0,g.tabIndex=-1,m.body.insertAdjacentElement("afterBegin",g)),n(function(){c(g).bind("load",function(){var a=g.contentWindow;_old=e;e=a[y]!==j?a[y]:"";e!=q()&&(D(h),k.hash=p(e,l))});g.contentWindow[y]===j&&J()},50));n(function(){M("init");D(h)},1);B()||(s&&7<w||!s&&C?f.addEventListener?f.addEventListener(H,E,h):f.attachEvent&&f.attachEvent("on"+H,E):ba(E,50));"state"in window.history&&c(window).trigger("popstate")}},j,F=null,y= "jQueryAddress",H="hashchange",R="change",S="internalChange",T="externalChange",l=!0,h=!1,d={autoUpdate:l,crawlable:h,history:l,strict:l,wrap:h},K=navigator.userAgent.toLowerCase(),w=9,s=-1!==K.search("msie"),x=-1!==K.search("webkit"),f;try{f=top.document!==j&&top.document.title!==j?top:window}catch(da){f=window}var m=f.document,v=f.history,k=f.location,ba=setInterval,n=setTimeout,P=/\/{2,9}/g,C="on"+H in f,g,G=c("script:last").attr("src"),U=G?G.indexOf("?"):-1,O=m.title,t=h,W=h,Y=l,L=h,e=q();_old= e;if(s){w=parseFloat(K.substr(K.indexOf("msie")+4));m.documentMode&&m.documentMode!=w&&(w=8!=m.documentMode?7:8);var Z=m.onpropertychange;m.onpropertychange=function(){Z&&Z.call(m);m.title!=O&&-1!=m.title.indexOf("#"+q())&&(m.title=O)}}v.navigationMode&&(v.navigationMode="compatible");if("complete"==document.readyState)var ca=setInterval(function(){c.address&&(X(),clearInterval(ca))},50);else V(),c(X);c(window).bind("popstate",function(){decodeURI(e)!=decodeURI(q())&&(_old=e,e=q(),D(h))}).bind("unload", function(){f.removeEventListener?f.removeEventListener(H,E,h):f.detachEvent&&f.detachEvent("on"+H,E)});c.address={bind:function(a,b,c){return A.apply(this,u(arguments))},unbind:function(a,b){return $.apply(this,u(arguments))},init:function(a,b){return A.apply(this,["init"].concat(u(arguments)))},change:function(a,b){return A.apply(this,[R].concat(u(arguments)))},internalChange:function(a,b){return A.apply(this,[S].concat(u(arguments)))},externalChange:function(a,b){return A.apply(this,[T].concat(u(arguments)))}, baseURL:function(){var a=k.href;-1!=a.indexOf("#")&&(a=a.substr(0,a.indexOf("#")));/\/$/.test(a)&&(a=a.substr(0,a.length-1));return a},autoUpdate:function(a){return a!==j?(d.autoUpdate=a,this):d.autoUpdate},crawlable:function(a){return a!==j?(d.crawlable=a,this):d.crawlable},history:function(a){return a!==j?(d.history=a,this):d.history},state:function(a){if(a!==j){d.state=a;var b=Q();d.state!==j&&(v.pushState?"/#/"==b.substr(0,3)&&k.replace(d.state.replace(/^\/$/,"")+b.substr(2)):"/"!=b&&b.replace(/^\/#/, "")!=I()&&n(function(){k.replace(d.state.replace(/^\/$/,"")+"/#"+b)},1));return this}return d.state},strict:function(a){return a!==j?(d.strict=a,this):d.strict},tracker:function(a){return a!==j?(d.tracker=a,this):d.tracker},wrap:function(a){return a!==j?(d.wrap=a,this):d.wrap},update:function(){L=l;this.value(e);L=h;return this},title:function(a){return a!==j?(n(function(){O=m.title=a;Y&&(g&&g.contentWindow&&g.contentWindow.document)&&(g.contentWindow.document.title=a,Y=h)},50),this):m.title},value:function(a){if(a!== j){a=N(a);"/"==a&&(a="");if(e==a&&!L)return;_old=e;e=a;if(d.autoUpdate||L)if(D(l),B())v[d.history?"pushState":"replaceState"]({},"",d.state.replace(/\/$/,"")+(""===e?"/":e));else t=l,x?d.history?k.hash="#"+p(e,l):k.replace("#"+p(e,l)):e!=q()&&(d.history?k.hash="#"+p(e,l):k.replace("#"+p(e,l))),s&&!C&&d.history&&n(J,50),x?n(function(){t=h},1):t=h;return this}return N(e)},path:function(a){if(a!==j){var b=this.queryString(),c=this.hash();this.value(a+(b?"?"+b:"")+(c?"#"+c:""));return this}return N(e).split("#")[0].split("?")[0]}, pathNames:function(){var a=this.path(),b=a.replace(P,"/").split("/");("/"==a.substr(0,1)||0===a.length)&&b.splice(0,1);"/"==a.substr(a.length-1,1)&&b.splice(b.length-1,1);return b},queryString:function(a){if(a!==j){var b=this.hash();this.value(this.path()+(a?"?"+a:"")+(b?"#"+b:""));return this}a=e.split("?");return a.slice(1,a.length).join("?").split("#")[0]},parameter:function(a,b,d){var e,f;if(b!==j){var h=this.parameterNames();f=[];b=b===j||b===F?"":b.toString();for(e=0;e<h.length;e++){var k=h[e], g=this.parameter(k);"string"==typeof g&&(g=[g]);k==a&&(g=b===F||""===b?[]:d?g.concat([b]):[b]);for(var l=0;l<g.length;l++)f.push(k+"="+g[l])}-1==c.inArray(a,h)&&(b!==F&&""!==b)&&f.push(a+"="+b);this.queryString(f.join("&"));return this}if(b=this.queryString()){d=[];f=b.split("&");for(e=0;e<f.length;e++)b=f[e].split("="),b[0]==a&&d.push(b.slice(1).join("="));if(0!==d.length)return 1!=d.length?d:d[0]}},parameterNames:function(){var a=this.queryString(),b=[];if(a&&-1!=a.indexOf("="))for(var a=a.split("&"), d=0;d<a.length;d++){var e=a[d].split("=")[0];-1==c.inArray(e,b)&&b.push(e)}return b},hash:function(a){if(a!==j)return this.value(e.split("#")[0]+(a?"#"+a:"")),this;a=e.split("#");return a.slice(1,a.length).join("#")}};c.fn.address=function(a){var b;"string"==typeof a&&(b=a,a=void 0);c(this).attr("address")||c(b?b:this).live("click",function(b){if(b.shiftKey||b.ctrlKey||b.metaKey||2==b.which)return!0;c(this).is("a")&&(b.preventDefault(),b=a?a.call(this):/address:/.test(c(this).attr("rel"))?c(this).attr("rel").split("address:")[1].split(" ")[0]: void 0!==c.address.state()&&!/^\/?$/.test(c.address.state())?c(this).attr("href").replace(RegExp("^(.*"+c.address.state()+"|\\.)"),""):c(this).attr("href").replace(/^(#\!?|\.)/,""),c.address.value(b))}).live("submit",function(b){c(this).is("form")&&(b.preventDefault(),b=c(this).attr("action"),b=a?a.call(this):(-1!=b.indexOf("?")?b.replace(/&$/,""):b+"?")+c(this).serialize(),c.address.value(b))}).attr("address",!0);return this}})(jQuery);

(function(){function z(){G=!1;for(V=t;V--;){A=h[V];if(!A)break;A.isCSS||(A.cycle()?G=!0:A.stop(!1,A.complete,!1,!0))}O?G?O(z):(H(z),A=F=null):G?u||(W=setInterval(z,na)):(clearInterval(W),A=F=null);u=G}function X(a){a.cjFadeIn?(delete a.cjFadeIn,a.style.opacity=1,a.style.visibility="visible"):a.cjFadeOut&&(delete a.cjFadeOut,a.style.display="none")}function Y(){u||z()}function P(a,b,c,d){h.splice(h.indexOf(a),1);t=h.length;c&&c(b,d)}function fa(a){a.stopPropagation();(a=this.cj)&&a.stop(a.complete)} function ga(a,b,c){var d={},n;b=b.to;for(n in b)b.hasOwnProperty(n)&&(d[n]=b[n]);Jacked.tween(a,d,c)}function ha(a,b){return this["webkit"+a+b]||this["moz"+a+b]||this["o"+a+b]||this[a+b]||null}function ia(a){var b;if(b=oa.exec(a))return[parseInt(b[1],16),parseInt(b[2],16),parseInt(b[3],16),1];if(b=pa.exec(a))return[17*parseInt(b[1],16),17*parseInt(b[2],16),17*parseInt(b[3],16),1]}function ja(){for(var a in I)if(I.hasOwnProperty(a)&&a===Q){Z=I[a];break}}function qa(){if("ontouchend"in document){if(-1!== y.search("iphone")||-1!==y.search("ipad"))return"ios";if(-1!==y.search("android")||-1!==y.search("applewebkit"))return"android";if(-1!==y.search("msie"))return"winMobile"}return null}var R=window.getComputedStyle?document.defaultView.getComputedStyle:null,O=ha("Request","AnimationFrame"),H=ha("Cancel","AnimationFrame"),s=document.createElement("span").style,y=navigator.userAgent.toLowerCase(),J="Quint.easeOut",K=500,f;f=y.search("msie");-1===f?f=[33.3,0]:(f=parseInt(y.substr(f+4,f+5),10),f=[9<=f? 16.6:33.3,f]);var h=[],l="WebkitTransition"in s?["webkitTransitionEnd","-webkit-transition",-1!==y.search("chrome")?"chrome":"safari"]:"MozTransition"in s?["transitionend","-moz-transition","firefox"]:"MSTransition"in s?["transitionend","-ms-transition","ie"]:"OTransition"in s?["otransitionend","-o-transition","opera"]:"transition"in s?["transitionend","transition",null]:null,u,L,t=0,ka,Q,Z,$,W,F,G,V,aa,A,ba,S,T,ca,la,ra=/,/g,sa=/[A-Z]/g,ta=/ cj-tween/g,ua=/^\s+|\s+$/g,va=/{props}/,wa=/{easing}/, xa=/{duration}/,ma=/(right|bottom|center)/,pa=/#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])/,oa=/#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})/,I={ios:!1,android:!1,winMobile:!1,firefox:!1,chrome:!1,safari:!1,opera:!1,ie:!1},na=f[0];f=f[1];var E=0!==f&&9>f;if(!O||!H)O=H=null;if(l){var U=l[1],da=document.createElement("style");L="WebkitTransform"in s?"WebkitTransform":"MozTransform"in s?"MozTransform":"msTransform"in s?"msTransform":"OTransform"in s?"OTransform":"transform"in s?"transform":null;S= qa();da.type="text/css";da.innerHTML=".cj-tween{"+U+"-property:none !important;}";document.getElementsByTagName("head")[0].appendChild(da);ka=U+"-property:{props};"+U+"-duration:{duration}s;"+U+"-timing-function:cubic-bezier({easing});";Q=!S?l[2]:S;la=/(chrome|opera)/.test(Q);l=l[0];ja()}if(E)if(8===f)ba=/(#|rgb|red|blue|green|black|white|yellow|pink|gray|grey|orange|purple)/,T=/(auto|inherit|rgb|%|#|red|blue|green|black|white|yellow|pink|gray|grey|orange|purple)/,ca={red:"#F00",blue:"#00F",green:"#0F0", black:"#000",white:"#FFF",yellow:"#FF0",pink:"#FFC0CB",gray:"#808080",grey:"#808080",orange:"#FFA500",purple:"#800080"};else return;else ba=/(#|rgb)/,T=/(auto|inherit|rgb|%|#)/;Array.prototype.indexOf||(Array.prototype.indexOf=function(a){for(var b=this.length;b--;)if(this[b]===a)return b;return-1});Date.now||(Date.now=function(){return+new Date});this.Jacked={ready:function(a){window.onload=a},setEngines:function(a){for(var b in a)I.hasOwnProperty(b)&&(I[b]=a[b]);ja()},tween:function(a,b,c){a.cj&& a.cj.stop();c||(c={});c.mode?"timeline"===c.mode||!l?new CJ(a,b,c):new CJcss(a,b,c):!l||!Z?new CJ(a,b,c):new CJcss(a,b,c)},fadeIn:function(a,b){b||(b={});b.fadeIn=!0;Jacked.tween(a,{opacity:1},b)},fadeOut:function(a,b){b||(b={});b.fadeOut=!0;Jacked.tween(a,{opacity:0},b)},percentage:function(a,b,c){a.cj&&a.cj.stop();if("from"in b&&"to"in b){c||(c={});var d=c.mode;d?"css3"===d&&l?ga(a,b,c):new CJpercentage(a,b,c):l&&Z?ga(a,b,c):new CJpercentage(a,b,c)}},special:function(a,b){a.cj&&a.cj.stop();new CJspecial(a, b)},transform:function(a,b,c,d){a.cj&&a.cj.stop();l&&L?(c||(c={}),c.mode="css3","transform"in b&&(b[L]=b.transform,delete b.transform),new Jacked.tween(a,b,c)):d&&new Jacked.tween(a,d,c)},stopTween:function(a,b,c){(a=a.cj)&&(a.isCSS?a.stop(c):a.stop(b,c))},stopAll:function(a){H?H(z):clearInterval(W);var b=h.length,c;for(t=0;b--;)c=h[b],c.isCSS?c.stop(!1,!0):c.stop(a,!1,!0,!0);h=[];u=!1;F=null},setEase:function(a){var b=a.toLowerCase().split(".");2>b.length||M[b[0]]&&M[b[0]][b[1]]&&(J=a)},setDuration:function(a){isNaN(a)|| (K=a)},getMobile:function(){return S},getIE:function(){return E},getBrowser:function(){return Q},getTransition:function(){return l},getEngine:function(){return u},getTransform:function(){return L}};this.CJ=function(a,b,c){t=h.length;var d=a.cj=h[t++]=this;this.runner=function(n){d.obj=a;d.complete=c.callback;d.completeParams=c.callbackParams;if(!0===n)d.transitions=[];else{var m;n=0;var g=[],e=a.style,p=c.duration||K,r=(c.ease||J).toLowerCase().split("."),r=M[r[0]][r[1]];e.visibility="visible";c.fadeIn&& (e.display=c.display||"block",e.opacity=0);E&&"opacity"in b&&(e.filter="progid:DXImageTransform.Microsoft.Alpha(opacity="+(c.fadeIn?0:100)+")");b.borderColor&&!la&&(e=b.borderColor,b.borderTopColor=e,b.borderRightColor=e,b.borderBottomColor=e,b.borderLeftColor=e,delete b.borderColor);for(m in b)b.hasOwnProperty(m)&&("backgroundPosition"!==m?g[n++]=d.animate(a,m,b[m],p,r):g[n++]=d.bgPosition(a,m,b[m],p,r));d.transitions=g;u?setTimeout(Y,10):z()}};c.fadeOut?a.cjFadeOut=!0:c.fadeIn&&(a.cjFadeIn=!0); 0===c.duration?(this.runner(!0),this.stop()):c.delay?this.delayed=setTimeout(this.runner,c.delay):this.runner()};CJ.prototype.cycle=function(){F=this.transitions;if(!F)return!0;aa=F.length;for($=!1;aa--;)F[aa]()&&($=!0);return $};CJ.prototype.animate=function(a,b,c,d,n){function m(){t=Date.now();ea+=t-f;e=n(ea,h,N,d);f=t;e=!k||E?q?e+0.5|0:e-0.5|0:e.toFixed(2);if(e===l)return!0;if(q){if(e>=c)return p[b]=v,!1}else if(e<=c)return p[b]=v,!1;l=e;p[b]=e+B;return!0}function g(){return!1}var e,p,r,k="opacity"=== b,j=!0;!k||!E?(p=a.style,r=p[b],e=""!==r?r:R?R(a,null)[b]:a.currentStyle[b]):(p=a.filters.item("DXImageTransform.Microsoft.Alpha"),b="Opacity",e=p[b],c*=100);if(T.test(e))if(ba.test(e)){if(-1===c.search("rgb"))return E&&e in ca&&(e=ca[e]),this.color(a,b,e,c,d,n);j=!1}else e=0;else e=parseFloat(e);var B=!k?"px":0,N=c-e,q=e<c,f=Date.now(),h=e,ea=0,v,l,t;v=c+B;!k||E?q?c-=0.25:c+=0.25:q?c-=0.025:c+=0.025;if(j)return m.stored=[b,v],m;g.stored=[b,v];return g};CJ.prototype.color=function(a,b,c,d,n,m){function g(){f= Date.now();N+=f-r;r=f;c=m(N,0,1,n);if(0.99>c){q=-1;for(l="rgb(";3>++q;)h=j[q],l+=h+c*(B[q]-h)|0,2>q&&(l+=",");k[b]=l+")";return!0}k[b]=p;return!1}function e(){return!1}var p=(-1!==d.search("#")?"":"#")+d,r=Date.now(),k=a.style;a=!1;var j=[],B=[],N=0,q=-1,f,h,l;if(-1!==c.search("rgb")){q=-1;for(j=c.split("(")[1].split(")")[0].split(",");3>++q;)j[q]=parseInt(j[q],10)}else j=ia(c);B=ia(d);for(q=-1;3>++q;)j[q]!==B[q]&&(a=!0);if(a)return g.stored=[b,p],g;e.stored=[b,p];return e};CJ.prototype.bgPosition= function(a,b,c,d,n){function m(){y=Date.now();B+=y-r;r=y;u=n(B,0,1,d);if(0.99>u){v&&(C=w+z*u+0.5|0);s&&(D=x+A*u+0.5|0);if(C===h&&D===t)return!0;h=C;t=D;j?(e.backgroundPositionX=C+"px",e.backgroundPositionY=D+"px"):e.backgroundPosition=C+"px "+D+"px";return!0}j?(e.backgroundPositionX=f,e.backgroundPositionY=q):e[b]=l;return!1}function g(){return!1}var e=a.style,p=e[b],r=Date.now(),k=!0,j=E,B=0,f,q,l,h,t,v,s,z,A,u,y,C,D,w,x;if(j){w=a.currentStyle.backgroundPositionX;x=a.currentStyle.backgroundPositionY; if(ma.test(w)||ma.test(x))k=!1;"left"===w&&(w=0);"top"===x&&(x=0)}else u=""!==p?p.split(" "):R(a,null).backgroundPosition.split(" "),w=u[0],x=u[1];-1!==w.search("%")&&"0%"!==w&&(k=!1);-1!==x.search("%")&&"0%"!==x&&(k=!1);w=parseInt(w,10);x=parseInt(x,10);c.hasOwnProperty("x")?(C=c.x,v=!0):(C=w,v=!1);c.hasOwnProperty("y")?(D=c.y,s=!0):(D=x,s=!1);v=v&&w!==C;s=s&&x!==D;!v&&!s&&(k=!1);z=C-w;A=D-x;f=C+"px";q=D+"px";l=!j?f+" "+q:[f,q];if(k)return m.stored=[b,l],m;g.stored=[b,l];return g};CJ.prototype.stop= function(a,b,c){var d=this.obj;if(d){delete d.cj;if(a){a=this.transitions;for(var n=a.length,m,g;n--;)if(m=a[n].stored,g=m[0],E)switch(g){case "Opacity":d.filters.item("DXImageTransform.Microsoft.Alpha").Opacity=100*m[1];break;case "backgroundPosition":g=d.style;g.backgroundPositionX=m[1][0];g.backgroundPositionY=m[1][1];break;default:d.style[g]=m[1]}else d.style[g]=m[1]}X(d);b&&(b=this.complete);c||P(this,d,b,this.completeParams)}else clearTimeout(this.delayed),this.runner(!0),this.stop(a,b)};this.CJcss= function(a,b,c){t=h.length;var d=a.cj=h[t++]=this,n=a.style,m=L in b;this.isCSS=!0;this.storage=a;this.complete=c.callback;this.completeParams=c.callbackParams;this.runner=function(){c.cssStep?(n.visibility="visible",d.stepped=setTimeout(d.step,30)):d.step()};this.step=function(g){d.obj=a;if(!0===g)d.moves="";else{var e,p,r,k,j,f=0,h;h=[];var q=[];g=a.getAttribute("style")||"";var t=c.duration||K,s=(c.ease||J).toLowerCase().split(".");for(p in b)if(b.hasOwnProperty(p)){r=p;if(j=r.match(sa))for(e= j.length;e--;)k=j[e],r=r.replace(RegExp(k,"g"),"-"+k.toLowerCase());k=e=b[p];j="backgroundPosition"===p;if(!T.test(k)&&"opacity"!==p&&!j&&!m)k+="px;";else if(j){k=e.x;e=e.y;j=isNaN(k);var u=isNaN(e);if(!j&&!u)k+="px",e+="px";else{var v=n.backgroundPosition,v=""!==v?v.split(" "):R(a,null).backgroundPosition.split(" ");!j?k+="px":k=v[0];!u?e+="px":e=v[1]}k=k+" "+e+";"}else k+=";";h[f]=r+":"+k;q[f++]=r;if(g&&(j=g.search(r),-1!==j)){r=g.length-1;for(e=j-1;++e<r&&";"!==g[e];);g=g.split(g.substring(j,e+ 1)).join("")}}d.moves=p=ka.replace(va,q.toString()).replace(xa,(0.001*t).toFixed(2)).replace(wa,ya[s[0]][s[1]]);h=h.toString();m||(h=h.replace(ra,""));a.className=a.className.replace(ta,"");a.addEventListener(l,fa,!1);a.setAttribute("style",g.replace(ua,"")+p+h)}};c.fadeIn?(a.cjFadeIn=!0,n.display=c.display||"block",n.opacity=0):c.fadeOut&&(a.cjFadeOut=!0);0===c.duration?(this.runner(!0),this.stop()):(c.cssStep||(n.visibility="visible"),this.delayed=c.delay?setTimeout(this.runner,30<c.delay?c.delay: 30):setTimeout(this.runner,30))};CJcss.prototype.stop=function(a,b){var c=this.obj;a&&(a=this.complete);c?(delete c.cj,c.removeEventListener(l,fa,!1),c.className+=" cj-tween",c.setAttribute("style",c.getAttribute("style").split(this.moves).join(";").split(";;").join(";")),X(c)):(clearTimeout(this.delayed),clearTimeout(this.stepped),X(this.storage));b||P(this,c,a,this.completeParams)};this.CJpercentage=function(a,b,c){t=h.length;var d=a.cj=h[t++]=this;this.obj=a;this.complete=c.callback;this.completeParams= c.callbackParams;this.runner=function(){var n=0,m=[],g,e,p,h=b.to,k=b.from,j=c.duration||K,f=(c.ease||J).toLowerCase().split("."),f=M[f[0]][f[1]];for(g in k)k.hasOwnProperty(g)&&(p=parseInt(h[g],10),e=parseInt(k[g],10),m[n++]=[p>e,g,p,e]);a.style.visibility="visible";d.transitions=d.animate(a,m,j,f);u?setTimeout(Y,10):z()};0===c.duration?this.stop():c.delay?this.delayed=setTimeout(this.runner,c.delay):this.runner()};CJpercentage.prototype.cycle=function(){return this.transitions()};CJpercentage.prototype.animate= function(a,b,c,d){var n,m=0,g=Date.now(),e,f,h=a.style,k=b.length,j,l;return function(a){e=Date.now();m+=e-g;g=e;n=d(m,0,1,c);f=k;if(0.99>n&&!a){for(;f--;)j=b[f],l=j[3],h[j[1]]=j[0]?l+(j[2]-l)*n+"%":l-(l-j[2])*n+"%";return!0}for(;f--;)j=b[f],h[j[1]]=j[2]+"%";return!1}};CJpercentage.prototype.stop=function(a,b,c){"delayed"in this&&clearTimeout(this.delayed);var d=this.obj;delete d.cj;a&&this.transitions&&this.transitions(!0);b&&(b=this.complete);c||P(this,d,b,this.completeParams)};this.CJspecial=function(a, b){if(b&&b.callback){t=h.length;h[t++]=a.cj=this;var c=this.complete=b.callback,d=b.ease||J,d=d.toLowerCase().split("."),d=M[d[0]][d[1]];this.obj=a;this.transitions=this.numbers(a,b.duration||K,d,c);u?setTimeout(Y,10):z()}};CJspecial.prototype.cycle=function(){return this.transitions()};CJspecial.prototype.numbers=function(a,b,c,d){var f,h=0,g=Date.now(),e;return function(){e=Date.now();h+=e-g;g=e;f=c(h,0,1,b);return 0.97>f?(d(a,f),!0):!1}};CJspecial.prototype.stop=function(a,b,c,d){var f=this.obj; f&&(delete f.cj,c||P(this),(a||d)&&this.complete(f,1,b))};var M={linear:{easenone:function(a,b,c,d){return c*a/d+b},easein:function(a,b,c,d){return c*a/d+b},easeout:function(a,b,c,d){return c*a/d+b},easeinout:function(a,b,c,d){return c*a/d+b}},quint:{easeout:function(a,b,c,d){return c*((a=a/d-1)*a*a*a*a+1)+b},easein:function(a,b,c,d){return c*(a/=d)*a*a*a*a+b},easeinout:function(a,b,c,d){return 1>(a/=d/2)?c/2*a*a*a*a*a+b:c/2*((a-=2)*a*a*a*a+2)+b}},quad:{easein:function(a,b,c,d){return c*(a/=d)*a+ b},easeout:function(a,b,c,d){return-c*(a/=d)*(a-2)+b},easeinout:function(a,b,c,d){return 1>(a/=d/2)?c/2*a*a+b:-c/2*(--a*(a-2)-1)+b}},quart:{easein:function(a,b,c,d){return c*(a/=d)*a*a*a+b},easeout:function(a,b,c,d){return-c*((a=a/d-1)*a*a*a-1)+b},easeinout:function(a,b,c,d){return 1>(a/=d/2)?c/2*a*a*a*a+b:-c/2*((a-=2)*a*a*a-2)+b}},cubic:{easein:function(a,b,c,d){return c*(a/=d)*a*a+b},easeout:function(a,b,c,d){return c*((a=a/d-1)*a*a+1)+b},easeinout:function(a,b,c,d){return 1>(a/=d/2)?c/2*a*a*a+ b:c/2*((a-=2)*a*a+2)+b}},circ:{easein:function(a,b,c,d){return-c*(Math.sqrt(1-(a/=d)*a)-1)+b},easeout:function(a,b,c,d){return c*Math.sqrt(1-(a=a/d-1)*a)+b},easeinout:function(a,b,c,d){return 1>(a/=d/2)?-c/2*(Math.sqrt(1-a*a)-1)+b:c/2*(Math.sqrt(1-(a-=2)*a)+1)+b}},sine:{easein:function(a,b,c,d){return-c*Math.cos(a/d*(Math.PI/2))+c+b},easeout:function(a,b,c,d){return c*Math.sin(a/d*(Math.PI/2))+b},easeinout:function(a,b,c,d){return-c/2*(Math.cos(Math.PI*a/d)-1)+b}},expo:{easein:function(a,b,c,d){return 0=== a?b:c*Math.pow(2,10*(a/d-1))+b},easeout:function(a,b,c,d){return a===d?b+c:c*(-Math.pow(2,-10*a/d)+1)+b},easeinout:function(a,b,c,d){return 0===a?b:a===d?b+c:1>(a/=d/2)?c/2*Math.pow(2,10*(a-1))+b:c/2*(-Math.pow(2,-10*--a)+2)+b}}},ya={linear:{easenone:"0.250, 0.250, 0.750, 0.750",easein:"0.420, 0.000, 1.000, 1.000",easeout:"0.000, 0.000, 0.580, 1.000",easeinout:"0.420, 0.000, 0.580, 1.000"},quint:{easein:"0.755, 0.050, 0.855, 0.060",easeout:"0.230, 1.000, 0.320, 1.000",easeinout:"0.860, 0.000, 0.070, 1.000"}, quad:{easein:"0.550, 0.085, 0.680, 0.530",easeout:"0.250, 0.460, 0.450, 0.940",easeinout:"0.455, 0.030, 0.515, 0.955"},quart:{easein:"0.895, 0.030, 0.685, 0.220",easeout:"0.165, 0.840, 0.440, 1.000",easeinout:"0.770, 0.000, 0.175, 1.000"},cubic:{easein:"0.550, 0.055, 0.675, 0.190",easeout:"0.215, 0.610, 0.355, 1.000",easeinout:"0.645, 0.045, 0.355, 1.000"},circ:{easein:"0.600, 0.040, 0.980, 0.335",easeout:"0.075, 0.820, 0.165, 1.000",easeinout:"0.785, 0.135, 0.150, 0.860"},sine:{easein:"0.470, 0.000, 0.745, 0.715", easeout:"0.390, 0.575, 0.565, 1.000",easeinout:"0.445, 0.050, 0.550, 0.950"},expo:{easein:"0.950, 0.050, 0.795, 0.035",easeout:"0.190, 1.000, 0.220, 1.000",easeinout:"1.000, 0.000, 0.000, 1.000"}};f=s=null})(window);

(function(){function I(){this.a=this.b=this.g=this.r=0;this.next=null}var K=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374, 367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312, 310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259],L=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23, 23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];window.StackBlurImage=function(m,E,r){var y=document.getElementById(m),m=y.naturalWidth,w=y.naturalHeight,c=document.getElementById(E);c.style.width= m+"px";c.style.height=w+"px";c.width=m;c.height=w;c=c.getContext("2d");c.clearRect(0,0,m,w);c.drawImage(y,0,0);if(!(isNaN(r)||1>r))if(!(isNaN(r)||1>r)){var r=r|0,E=document.getElementById(E).getContext("2d"),y=E.getImageData(0,0,m,w),c=y.data,s,x,a,d,e,F,f,g,h,t,u,v,i,j,k,n,p,q,z,b=a=null,A=K[r],B=L[r];s=r+r+1;var G=m-1,H=w-1,l=r+1,C=l*(l+1)/2,D=new I,b=D;for(a=1;a<s;a++)if(b=b.next=new I,a==l)var J=b;b.next=D;for(x=F=e=0;x<w;x++){i=j=k=f=g=h=0;t=l*(n=c[e]);u=l*(p=c[e+1]);v=l*(q=c[e+2]);f+=C*n;g+= C*p;h+=C*q;b=D;for(a=0;a<l;a++)b.r=n,b.g=p,b.b=q,b=b.next;for(a=1;a<l;a++)d=e+((G<a?G:a)<<2),f+=(b.r=n=c[d])*(z=l-a),g+=(b.g=p=c[d+1])*z,h+=(b.b=q=c[d+2])*z,i+=n,j+=p,k+=q,b=b.next;a=D;b=J;for(s=0;s<m;s++)c[e]=f*A>>B,c[e+1]=g*A>>B,c[e+2]=h*A>>B,f-=t,g-=u,h-=v,t-=a.r,u-=a.g,v-=a.b,d=F+((d=s+r+1)<G?d:G)<<2,i+=a.r=c[d],j+=a.g=c[d+1],k+=a.b=c[d+2],f+=i,g+=j,h+=k,a=a.next,t+=n=b.r,u+=p=b.g,v+=q=b.b,i-=n,j-=p,k-=q,b=b.next,e+=4;F+=m}for(s=0;s<m;s++){j=k=i=g=h=f=0;e=s<<2;t=l*(n=c[e]);u=l*(p=c[e+1]);v=l* (q=c[e+2]);f+=C*n;g+=C*p;h+=C*q;b=D;for(a=0;a<l;a++)b.r=n,b.g=p,b.b=q,b=b.next;d=m;for(a=1;a<=r;a++)e=d+s<<2,f+=(b.r=n=c[e])*(z=l-a),g+=(b.g=p=c[e+1])*z,h+=(b.b=q=c[e+2])*z,i+=n,j+=p,k+=q,b=b.next,a<H&&(d+=m);e=s;a=D;b=J;for(x=0;x<w;x++)d=e<<2,c[d]=f*A>>B,c[d+1]=g*A>>B,c[d+2]=h*A>>B,f-=t,g-=u,h-=v,t-=a.r,u-=a.g,v-=a.b,d=s+((d=x+l)<H?d:H)*m<<2,f+=i+=a.r=c[d],g+=j+=a.g=c[d+1],h+=k+=a.b=c[d+2],a=a.next,t+=n=b.r,u+=p=b.g,v+=q=b.b,i-=n,j-=p,k-=q,b=b.next,e+=m}E.putImageData(y,0,0)}}})();

/* --------------------------------------------- */
/* Author: http://codecanyon.net/user/CodingJack */
/* --------------------------------------------- */

;(function($) {
	
	var touchStop, touchMove, touchStart,
	
	methods = {
		
		touchSwipe: function($this, cb) {

			methods.touchSwipeLeft($this, cb);
			methods.touchSwipeRight($this, cb);
			
		},
		
		touchSwipeLeft: function($this, cb, prevent) {
			
			if(prevent) $this.stopProp = true;
			if(!$this.swipeLeft) $this.swipeLeft = cb;
			if(!$this.swipeRight) $this.addEventListener(touchStart, startIt);
			
		},
		
		touchSwipeRight: function($this, cb, prevent) {
			
			if(prevent) $this.stopProp = true;
			if(!$this.swipeRight) $this.swipeRight = cb;
			if(!$this.swipeLeft) $this.addEventListener(touchStart, startIt);
	
		},
		
		unbindSwipe: function($this) {
			
			$this.removeEventListener(touchStart, startIt);
			$this.removeEventListener(touchMove, moveIt);
			$this.removeEventListener(touchStop, endIt);
			
			clearData($this);
			
		}
		
	};
	
	if("ontouchend" in document) {
	
		touchStop = "touchend";
		touchMove = "touchmove";
		touchStart = "touchstart";
		
	}
	else {
	
		touchStop = "mouseup";
		touchMove = "mousemove";
		touchStart = "mousedown";
		
	}
	
	$.fn.cjSwipe = function(type, a, b) {
		
		methods[type](this[0], a, b);	
		
	};
	
	function clearData($this, typed) {
		
		if(!typed) {
			
			delete $this.swipeLeft;
			delete $this.swipeRight;
			delete $this.stopProp;
		
		}
		
		delete $this.newPageX;
		delete $this.pageX;
		
	}
	
	function startIt(event) {
		
		var pages = event.touches ? event.touches[0] : event;
		
		if(this.stopProp) event.stopImmediatePropagation();
		
		this.pageX = pages.pageX;
		this.addEventListener(touchStop, endIt);
		this.addEventListener(touchMove, moveIt);
		
	}
	
	function moveIt(event) {
		
		var pages = event.touches ? event.touches[0] : event,
		newPageX = this.newPageX = pages.pageX;
		
		if(Math.abs(this.pageX - newPageX) > 10) event.preventDefault();
		
	}
	
	function endIt() {
		
		var newPageX = this.newPageX, pageX = this.pageX, evt, typed = this.cjThumbs;
		
		this.removeEventListener(touchMove, moveIt);
		this.removeEventListener(touchStop, endIt);
		
		if(Math.abs(pageX - newPageX) < 30) return;
		
		if(!typed) this.removeEventListener(touchStart, startIt);
		
		if(pageX > newPageX) {
			
			if(this.swipeLeft) {
				
				evt = this.swipeLeft;
				clearData(this, typed);
				evt();
				
			}
			
		}
		else {
			
			if(this.swipeRight) {
				
				evt = this.swipeRight;
				clearData(this, typed);
				evt(1);
				
			}
			
		}
		
	}
	
		
})(jQuery);

;(function($) {
	
	// These can be overriden with the main jackBox() call, see "Global Settings" in the help documentation
	var defaults = {
		
		useThumbs: true,
		deepLinking: true,
		autoPlayVideo: false,
		flashVideoFirst: false,
		
		defaultVideoWidth: 960,
		defaultVideoHeight: 540,
		
		thumbnailWidth: 75,
		thumbnailHeight: 50,
		useThumbTooltips: true,
		
		dynamic: false,
		baseName: "jackbox",
		className: ".jackbox",
		preloadGraphics: true,
		showInfoByDefault: false,
		thumbsStartHidden: false,
		showPageScrollbar: false,
		useKeyboardControls: true,
		fullscreenScalesContent: true,
		useTwitter: true,
		useGoogle: true,
		usePinterest: true,
		useFacebook: true,
		defaultShareImage: bk_settings.bk_theme_root + "/jackbox/img/default_share.jpg"
		
	},
	
	// The padding/buffer for the lightbox main content container
	boxBuffer = 10,
	
	// Accounts for the thumb panel's border
	thumbnailMargin = 20,
	
	// Accounts for the large prev/next buttons you'll find on the left and right sides of the screen
	// This number makes sure the content always fits between these buttons
	thumbPanelBuffer = 260,
	
	// The width and height of the social iframe that's loaded in
	socialFrameWidth = 200,
	socialFrameHeight = 21,
	
	// The name of the main folder where all of the JackBox modules can be found
	baseName = "jackbox",
	
	// The path to the JackBox graphics folder for preloading
	graphicsPath = "img/graphics/index.html",
	
	// The url to the preloader script
	preloaderUrl = baseName + "/php/graphics.php",
	
	// The url to the swf module
	swfPlayer = bk_settings.bk_theme_root + "/jackbox/modules/jackbox_swf.html",
	
	// The url to the fallback thumbnail
	defaultThumb = bk_settings.bk_theme_root + "/jackbox/img/thumbs/default.jpg",
	
	// The url to the video player module
	videoPlayer = bk_settings.bk_theme_root + "/jackbox/modules/jackbox_video.html",
	
	// The url to the audio player module
	audioPlayer = bk_settings.bk_theme_root + "/jackbox/modules/jackbox_audio.html",
	
	// The url to the social buttons module
	socialbuttons = bk_settings.bk_theme_root + "/jackbox/modules/jackbox_social.php",
	
	// The Vimeo video iframe to be used (edit with caution)
	vimeoMarkup = "http://player.vimeo.com/video{url}?title=0&amp;byline=0&amp;portrait=0&amp;autoplay={autoplay}&amp;color=FFFFFF&amp;wmode=transparent",
	
	// The Youtube video iframe to be used (edit with caution)
	youTubeMarkup = "http://www.youtube.com/embed/{url}?autoplay={autoplay}&amp;autohide=1&amp;hd=1&amp;iv_load_policy=3&amp;showinfo=0&amp;showsearch=0&amp;wmode=transparent",
	
	// The markup or "header" that will be placed above the item's content
	topMarkup = 
		
		'<div class="jackbox-top clearfix">' + 
			
			/* ******************************************** */
			/* delete this line below for no social buttons */
			/* ******************************************** */
			'<div class="jackbox-social"></div>' + 
			
			// fullscreen and close buttons
			'<div class="jackbox-top-icons">' + 
				
				'<span class="jackbox-fullscreen"><span class="jackbox-button jackbox-fs"></span><span class="jackbox-button jackbox-ns"></span></span>' + 
				'<span class="jackbox-button jackbox-button-margin jackbox-close"></span>' + 
				
			'</div>' + 
						
		'<div />',
	
	// The markup or "footer" that will be placed below the item's content
	bottomMarkup = 
	
		'<div class="jackbox-bottom clearfix">' + 
			
			// prev/next buttons
			'<div class="jackbox-controls">' + 
			
				'<span class="jackbox-button jackbox-arrow-left"></span>' + 
				'<span class="jackbox-button jackbox-arrow-right"></span>' +
				
			'</div>' +  
			
			// title text plus current number
			'<div class="jackbox-title-text">' + 
				
				//'<span class="jb-current"></span><span class="jb-divider">/</span><span class="jb-total"></span>' +
				'<span class="jackbox-title-txt"></span>' + 
			
			'</div>' +
			
			// info and thumb toggle buttons
			'<div class="jackbox-bottom-icons">' +
				
				'<span class="jackbox-button jackbox-info"></span>' + 
				'<span class="jackbox-button-margin jackbox-button-thumbs"><span class="jackbox-button jackbox-hide-thumbs"></span><span class="jackbox-button jackbox-show-thumbs"></span></span>' + 
				
			'</div>' +
			
		'</div>',
		
	
	////////////////////////////////////////////////////////
	// END SETTINGS ////////////////////////////////////////
	////////////////////////////////////////////////////////
	
	resizeThrottle,
	bottomContent, 
	hasFullscreen, 
	holderPadLeft,
	holderPadTop,
	thumbTipText,
	thumbBufTall, 
	currentWidth, 
	holderHeight, 
	isFullscreen,
	itemCallback,
	thumbTipBuf, 
	paddingTall,
	paddingWide,
	totalThumbs,
	description,
	panelBuffer,
	thumbMinus,
	thumbStrip,
	thumbPanel,
	stripWidth,
	thumbRight,
	topContent,
	descHolder,
	descHeight,
	showThumbs,
	hideThumbs,
	panelRight,
	fullNormal,
	scrollPos,
	panelLeft,
	titleText,
	thumbLeft,
	container,
	preloader,
	numThumbs,
	descripts,
	oldHeight,
	unescaped,
	swipeable,
	className,
	baseName,
	oldWidth,
	thumbTip,
	thumbVis,
	showHide,
	closeBtn,
	descText,
	controls,
	elements,
	useTips,
	scaleUp,
	divider,
	descVis,
	thumbOn,
	wrapper,
	current,
	goRight,
	legged,
	preBuf,
	goLeft,
	upsize,
	fader,
	touch,
	boxed,
	title,
	total,
	cover,
	words,
	$this,
	items,
	info,
	docs,
	doc,
	url,
	wid,
	win,
	leg,
	isIE,
	cats,
	high,
	hash,
	list,
	isIE8,
	pushW,
	pushH,
	timer,
	toCall,
	thumbs,
	bodies,
	holder,
	lights,
	oWidth,
	isLocal,
	runTime,
	scaling,
	content,
	oHeight,
	isImage,
	winWide,
	winTall,
	bufferW,
	bufferH,
	theType,
	parents,
	browser,
	thmWidth,
	dataDesc,
	isActive,
	preAdded,
	scroller,
	keyboard,
	isYoutube,
	useThumbs,
	isLoading,
	fromThumb,
	hasThumbs,
	holOrigTop,
	firstCheck,
	currentCat,
	showScroll,
	deepLinking,
	lightSocial,
	socialFrame,
	thumbHolder,
	eventsAdded,
	preThumbBuf,
	holOrigLeft,
	instantiated,
	arrowClicked,
	arrowsActive,
	thumbsChecked,
	autoPlayVideo,
	thumbnailWidth,
	jackBoxIsReady,
	thumbnailHeight,
	flashVideoFirst,
	defaultShareImage,
	showInfoByDefault,
	thumbsStartHidden,
	defaultVideoWidth,
	defaultVideoHeight,
	useTwitter,
	useGoogle,
	usePinterest,
	useFacebook,
	
	isOn = 1,
	catOn = -1,
	numCats = 0,
	firstRun = true,
	initialLoad = true,
	
	methods = {
		
		init: function($this, settings) {
			
			if(!instantiated) {
				
				if(typeof Jacked === "undefined") return;
				if(settings) $.extend(defaults, settings);
				
				className = defaults.className;
				useThumbs = defaults.useThumbs;
				deepLinking = defaults.deepLinking;
				useTips = defaults.useThumbTooltips;
				autoPlayVideo = defaults.autoPlayVideo;
				keyboard = defaults.useKeyboardControls;
				showScroll = defaults.showPageScrollbar;
				thumbnailWidth = defaults.thumbnailWidth;
				scaling = defaults.fullscreenScalesContent;
				thumbnailHeight = defaults.thumbnailHeight;
				flashVideoFirst = defaults.flashVideoFirst;
				showInfoByDefault = defaults.showInfoByDefault;
				thumbsStartHidden = defaults.thumbsStartHidden;
				defaultShareImage = defaults.defaultShareImage;
				defaultVideoWidth = defaults.defaultVideoWidth;
				defaultVideoHeight = defaults.defaultVideoHeight;
				
				useTwitter = defaults.useTwitter;
				useGoogle = defaults.useGoogle;
				usePinterest = defaults.usePinterest;
				useFacebook = defaults.useFacebook;
				
				baseName = defaults.baseName;
				/*
				swfPlayer = baseName + swfPlayer;
				videoPlayer = baseName + videoPlayer;
				audioPlayer = baseName + audioPlayer;
				preloaderUrl = baseName + preloaderUrl;
				defaultThumb = baseName + defaultThumb;
				socialbuttons = baseName + socialbuttons;
				*/
				
				doc = document;
				docs = $(document);
				instantiated = true;
				thmWidth = thumbnailWidth + thumbnailMargin;
				
				isLocal = doc.URL.search("file:///") !== -1;
				Jacked.setEngines({ios: true, safari: true, opera: true, firefox: true});
				
				if(defaults.preloadGraphics && !isLocal) {

					$.getJSON(preloaderUrl + "?jackbox_path=" + graphicsPath, jsonLoaded);
					
				}
				
				lights = $this;
				isIE8 = Jacked.getIE();
				touch = Jacked.getMobile();
				browser = Jacked.getBrowser();
				isIE = browser === "ie";
				
				if(touch) showScroll = false;
				
				if(typeof $.address !== "undefined" && deepLinking) {
					
					if(!isIE && !defaults.dynamic) {
						
						$.address.init(init);
						
					}
					else {
						
						init();
						$.address.update();
						
					}
					
				}
				else {
				
					deepLinking = false;
					init();
					
				}
				
				if(typeof StackBlurImage !== "undefined" && !isLocal && !isIE8) {
					
					$(".jackbox-hover-blur").each(drawBlur);
					
				}
				
				$(".jackbox-tooltip").each(addTip);
				defaults = null;
				
			}
			
		},
		
		frameReady: function() {
		
			if(isActive) loaded();
			
		},
		
		// API Method for adding a lightbox item to the stack on the fly
		newItem: function($this, settings) {
			
			$this.each(apiCall, [settings]);
			
		},
		
		// API Method for removing a lightbox item from the stack
		removeItem: function($this) {
		
			$this.each(apiCall, [false, true]);
			
		}
		
	},
	
	loadFrame = (function() {
		
		var obj = {
		
			type: "text/html",
			frameborder: 0,
			mozallowfullscreen: "mozallowfullscreen",
			webkitallowfullscreen: "webkitallowfullscreen",
			allowfullscreen: "allowfullscreen"
			
		};
		
		return function(st, special, scrolls) {
			
			obj.width = wid;
			obj.height = high;
			obj.scrolling = !scrolls ? "no" : "auto";
			
			content = $("<iframe />").attr(obj);
			
			if(!isYoutube) {
				
				content.addClass("jackbox-content");
				
			}
			else {
				
				content.addClass("jackbox-youtube");
				
			}
			
			content.prependTo(container);
			
			if(!special) content.one("load.jackbox", loaded);
			content.attr("src", st);
			
		};
		
	})(),
	
	loaded = (function() {
		
		var obj = {};
		
		return function(event) {
			
			if(event) event.stopPropagation();
			if(isImage) {
			
				oWidth = this.width || content.width();
				oHeight = this.height || content.height();
				setSize();
					
			}
			
			obj.width = wid;
			obj.height = high;
			
			content.css(obj);
			tweenContent(true);
			
			if(itemCallback) itemCallback();
			win.on("resize.jackbox", resized);
			
		};
		
	})(),
	
	tweenContent = (function() {
		
		var tw = {}, tw2 = {}, props = {};
		
		return function(callback) {
		
			var newW;
			
			if(callback) {
				
				if(wid < 260) pushW += 260 - wid;
				newW = Math.max(wid, 260);
				
				if(newW === oldWidth && high === oldHeight) {
					
					showContent();
					return;
					
				}
				
				tw.callback = showContent;
				tw.duration = oldWidth ? Math.abs(newW - oldWidth) > 50 || Math.abs(high - oldHeight) > 50 ? 600 : 300 : 600;
				
			}
			else {
				
				newW = wid;
				props.width = newW;
				
				tw.duration = 300;
				delete tw.callback;
				
				if(topContent) Jacked.tween(topContent[0], props, tw);
				if(bottomContent) Jacked.tween(bottomContent[0], props, tw);
				
				props.height = high;
				Jacked.stopTween(content[0], true);
				Jacked.tween(content[0], props, tw);
				
			}
			
			tw2.marginLeft = -(((pushW >> 1) + 0.5) | 0);
			tw2.marginTop = -(((pushH >> 1) + 0.5) | 0);
			tw2.height = high;
			tw2.width = newW;
			
			if(!oldWidth) tw2.opacity = 1; 

			Jacked.tween(holder[0], tw2, tw);
			
			oldWidth = newW;
			oldHeight = high;
			
		};
		
	})(),
	
	showContent = (function() {
		
		var dur = {}, style = {opacity: 1, visibility: "visible"};
		
		return function() {
			
			showElements();
			preloader.removeClass("jackbox-spin-preloader");
			
			var maxed = Math.max(wid, 260);
			dur.duration = 600;
			
			if(isImage && !isIE8) {
	
				Jacked.fadeIn(content[0], dur);
				
			}
			else {
				
				if(!isYoutube) {
					
					content.show();
					
				}
				else {
					
					content.css('visibility', 'visible');	
					
				}
				
				if(theType === "audio" || theType === "local") {
					
					content[0].contentWindow.cjInit();
					
				}
				
			}
			
			dur.duration = 300;
			
			if(!isIE8) {
				
				if(topContent) {
					
					topContent.css("width", maxed);
					Jacked.fadeIn(topContent[0], dur);
					
				}
				
				if(bottomContent) {
					
					bottomContent.css("width", maxed);
					Jacked.fadeIn(bottomContent[0], dur);
					
				}
				
			}
			else {
			
				if(topContent) topContent.css("width", maxed).show();
				if(bottomContent) bottomContent.css("width", maxed).show();
				
			}
			
			if(info && descText) {
				
				info.show();
				descHolder.html(descText).show();
				
				descHeight = -descHolder.outerHeight();
				description.css("height", -descHeight < high ? -descHeight : high);
				
				if(!showInfoByDefault) {
					
					descVis = false;
					descHolder.css("margin-top", descHeight);
					
				}
				else {
					
					descVis = true;
					info.addClass("jb-info-inactive");
					descHolder.css({visibility: 'visible', marginTop: 0});
					
				}
				
			}
			else if(info) {
				
				info.hide();
				descHolder.hide();
				
			}
			
			isLoading = false;
			
			if(!eventsAdded && legged) {
					
				panelLeft.css(style);
				panelRight.css(style);
				
			}
			
			if(!thumbsChecked && useThumbs && legged) loadThumbs();
			if(!eventsAdded) addEvents();
			
			if(touch) {
				
				content[0].removeEventListener("touchstart", returnFalse, false);
				content[0].removeEventListener("touchmove", returnFalse, false);
				content[0].removeEventListener("touchend", returnFalse, false);	
				removeTouches();
				
			}
			
			if(legged) turnOn();
			if(theType === "inline") sizer();
			
		};
		
	})(),
	
	showElements = (function() {
		
		var obj = {
					
			type: "text/html",
			frameborder: 0,
			mozallowfullscreen: "mozallowfullscreen",
			webkitallowfullscreen: "webkitallowfullscreen",
			allowfullscreen: "allowfullscreen",
			scrolling: "no"
				
		};
		
		return function() {
		
			if(!elements) createElements();
			
			if(!legged) {
			
				if(controls) controls.hide();
				if(showHide) showHide.hide();
				
			}
			
			if(title) {
				
				if(titleText === "false") titleText = false;
				var hasContent = words && titleText, amper = hasContent ? " -&nbsp;" : "";
				
				if(current && legged) {
					
					current.text((isOn + 1)).show();
					total.html(leg + amper).show();
					if(divider) divider.show();
					
				}
				else {
					
					if(total) total.hide();
					if(current) current.hide();
					if(divider) divider.hide();
					
				}
				
				if(hasContent) {
					
					words.html(unescaped);
					
					var a = words.find("a");
					
					if(a.length) {
						
						a.on("click.jackbox", stopProp);
						words.data("links", a);
					
					}
					
				}
				
			}
			
			if(!lightSocial || isLocal) return;
				
			var poster, ur, domain = doc.URL.split("#")[0], len = domain.length - 1;
			
			if(domain.search("index.html") !== -1) {
			
				if(domain.charAt(len) !== "index.html") {
						
					(deepLinking) ? ur = domain + "#/" + hash + "/" + (isOn + 1) : ur = domain;
					domain = domain.substring(0, domain.lastIndexOf("index.html"));
					
				}
				else {
				
					domain = domain.substring(0, len);
					(deepLinking) ? ur = domain + "/#/" + hash + "/" + (isOn + 1) : ur = domain;
					
				}
				
			}
		
			if(isImage) {
				
				poster = $this.attr("href") || $this.attr("data-href");
					
			}
			else {
				
				var alt = $this.children("img");
				poster = alt.length ? alt.attr("src") : defaultShareImage;
				
			}
			
			if(poster.search("http") === -1) poster = poster.charAt(0) !== "/" ? domain + "/" + poster : domain + poster;
			
			var titlText = titleText ? titleText.replace(/(<([^>]+)>)/ig, "") : doc.title;
			titlText = titlText.split('.').join('');
			
			obj.width = socialFrameWidth;
			obj.height = socialFrameHeight;
			obj.src = socialbuttons + 
				
				"?url=" + encodeURIComponent(ur) + 
				"&poster=" + encodeURIComponent(poster) + 
				"&title=" + escape(titlText) +
				"&twitter=" + useTwitter +
			    "&google=" + useGoogle +
			    "&facebook=" + useFacebook +
			    "&pinterest=" + usePinterest;
			
			socialFrame = $("<iframe />").attr(obj).appendTo(lightSocial);
			
		};
		
	})(),
	
	toggleInfo = (function() {
		
		var obj1 = {}, obj2 = {duration: 300};
		
		return function(event) {
		
			if(event) event.stopPropagation();
			

			if(!descVis) {
				
				info.addClass("jb-info-inactive");
				description.css("visibility", "visible");
				
				obj1.marginTop = 0;
				delete obj2.callback;
					
			}
			else {
				
				obj1.marginTop = descHeight;
				obj2.callback = infoIndex;
				info.removeClass("jb-info-inactive");
				
			}
			
			Jacked.tween(descHolder[0], obj1, obj2);
			descVis = !descVis;
			
		};
		
	})(),
	
	overThumb = (function() {
		
		var obj = {opacity: 1, visibility: "visible"};
		
		return function() {
		
			if(touch) {
				
				clearTimeout(fader);	
				fader = setTimeout(outThumb, 2000);
				
			}
			
			var $this = $(this), ww, xx, buffer, lft;
			thumbTipText.text($this.data("theTitle"));
			
			ww = parseInt(thumbTipText.css("width"), 10);
			lft = thumbPanel.data("offLeft");
			xx = $this.offset().left;
			
			buffer = lft + thumbPanel.width() - ww - thumbTipBuf;
			
			obj.width = ww;
			obj.left = xx < lft ? lft : xx > buffer ? buffer : xx;
			
			thumbTip.css(obj);
			
		};
		
	})(),
	
	toggleThumbs = (function() {
		
		var obj1 = {}, obj2 = {duration: 300};
		
		return function(event) {
		
			if(event) event.stopPropagation();
			
			if(thumbVis === 30) {
				
				thumbVis = holderHeight;
				
				if(showHide) {
					
					hideThumbs.hide();
					showThumbs.show();
					
				}
					
			}
			else {
				
				thumbVis = 30;
				
				if(showHide) {
					
					showThumbs.hide();
					hideThumbs.show();
					
				}
				
			}
			
			obj1.bottom = thumbVis;
			Jacked.tween(thumbHolder[0], obj1, obj2);
			
			if(winWide < 569) return;
			
			sizer("true");
			tweenContent();
			
		};
		
	})(),
	
	posThumbs = (function() {
		
		var obj = {};
		
		return function(resize) {
		
			var maxWidth = winWide - thumbPanelBuffer;
			
			if(stripWidth < maxWidth) {
			
				numThumbs = totalThumbs;
				arrowsActive = false;
				
			}
			else {
			
				numThumbs = (maxWidth / thmWidth) | 0;
				arrowsActive = true;
				
			}		
			
			currentWidth = (thmWidth * numThumbs) - thumbnailMargin;
			thumbMinus = numThumbs - 1;
			
			obj.marginLeft = -(currentWidth >> 1) - thumbnailMargin;
			obj.width = currentWidth;
			
			thumbPanel.css(obj);
			thumbStrip.css("width", stripWidth);
			
			checkThumbs(resize);
			
		};
		
	})(),
	
	checkThumbs = (function() {
		
		var obj1 = {}, obj2 = {duration: 300};
		
		return function(resize, tween) {
		
			if(resize) {
				
				thumbOn = isOn;
				
				if(isOn !== 0 && isOn + numThumbs > leg) thumbOn = leg - numThumbs;
				
				Jacked.stopTween(thumbStrip[0]);
				thumbStrip.css("left", thumbOn * -thmWidth);
				
			}
			
			else {
				
				if(isOn === 0) {
					
					thumbOn = 0;	
	
				}
				else if(isOn > thumbOn + thumbMinus) {
				
					while(isOn > thumbOn + thumbMinus) thumbOn++;
					
				}
				
				if(tween) {
					
					obj1.left = thumbOn * -thmWidth;
					Jacked.tween(thumbStrip[0], obj1, obj2);
					
				}
				else {
					
					Jacked.stopTween(thumbStrip[0]);
					thumbStrip.css("left", thumbOn * -thmWidth);
					
				}
				
			}
			
			checkArrows(resize, false);
			
		};
		
	})(),
	
	checkArrows = (function() {
		
		var obj1 = {}, obj2 = {duration: 300};
		
		return function(resize, fromArrow) {
			
			thumbLeft.off(".jackbox");
			thumbRight.off(".jackbox");
			
			if(!arrowsActive) {
				
				thumbLeft.hide();
				thumbRight.hide();
				
			}
			else {
				
				if(touch) thumbPanel.cjSwipe("unbindSwipe");
				
				if(thumbOn < leg - numThumbs) {
				
					thumbRight.on("click.jackbox", thumbArrowNext).show();
					
					if(touch) thumbPanel.cjSwipe("touchSwipeLeft", thumbArrowNext, true);
					
				}
				else {
					
					thumbRight.hide();
					
				}
				
				if(thumbOn > 0) {
					
					thumbLeft.on("click.jackbox", thumbArrowPrev).show();
					
					if(touch) thumbPanel.cjSwipe("touchSwipeRight", thumbArrowPrev, true);
					
				}
				else {
					
					thumbLeft.hide();
		
				}
				
				if(fromArrow) {
					
					obj1.left = thumbOn * -thmWidth;
					Jacked.tween(thumbStrip[0], obj1, obj2);
					
				}
				else if(resize || !firstCheck) {
					
					var off = thumbPanel.offset().left;
	
					thumbLeft.css("left", off);
					thumbRight.css("left", off + currentWidth);
					firstCheck = true;
					
				}
					
			}
			
		};
		
	})(),
	
	sizer = (function() {
		
		var obj1 = {opacity: 1}, obj2 = {};
		
		return function(noResize) {
			
			winWide = win.width();
			winTall = Math.max(win.height(), 226);
			
			var tBuf = winWide > 568 && thumbVis === 0 ? thumbBufTall : 0;
			
			if(theType !== "audio" && theType !== "inline") {
			
				scaleUp = !isFullscreen ? upsize : upsize || scaling;
				
			}
			else {
			
				scaleUp = false;
				
			}
			
			if(bufferW < winWide && bufferH + tBuf < winTall && !scaleUp) {
					
				wid = oWidth;
				high = oHeight;
				
			}
			else {
				
				wid = winWide / bufferW;
				high = winTall / bufferH;
	
				var perc = (wid > high) ? high : wid;
				
				wid = oWidth * perc;
				high = oHeight * perc;
				
				if(winWide > winTall) {
				
					if(high + boxed + tBuf > winTall) {
						
						high = winTall - paddingTall - boxBuffer - tBuf;
						wid = oWidth * (high / oHeight);
						
					}
					
				}
				else {
					
					if(wid > high) {
					
						if(wid + bufferW > winWide) {
							
							wid = winWide - boxBuffer;
							high = oHeight * (wid / oWidth);
							
						}
						
					}
					else {
					
						if(high + boxed + tBuf > winTall) {
						
							high = winTall - paddingTall - boxBuffer - tBuf;
							wid = oWidth * (high / oHeight);
							
						}
						
					}
					
				}
				
				if(wid !== (wid | 0)) wid = (wid + 1) | 0;
				if(high !== (high | 0)) high = (high + 1) | 0;
				
			}
			
			if(theType === "inline") {
				
				var w = winWide - paddingWide - panelBuffer - boxBuffer;
				var h = winTall - paddingTall - boxBuffer - tBuf;
				
				wid = oWidth > w ? w : oWidth;
				high = oHeight < h ? oHeight : high;
				
			}
			
			pushW = wid + paddingWide;
			pushH = high + paddingTall + tBuf;

			if(noResize === "true") return;
			
			Jacked.stopTween(holder[0], false, true);
			if(content) Jacked.stopTween(content[0], true, true);
			
			if(wid < 260) pushW += 260 - wid;
			var maxed = Math.max(260, wid);
			
			obj1.width = maxed;
			obj1.height = high;
			
			obj2.marginLeft = -(((pushW * 0.5) + 0.5) | 0);
			obj2.marginTop = -(((pushH * 0.5) + 0.5) | 0);
			obj2.width = maxed;
			obj2.height = high;
			
			holder.css(obj2);
			content.css(obj1);
			
			if(bottomContent) {
				
				Jacked.stopTween(bottomContent[0]);
				bottomContent.css("width", maxed);
				
			}
			
			if(topContent) {
				
				Jacked.stopTween(topContent[0]);	
				topContent.css("width", maxed);
				
			}
			
			if(info && descText) {
				
				descHeight = -descHolder.outerHeight();
				description.css("height", -descHeight < high ? -descHeight : high);
				
				if(!descVis) {
					
					Jacked.stopTween(descHolder[0], false, true);	
					descHolder.css("margin-top", descHeight);
					
				}
				
			}
			
			if(hasThumbs) posThumbs(true);
			
		};
		
	})(),
	
	moveTip = (function() {
		
		var obj = {};
		
		return function(event) {
		
			var data = $(this).data();
			
			obj.left = event.pageX - data.tipX - data.tipWidth;
			obj.top = event.pageY - data.tipY - data.tipHeight;
			
			data.tip.css(obj);
			
		};
		
	})();
	
	$.fn.jackBox = function(func, params) {
		
		if(methods.hasOwnProperty(func)) {
		
			methods[func](this, params);
			
		}
		
		return this;
		
	};
	
	$.jackBox = {
		
		available: function(callback) {
		
			if(!callback) return;
			
			if(jackBoxIsReady) {
			
				(deepLinking) ? setTimeout(callback, 250) : callback();
				
			}
			else {
			
				toCall = callback;
				
			}
			
		},
		
		itemLoaded: function(callback) {
		
			itemCallback = callback;
			
		}
		
	};
	
	function init() {
		
		win = $(window);
		bodies = $("body");
		scroller = $("body, html");
		cover = $("<div />").addClass("jackbox-modal");
		holder = $("<div />").addClass("jackbox-holder");
		wrapper = $("<div />").addClass("jackbox-wrapper");
		preloader = $("<div />").addClass("jackbox-preloader");
		
		panelLeft = $("<span />").addClass("jackbox-panel jackbox-panel-left");
		panelRight = $("<span />").addClass("jackbox-panel jackbox-panel-right");
		
		var frag = doc.createDocumentFragment();
		frag.appendChild(wrapper[0]);
		frag.appendChild(preloader[0]);
		cover[0].appendChild(frag);
		
		frag = doc.createDocumentFragment();
		frag.appendChild(panelLeft[0]);
		frag.appendChild(panelRight[0]);
		frag.appendChild(holder[0]);	
		wrapper[0].appendChild(frag);
	
		container = $("<div />").addClass("jackbox-container");
		
		if(!isIE8) {
			
			var preOutside = $("<span />").addClass("jackbox-pre-outside").appendTo(preloader);
			$("<span />").addClass("jackbox-pre-inside").appendTo(preOutside);
			
		}
		
		boxBuffer *= 2;
		scrollPos = 0;
		frag = doc.createDocumentFragment();
		
		if(!!topMarkup) {
			
			topContent = $(topMarkup).hide();
			frag.appendChild(topContent[0]);
			
		}
		
		frag.appendChild(container[0]);
		
		if(!!bottomMarkup) {
			
			bottomContent = $(bottomMarkup).hide();
			frag.appendChild(bottomContent[0]);
			
		}
		
		holder[0].appendChild(frag);
		holderHeight = -(thumbnailHeight + thumbnailMargin);
		
		descripts = [];
		items = [];
		list = [];
		cats = [];
		
		lights.each(catEach);
		
		if(deepLinking) {
			
			$.address.internalChange(insideChange);
			$.address.externalChange(browserChange);
			
		}
		
		jackBoxIsReady = true;
		
		if(toCall) {
			
			(deepLinking) ? setTimeout(toCall, 250) : toCall();
			toCall = null;
			
		}
		
		lights = items = topMarkup = bottomMarkup = descripts = null;
		
	}
	
	function apiCall(settings, remove) {
	
		var $this = $(this),
		i = cats.length, 
		found = -1,
		listed,
		group,
		fnd,
		str,
		j;
		
		if(settings && typeof settings === "object") {
			
			var prop, itm, href = $this.attr("href");
			
			for(prop in settings) {
				
				if(settings.hasOwnProperty(prop) && prop !== "trigger") {
							
					itm = settings[prop]; 
					if(prop !== "href" || !href) $this.attr("data-" + prop, itm);
					if(prop === "group") group = itm;
					
				}
				
			}
			
		}
		
		if(!group) group = $this.attr("data-group");
		if(!group) return;
		
		str = group.split(" ").join("").toLowerCase();
		
		while(i--) {
			
			if(cats[i] === str) {
				
				//console.log("cats[" + i + "] - " + cats[i] + "   str - " + str);
			
				found = i;
				break;
				
			}
			
		}
		
		if(found > -1) {
			
			//console.log("found - " + found);
		
			listed = list[found];
			i = listed.length;
			
			//console.log("listed length - " + i);
			
			while(i--) {
				
				fnd = listed[i];
				
				//console.log("fnd[0]" + fnd[0] + " + this[0] - " + $this[0]);
				
				if(fnd[0] === $this[0]) {
					
					if(remove) {
						
						//console.log("inside remove " + fnd[0]);
						
						listed.splice(i, 1);
						fnd.off('click.jackbox');
						j = listed.length;
						
						if(j) {
							
							for(var k = 0; k < j; k++) {
								
								listed[k].data('id', k);
								
							}
							
						}
						else {
							
							list.splice(found, 1);
							cats.splice(found, 1);
							numCats--;
							
						}
						
					}
					
					return;
					
				}
				
			}
			
			if(remove) {
				return;  //Billykid custom code
			}
			
			i = listed.length;
			listed[i] = $this;
		    
		}
		else {
			
			if(remove) return;
			
			found = cats.length;
			i = list.length;
			
			cats[found] = str;
			numCats++;
			
			list[i] = [$this];
			i = 0;
			
		}
		
		itemEach($this);
		$this.data({id: i, cat: found});
		if(settings && settings.trigger) $this.trigger("click");
		
	}
	
	function catEach() {
		
		var str = $(this).attr("data-group").split(" ").join("").toLowerCase();
		
		if(!isIE8) {
		
			if(cats.indexOf(str) === -1) addCat(str);
			
		}
		else {
		
			var i = cats.length, found = false;
			
			while(i--) {
				
				if(cats[i] === str) {
				
					found = true;
					break;
					
				}
				
			}
			
			if(!found) addCat(str);
			
		}
		
	}
	
	function addCat(str) {
	
		cats[cats.length] = str;
		items = [];
	
		$(className + "[data-group=" + str + "]").each(itemEach);
		
		list[list.length] = items;
		numCats++;
		
	}
	
	function itemEach(i) {
		
		if(!isNaN(i)) {
			
			$this = $(this).data({id: i, cat: numCats});	
			items[i] = $this;
			
		}
		else {
		
			$this = i;
			
		}
		
		url = $this.attr("href") || $this.attr("data-href");
		if(!url) return;
			
		var popped, video;
		
		if(url.charAt(0) !== "#") {
		
			popped = url.toLowerCase().split(".").pop();
			
		}
		else {
		
			popped = "inline";
			
		}
		
		video = checkVideo(url, popped);
		
		if(video) {
		
			$this.data("type", video);	
			
			if(!$this.attr("data-thumbnail")) {
			
				if(video === "vimeo") {
					
					getVimeoThumb($this, url);
					
				}
				else if(video === "youtube") {
					
					$this.attr("data-thumbnail", "http://img.youtube.com/vi/" + url.split("http://www.youtube.com/watch?v=")[1] + "/1.jpg");
					
				}
				
			}
			
		}
		else if(checkImage(popped)) {
			
			$this.data("type", "image");
			
		}
		else {
			
			switch(popped) {
			
				case "mp3":
				
					$this.data("type", "audio");
				
				break;
				
				case "swf":
				
					$this.data("type", "swf");
				
				break;
				
				case "inline":
				
					$this.data("type", "inline");
				
				break;
				
				default:
				
					$this.data("type", "iframe");
				
				// end default
				
			}
			
		}
		
		$this.on("click.jackbox", clicked);
		dataDesc = $this.attr("data-description");
		
		if(!dataDesc) return;
		
		// if the same description is used for more than one item we only hit the DOM once for it
		if(descripts) {
		
			var dIndex = descripts.indexOf(dataDesc);
			
			if(dIndex === -1) {
				
				dataDesc = $(dataDesc);
				
				if(!dataDesc.length) return;
				descripts[descripts.length] = dataDesc;
				
			}
			else {
			
				dataDesc = descripts[dIndex];
				
			}
			
		}
		else {
		
			dataDesc = $(dataDesc);
			if(!dataDesc.length) return;
			
		}
		
		$this.data("description", dataDesc);
		
	}
	
	function browserChange(event) {
		
		if(initialLoad) {
		
			initialLoad = false;
			
			var url = doc.URL, splits = url.split("?url=");
			
			if(splits.length === 2) {
				
				window.location = splits[0] + "#/" + splits[1];
				return;
				
			}
			
		}
		
		clearTimeout(runTime);
		getHash(event.value);
		
		if(catOn !== -1) {
		
			if(firstRun) {
				
				firstRun = false;
				insideChange();	
				
			}
			else {
				
				runTime = setTimeout(insideChange, 750);
				
			}
			
		}
		else if(isActive) {
			
			closing();
			
		}
		
	}
	
	function insideChange(event) {
		
		if(typeof event === "object") {
			
			clearTimeout(runTime);
			getHash(event.value);
			
		}
		
		if(catOn !== -1) {
			
			loadItem();
				
		}
		else if(isActive) {
			
			closing();
			
		}
		
	}
	
	function getHash(val) {
		
		if(hasThumbs && !fromThumb && !arrowClicked) thumbs[isOn].removeClass("jb-thumb-active");
			
		if(val !== "index.html") {
			
			var ars = val.split("index.html");
			
			if(ars.length === 3) {
				
				isOn = parseInt(ars[2], 10) - 1;
				
				if(isNaN(isOn)) isOn = 0;
				hash = ars[1];
				
			}
			else {
				
				if(isNaN(ars[1])) {
					
					isOn = 0;
					hash = ars[1];
					
				}
				else {
					
					isOn = parseInt(ars[1], 10) - 1;
					hash = "index.html";
					
				}
				
			}
			
		}
		else {
			
			hash = "index.html";
			isOn = 0;
			
		}
		
		if(hash !== "index.html") {
			
			var i = numCats;
			
			while(i--) {
				
				if(cats[i] === hash) {
					
					catOn = i;
					leg = list[catOn].length;
					legged = leg !== 1;
					break;
					
				}
				
			}
			
		}
		else {
			
			catOn = -1;
			
		}
		
		arrowClicked = false;
		
	}
	
	function resized() {
			
		clearTimeout(resizeThrottle);
		resizeThrottle = setTimeout(sizer, 100);
		
	}
	
	function clicked(event) {
		
		event.stopPropagation();
		event.preventDefault();
		
		var data = $(this).data();
		runItem(data.cat, data.id, true);
		
	}
	
	function runItem(cat, id, first) {
		
		clearTimeout(runTime);
		if(!first) turnOff();
		
		if(deepLinking) {
			
			$.address.value(cats[cat] + "/" + (id + 1));
			
		}
		else {
			
			if(hasThumbs && !fromThumb && !arrowClicked) thumbs[isOn].removeClass("jb-thumb-active");
			
			isOn = id;
			catOn = cat;
			leg = list[catOn].length;
			legged = leg !== 1;
			loadItem();
			
		}
		
	}
	
	function nextItem(event) {
		
		if(event) {
			
			event.stopPropagation();
			if(isLoading) return false;
			
		}
		
		if(!isActive) return;
		if(hasThumbs && !fromThumb) thumbs[isOn].removeClass("jb-thumb-active");
		
		((isOn) < list[catOn].length - 1) ? isOn++ : isOn = 0;
		
		arrowClicked = true;
		runItem(catOn, isOn);
		
	}
	
	function previousItem(event) {
		
		if(event) {
			
			event.stopPropagation();
			if(isLoading) return false;
			
		}
		
		if(!isActive) return;
		if(hasThumbs && !fromThumb) thumbs[isOn].removeClass("jb-thumb-active");
		
		((isOn) > 0) ? isOn-- : isOn = list[catOn].length - 1;
		
		arrowClicked = true;
		runItem(catOn, isOn);
		
	}
	
	function addTouches() {
		
		var ar = [cover[0], wrapper[0], holder[0], container[0]], i = 4;
		
		while(i--) {
		
			ar[i].addEventListener("touchstart", returnFalse, false);
			ar[i].addEventListener("touchmove", returnFalse, false);
			ar[i].addEventListener("touchend", returnFalse, false);
			
		}
		
	}
	
	function removeTouches() {
		
		var ar = [cover[0], wrapper[0], holder[0], container[0]], i = 4;
		
		while(i--) {
		
			ar[i].removeEventListener("touchstart", returnFalse, false);
			ar[i].removeEventListener("touchmove", returnFalse, false);
			ar[i].removeEventListener("touchend", returnFalse, false);
			
		}
		
	}
	
	function loadItem() {
		
		currentCat = list[catOn];
		$this = currentCat[isOn];
		
		if(!$this) return;
		
		if(touch) addTouches();
		url = $this.attr("href") || $this.attr("data-href");
		
		if(isActive) {
			
			isLoading = true;
			killActive();
			loadContent();
			
		}
		else {
			
			isActive = true;
			if(!touch) scroller.stop();
			scrollPos = win.scrollTop();
			
			cover.appendTo(bodies).one("click.jackbox", closer);
			if(!showScroll) parents = cover.parents().each(addOverflow);
			if(keyboard) docs.on("keydown.jackbox_keyboard", checkKeyClose); 
			
			if(!preAdded) {
				
				preAdded = true;
				paddingWide = parseInt(holder.css("padding-left"), 10) + parseInt(holder.css("padding-right"), 10);
				paddingTall = parseInt(holder.css("padding-top"), 10) + parseInt(holder.css("padding-bottom"), 10);
				panelBuffer = parseInt(panelLeft.css("width"), 10) + 14;
				
				boxed = paddingTall + boxBuffer;
				thumbBufTall = thumbnailHeight + (thumbnailMargin << 1);
				preBuf = parseInt(preloader.css("margin-top"), 10);
				preThumbBuf = preBuf - (thumbBufTall >> 1);

				holderPadLeft = parseInt(holder.css("padding-left"), 10);
				holderPadTop = parseInt(holder.css("padding-top"), 10);
				
				fullNormal = $(".jackbox-fullscreen");
				if(!fullNormal.length) fullNormal = null;
				
				hasFullscreen = !touch && browser !== "safari" && ("webkitRequestFullScreen" in cover[0] || "mozFullScreenEnabled" in doc);
				
			}
			
			thumbVis = !thumbsStartHidden && useThumbs && legged ? 0 : holderHeight;
			winWide = win.width();
			winTall = win.height();
			
			holder.css({
				
				width: winWide, 
				height: winTall, 
				marginLeft: -(winWide >> 1) - holderPadLeft,
				marginTop: -(winTall >> 1) - holderPadTop
				
			});
			
			Jacked.fadeIn(cover[0], {callback: addScroll});
			timer = setTimeout(loadContent, 250);
			wrapper.on("click.jackbox", preventDefault);
				
		}
		
	}
	
	function addOverflow() {
		
		$(this).addClass("jackbox-overflow");
		
	}
	
	function removeOverflow() {
	
		$(this).removeClass("jackbox-overflow");
		
	}
	
	function addScroll() {
		
		if(!showScroll) win[0].scrollTo(0, 0);
		
	}
	
	function convert(st) {
	
		return st === "true" || st === true;
		
	}
	
	function loadContent() {
		
		if(hasThumbs) {
			
			thumbs[isOn].addClass("jb-thumb-active");
			
			(fromThumb) ? fromThumb = false : checkThumbs(false, true);
			
		}
		
		var autoplay = $this.attr("data-autoplay") ? $this.attr("data-autoplay") : autoPlayVideo, 
		thisDesc = $this.data("description") || null,
		thisTitle = $this.attr("data-title") || "",
		passedLocal;
		
		upsize = $this.attr("data-scaleUp") === "true";
		descText = thisDesc && typeof thisDesc !== "string" ? thisDesc.html() : false;
		theType = $this.data("type");
		autoplay = autoplay;
		
		if(thisTitle) {
		
			unescaped = thisTitle;
			titleText = escape(unescaped);
			
		}
		else {
		
			titleText = false;
			
			if(typeof words !== "undefined") {
				
				if(words.data("links")) words.data("links").off(".jackbox");
				words.empty();
				
			}
			
		}
		
		if(touch) {
			
			swipeable = theType === "image";
			if(theType !== "inline" && theType !== "iframe") doc.addEventListener("touchmove", returnFalse, false);
			
		}
		
		if(theType !== "image") writeSize();
		isYoutube = false;
		
		if(winWide > 568) {
			
			preloader.css("margin-top", thumbVis === 0 ? preThumbBuf : preBuf);
			
		}
		else {
		
			preloader.css("margin-top", preBuf);
			
		}
		
		wrapper.show();
		preloader.addClass("jackbox-spin-preloader");
		
		switch(theType) {
		
			case "image":
				
				isImage = true;
				content = $("<img />").addClass("jackbox-content").one("load.jackbox", loaded).prependTo(container);
				
				if(touch) {
					
					content[0].addEventListener("touchstart", returnFalse, false);
					content[0].addEventListener("touchmove", returnFalse, false);
					content[0].addEventListener("touchend", returnFalse, false);
					
				}
				
				content.attr("src", url);
			
			break;
			
			case "youtube":
				
				if(touch) isYoutube = true;
				loadFrame(youTubeMarkup.split("{url}").join(url.split("watch?v=")[1]).split("{autoplay}").join(autoplay === "1" ? 1 : 0));
				
			break;
			
			case "vimeo":
				
				loadFrame(vimeoMarkup.split("{url}").join(url.substring(url.lastIndexOf("index.html"))).split("{autoplay}").join(autoplay));
			
			break;
			
			case "local":
				
				var vPoster = fullPath(),
				ffUsesFlash = $this.attr("data-firefoxUsesFlash") === "true" ? "true" : "false",
				flashing = ($this.attr("data-flashHasPriority") ? $this.attr("data-flashHasPriority") : flashVideoFirst.toString());
				passedLocal = flashing === "false" && hasFullscreen && browser !== "firefox";
				
				if($this.attr("data-poster")) {
					
					vPoster += $this.attr("data-poster");
					
				}
				else {
					
					vPoster = "false";
					
				}
				
				loadFrame(
				
					videoPlayer + 
					"?video=" + url + 
					"&autoplay=" + autoplay + 
					"&flashing=" + flashing + 
					"&width=" + oWidth +
					"&height=" + oHeight +
					"&poster=" + vPoster +
					"&firefox=" + ffUsesFlash,
					
				true);
				
			break;
			
			case "audio":
				
				fullPath();
				loadFrame(audioPlayer + "?audio=" + url + "&title=" + ($this.attr("data-audiotitle") ? $this.attr("data-audiotitle") : titleText) + "&autoplay=" + autoplay);
			
			break;
			
			case "swf":
				
				fullPath();
				loadFrame(swfPlayer + "?swf=" + url + "&width=" + (wid.toString() + "&height=" + high.toString()));
			
			break;
			
			case "inline":
				
				var htm = $(url), con = htm.length ? htm.html() : "";
				content = $("<div />").addClass("jackbox-content jackbox-html").html(con).prependTo(container);
				content.css("width", wid).find("a").on("click", stopProp);
				
				$this.attr("data-height", content.outerHeight(true));
				writeSize();
				loaded();
			
			break;
			
			default:
				
				loadFrame(url, false, true);
			
			// end default
			
		}
		
		if(!hasFullscreen) return;
		(!passedLocal) ? fullNormal.show() : fullNormal.hide();
		
	}
	
	function fullPath() {
		
		if(url.search("http") !== -1) return "";
					
		var root = doc.URL.split("#")[0];
		
		if(root[root.length - 1] !== "index.html") {
			
			root = root.substring(0, root.lastIndexOf("index.html") + 1);
			
		}
		
		url = root + url;
		return root;
		
	}
	
	function turnOn() {
		
		if(hasThumbs) {
	
			var i = thumbs.length;
			while(i--) thumbs[i].on("click.jackbox", thumbClick);
			
		}
		
		panelLeft.on("click.jackbox", previousItem);
		panelRight.on("click.jackbox", nextItem);
	
		if(keyboard) docs.on("keydown.jackbox", checkKey); 
		if(touch && swipeable) content.cjSwipe("touchSwipe", catchSwipe);
		
	}
	
	function turnOff() {
		
		if(hasThumbs) {
		
			var i = thumbs.length;
			while(i--) thumbs[i].off("click.jackbox");
			
		}
		
		panelLeft.off(".jackbox");
		panelRight.off(".jackbox");
	
		if(keyboard) docs.off("keydown.jackbox"); 
		if(touch && swipeable) content.cjSwipe("unbindSwipe");
		
	}
	
	function checkKey(event) {
		
		switch(event.keyCode) {
			
			case 39:
			
				nextItem();
			
			break;
			
			case 37:
			
				previousItem();
			
			break;
			
			case 40:
			
				//toggleThumbs();
			
			break;
			
			case 38:
			
				//toggleThumbs();
			
			break;
			
		}
		
	}
	
	function checkKeyClose(event) {
		
		if(event.keyCode === 27) closer(event);

	}
	
	function infoIndex() {
		
		description.css("visibility", "hidden");
		
	}
	
	function ripThumbs() {
		
		var frag = doc.createDocumentFragment(), halfHeight = thumbnailHeight >> 1;
		
		thumbHolder = $("<div />").addClass("jackbox-thumb-holder").css("height", thumbnailHeight).appendTo(cover);
		thumbPanel = $("<div />").addClass("jackbox-thumb-panel").css("height", thumbnailHeight);
		thumbRight = $("<div />").addClass("jackbox-thumb-right");
		thumbLeft = $("<div />").addClass("jackbox-thumb-left");
		
		frag.appendChild(thumbPanel[0]);
		frag.appendChild(thumbRight[0]);
		frag.appendChild(thumbLeft[0]);
		
		thumbPanel[0].cjThumbs = true;
		thumbHolder[0].appendChild(frag);
		thumbStrip = $("<div />").addClass("jackbox-thumb-strip").appendTo(thumbPanel);

		thumbLeft.css("top", halfHeight);
		thumbRight.css("top", halfHeight);
		
	}
	
	function loadThumbs() {
		
		var cur = list[catOn], 
		ar = [], 
		i = leg, 
		titles,
		holds, 
		$this,
		frag,
		imgs, 
		img,
		ww,
		hh,
		pc;
		
		thumbsChecked = true;
		
		while(i--) {
			
			$this = cur[i];
			if($this.attr("data-thumbnail")) {
				
				ar[i] = false;	
				continue;
				
			}
			
			imgs = $this.children("img");
			if(imgs.length) {
			
				$this.attr("data-thumbnail", imgs.attr("src"));
				ar[i] = imgs;
				
			}
			else if($this.data("type") === "image") {
			
				$this.attr("data-thumbnail", $this.attr("href") || $this.attr("data-href"));
				ar[i] = false;	
				
			}
			else {
			
				$this.attr("data-thumbnail", defaultThumb);
				ar[i] = false;	
				
			}
				
		}
		
		thumbs = [];
		if(!thumbHolder) ripThumbs();
		frag = doc.createDocumentFragment();
		
		for(i = 0; i < leg; i++) {
			
			holds = thumbs[i] = $("<div />").data("id", i).addClass("jackbox-thumb").css({
				
				width: thumbnailWidth, 
				height: thumbnailHeight, 
				left: thmWidth * i
				
			}).on("click.jackbox", thumbClick);
			
			if(useTips) {
			
				titles = currentCat[i].attr("data-thumbTooltip") || currentCat[i].attr("data-title");
				if(titles) holds.data("theTitle", titles).on("mouseenter.jackbox", overThumb).on("mouseleave.jackbox", outThumb);
				
			}
			
			frag.appendChild(holds[0]);
			img = $("<img />").addClass("jb-thumb").one("load.jackbox", thumbLoaded).appendTo(holds);
			holds.data("theThumb", img);
			
			if(ar[i]) {
			
				ww = ar[i].attr("width") || ar[i].width();
				hh = ar[i].attr("height") || ar[i].height();
				
			}
			else {
			
				ww = thumbnailWidth;
				hh = thumbnailHeight;
				
			}
			
			if(ww > thumbnailWidth && hh > thumbnailHeight) {
				
				pc = ww > hh ? thumbnailWidth / ww : thumbnailHeight / hh;
				
				ww *= pc;
				hh *= pc;
				
				if(hh < thumbnailHeight) {
				
					var dif = (thumbnailHeight - hh) / thumbnailHeight;
					
					ww += ww * dif;
					hh += hh * dif;
					
				}
				
				if(ww < thumbnailWidth) {
				
					var difs = (thumbnailWidth - ww) / thumbnailWidth;
					
					ww += ww * difs;
					hh += hh * difs;
					
				}
				
				if(ww !== (ww | 0)) ww = (ww + 1) | 0;
				if(hh !== (hh | 0)) hh = (hh + 1) | 0;
				
			}
			
			img.attr({width: ww, height: hh, src: cur[i].attr("data-thumbnail")});
						
		}
		
		thumbStrip[0].appendChild(frag);
		totalThumbs = thumbs.length;
		stripWidth = thmWidth * i;
		hasThumbs = true;
		
		thumbOn = 0;
		thumbHolder.on("click.jackbox", preventDefault).show();
		posThumbs();
		
		if(!showHide) return;
		if(!thumbsStartHidden) {
			
			showThumbs.hide();
			hideThumbs.show();
			thumbHolder.css("bottom", 30);
			
		}
		else {

			hideThumbs.hide();
			showThumbs.show();
			thumbHolder.css("bottom", thumbVis);
			
		}
		
		showHide.on("click.jackbox", toggleThumbs);

	}
	
	function thumbEnter() {
	
		thumbPanel.data("offLeft", thumbPanel.offset().left);
		
	}
	
	function outThumb() {
	
		thumbTip.css({opacity: 0, visibility: "hidden"});
		
	}
	
	function thumbArrowNext(event) {
		
		if(typeof event === "object") event.stopPropagation();
		
		if(thumbOn < leg - numThumbs) {
					
			thumbOn++;
			checkArrows(false, true);
			
		}
		
	}
	
	function thumbArrowPrev(event) {
		
		if(typeof event === "object") event.stopPropagation();
		
		if(thumbOn > 0) {
					
			thumbOn--;
			checkArrows(false, true);
			
		}
		
	}
	
	function thumbLoaded(event) {
		
		event.stopPropagation();
		
		var $this = $(this).parent();
		$this.addClass("jb-thumb-fadein").addClass("jb-thumb-loaded");;
		
		if(!touch) $this.addClass("jb-thumb-hover");
		if($this.data("id") === isOn) $this.addClass("jb-thumb-active");
		
	}
	
	function thumbClick(event) {
		
		event.stopPropagation();
		if(isLoading) return false;
		
		var $this = $(this), id = $this.data("id");
		
		if(id === isOn) return;
		if(hasThumbs) thumbs[isOn].removeClass("jb-thumb-active");
		
		isOn = id;
		fromThumb = true;
		runItem(catOn, isOn);
		
	}
	
	function addEvents() {
		
		eventsAdded = true;
		
		if(hasFullscreen) fullNormal.on("click.jackbox", toggleFull);
		if(closeBtn) closeBtn.one("click.jackbox", closer);
		if(info) info.on("click.jackbox", toggleInfo);
		
		if(!legged) return;
		if(goRight) goRight.on("click.jackbox", nextItem);
		if(goLeft) goLeft.on("click.jackbox", previousItem);
		if(useTips && thumbPanel) thumbPanel.on("mouseenter.jackbox", thumbEnter);
		
		if(touch && description) {
				
			description[0].addEventListener("touchstart", stopProp, false);
			description[0].addEventListener("touchmove", stopProp, false);
			description[0].addEventListener("touchend", stopProp, false);	
			
		}

	}
	
	function toggleFull() {
		
		if(!isFullscreen) {
			
			win.off(".jackbox");
			isFullscreen = true;
			
			if(doc.mozFullScreenEnabled) {
				
				doc.addEventListener("mozfullscreenchange", fsChange, false);
				cover[0].mozRequestFullScreen();
					
			}
			else if(cover[0].webkitRequestFullScreen) {
				
				doc.addEventListener("webkitfullscreenchange", fsChange, false);
				cover[0].webkitRequestFullScreen();
				
			}
			
		}
		else {
			
			exitFull();
			
		}
		
	}
	
	function fsChange() {
	
		if(doc.webkitIsFullScreen || doc.mozFullScreen) {
			
			sizer();	
			
		}
		else {
		
			exitFull(true);
			
		}
		
	}
	
	function nativeExit(event) {
		
		doc.removeEventListener(event.type, nativeExit, false);
		
		sizer();
		
		win.on("resize.jackbox", resized);
		
	}
	
	function exitFull(fromNative) {
		
		isFullscreen = false;
		
		if(doc.mozFullScreenEnabled) {
			
			doc.removeEventListener("mozfullscreenchange", fsChange, false);
			
			if(fromNative) {
				
				sizer();
				win.on("resize.jackbox", resized);
				
			}
			else {
			
				doc.addEventListener("mozfullscreenchange", nativeExit, false);
				doc.mozCancelFullScreen();
				
			}

		}
		else if(cover[0].webkitRequestFullScreen) {
			
			doc.removeEventListener("webkitfullscreenchange", fsChange, false);
			
			if(fromNative) {
				
				sizer();
				win.on("resize.jackbox", resized);
				
			}
			else {
				
				doc.addEventListener("webkitfullscreenchange", nativeExit, false);
				doc.webkitCancelFullScreen();
				
			}
			
		}
		
	}
	
	function writeSize() {
		
		isImage = false;
		
		oWidth = $this.attr("data-width") ? parseInt($this.attr("data-width"), 10) : defaultVideoWidth;
		oHeight = $this.attr("data-height") ? parseInt($this.attr("data-height"), 10) : defaultVideoHeight;
		upsize = $this.attr("data-scaleUp") === "true";
		
		setSize();
		
	}
	
	function setSize() {
		
		bufferW = oWidth + paddingWide + panelBuffer + boxBuffer;
		bufferH = oHeight + boxed;
		
		sizer("true");
		
	}
	
	function killActive() {
		
		clearTimeout(timer);
		Jacked.stopTween(holder[0]);
		
		win.off(".jackbox");
		if(touch) doc.removeEventListener("touchmove", returnFalse, false);
		
		if(content) {
			
			Jacked.stopTween(content[0]);
			content.remove();
			content = null;
				
		}
		
		if(socialFrame) {
		
			socialFrame.remove();
			socialFrame = null;
			
		}
		
		if(topContent) {
			
			Jacked.stopTween(topContent[0], true);
			topContent.hide();
			
		}
		
		if(bottomContent) {
			
			Jacked.stopTween(bottomContent[0], true);
			bottomContent.hide();
			
		}
		
		if(!info) return;
			
		info.removeClass("jb-info-inactive");
		Jacked.stopTween(descHolder[0]);
		descHolder.empty().hide();
		
	}
	
	function closer(event) {
		
		event.stopPropagation();
		
		(deepLinking) ? $.address.value("") : closing();
		
	}
	
	function killThumbs() {
		
		Jacked.stopTween(thumbHolder[0]);
		thumbHolder.off(".jackbox").hide();
		
		var thumber;	
			
		while(thumbs.length) {
			
			thumber = thumbs[0];
			Jacked.stopTween(thumber[0]);
			
			thumber.remove();
			thumbs.shift();
			
		}
		
		thumbLeft.off(".jackbox").hide();
		thumbRight.off(".jackbox").hide();
		
		if(touch) thumbPanel.cjSwipe("unbindSwipe");
		
		Jacked.stopTween(thumbStrip[0]);
		thumbStrip.empty().css("margin-left", 0);
		
		if(showHide) {
			
			showHide.off(".jackbox");
			
			if(showHide) {
				
				showThumbs.hide();
				hideThumbs.show();
				
			}
			
		}
		
		hasThumbs = thumbs = null;
		
	}
	
	function closing() {
		
		clearTimeout(runTime);
		
		killActive();
		cover.unbind(".jackbox");
		if(keyboard) docs.off("keydown.jackbox_keyboard"); 
		
		if(legged) {
			
			if(keyboard) docs.off("keydown.jackbox"); 
			if(goLeft) goLeft.off(".jackbox");
			if(goRight) goRight.off(".jackbox");
			if(useTips && thumbPanel) thumbPanel.off(".jackbox");
			
			Jacked.stopTween(panelRight[0], true);
			Jacked.stopTween(panelLeft[0], true);
			
			var style = {opacity: 0, visibility: "hidden"};
			panelRight.off(".jackbox").css(style);
			panelLeft.off(".jackbox").css(style);
			
		}
		else {
		
			if(controls) controls.show();
			if(showHide) showHide.show();
			
		}
		
		wrapper.hide().off(".jackbox");
		preloader.removeClass("jackbox-spin-preloader");
		
		if(typeof words !== "undefined") {
			
			if(words.data("links")) words.data("links").off(".jackbox");
			words.empty();
			
		}
		
		if(hasFullscreen) fullNormal.off(".jackbox");
		if(closeBtn) closeBtn.unbind(".jackbox");
		if(info) info.off(".jackbox");
		if(hasThumbs) killThumbs();
		
		if(!showScroll) parents.each(removeOverflow);
		Jacked.fadeOut(cover[0], {duration: 1000, callback: onFaded});
		holder.css({marginLeft: holOrigLeft, marginTop: holOrigTop});
		
		if(touch) {
			
			removeTouches();
			doc.removeEventListener("touchmove", returnFalse, false);
			
		}
		
		setTimeout(scrollback, 10);
		
		if(description) {
			
			description.css("visibility", "hidden");
			
			if(touch) {
				
				description[0].removeEventListener("touchstart", stopProp, false);
				description[0].removeEventListener("touchmove", stopProp, false);
				description[0].removeEventListener("touchend", stopProp, false);	
				
			}
			
		}
		
		$this = isActive = isFullscreen = fromThumb = firstCheck = eventsAdded = arrowClicked = thumbsChecked = oldWidth = null;
		
	}
	
	function scrollback() {
	
		if(scrollPos !== 0) {
			
			if(!showScroll && !touch) {
			
				scroller.animate({scrollTop: scrollPos}, {duration: 300, queue: false});
				
			}
			else {
			
				scroller.scrollTop(scrollPos);
				
			}
			
		}
		
	}
	
	function onFaded() {
		
		cover.detach();
		
	}
	
	function catchSwipe(left) {
		
		(!left) ? nextItem() : previousItem();
		
	}
	
	function returnFalse(event) {
	
		event.preventDefault();
		
	}
	
	function createElements() {
		
		elements = true;
		total = $(".jb-total");
		info = $(".jackbox-info");
		divider = $(".jb-divider");
		current = $(".jb-current");
		closeBtn = $(".jackbox-close");
		title = $(".jackbox-title-text");
		words = $(".jackbox-title-txt");
		controls = $(".jackbox-controls");
		goLeft = $(".jackbox-arrow-left");
		lightSocial = $(".jackbox-social");
		goRight = $(".jackbox-arrow-right");
		showHide = $(".jackbox-button-thumbs");
		showThumbs = $(".jackbox-show-thumbs");
		hideThumbs = $(".jackbox-hide-thumbs");
		
		if(!words.length) words = null;
		if(!title.length) title = null;
		if(!goLeft.length) goLeft = null;
		if(!divider.length) divider = null;
		if(!goRight.length) goRight = null;
		if(!controls.length) controls = null;
		if(!closeBtn.length) closeBtn = null;
		if(!lightSocial.length) lightSocial = null;
		if(!current.length || !total.length) current = null;
		
		if(hasFullscreen) {
			
			$(".jackbox-ns").hide();
			if(!fullNormal.length) fullNormal = hasFullscreen = null;
			
		}
		else if(fullNormal) {
		
			fullNormal.hide();
			
		}
		
		if(useThumbs) {
		
			if(showHide.length && showThumbs.length && hideThumbs.length) {
				
				showThumbs.hide();
				
			}
			else {
				
				showHide = showThumbs = hideThumbs = null;
				
			}
			
		}
		else {
		
			showHide.hide();
			showHide = showThumbs = hideThumbs = null;
			
		}
		
		if(info.length) {
			
			description = $("<div />").addClass("jackbox-info-text").appendTo(container).css("visibility", "hidden");
			descHolder = $("<div />").addClass("jackbox-description-text").appendTo(description);
			
		}
		else {
		
			info = null;
			
		}
		
		if(!useTips) return;
		
		thumbTip = $("<span />").addClass("jackbox-thumb-tip").css("bottom", thumbnailHeight);
		thumbTipText = $("<span />").addClass("jackbox-thumb-tip-text").text("render me").appendTo(thumbTip);
		
		thumbTip.appendTo(cover);
		thumbTipBuf = (parseInt(thumbTip.css("padding-left"), 10) << 1) - (thumbnailMargin << 1);
		
	}
	
	function jsonLoaded(data, response) {
		
    	if(isActive || response.toLowerCase() !== "success" || !data) return;
			
		var i = data.length, base = document.URL;
		base = base.substring(0, base.lastIndexOf("index.html"));
		
		while(i--) {
			
			$("<img />").attr("src", baseName + "/" + data[i].split("index.html").join(""));
			
		}
		
	}
	
	function getVimeoThumb($video, url) {
						
		$.getJSON("http://vimeo.com/api/v2/video/" + url.split("http://vimeo.com/")[1] + ".json?callback=?", {format: "json"}, function(data) {
			
			$video.attr("data-thumbnail", data[0].thumbnail_small);
			
		});
		
	}
				
	function drawBlur() {
		
		var $this = $(this), img = $this.next("img"), newImg, href = img.attr("src");
		
		if(!img.length) return;
			
		newImg = $("<img />").attr({
			
			width: img.attr("width"),
			height: img.attr("height")
			
		}).data("parent", $this).one("load.jackbox", blurThumbLoaded).insertAfter(img);
		
		img.remove();
		newImg.attr("src", href);
		
	}
	
	function blurThumbLoaded() {
		
		var img = $(this), 
		$this = img.data("parent"),
		
		width = parseInt($this.css("width"), 10) || $this.width(),
		height = parseInt($this.css("height"), 10) || $this.height(),
		
		canvas = $("<canvas />").addClass("jackbox-canvas-blur").attr({
			
			width: width, 
			height: height
			
		}).insertBefore($this),
			
		now = Date.now(),
		imgId = now + 1,
		canvasId = now + 2;
		
		img.attr("id", imgId);
		canvas.attr("id", canvasId);
		StackBlurImage(imgId, canvasId, 29);
		
	}
	
	function addTip() {
	
		var $this = $(this);
		
		$this.parent().data({
			
			tip: $this,
			tipWidth: $this.width() - 27,
			tipHeight: $this.height() + 17
			
		}).on("mouseenter.jackbox", overTip).on("mouseleave.jackbox", outTip);
		
	}
	
	function overTip() {
		
		var $this = $(this), off = $this.offset(), data = $this.data();
			
		data.tipX = off.left,
		data.tipY = off.top,
		data.tip.css({opacity: 1, visibility: "visible"});
		
		$this.on("mousemove.jackbox", moveTip);
		
	}
	
	function outTip() {
		
		var $this = $(this).off("mousemove.jackbox");
		
		if(!isIE8) {
			
			$this.data("tip").css({opacity: 0, visibility: "hidden"});
			
		}
		else {
		
			$this.data("tip").css("opacity", 0);
			
		}
		
	}
	
	function checkImage(st) {
		
		return st === "jpg" || st === "png" || st === "jpeg" || st === "gif";
		
	}
	
	function checkVideo(st, popped) {
		
		if(st.search("youtube.com") !== -1) {
			
			return "youtube";
			
		}
		else if(st.search("vimeo.com") !== -1) {
			
			return "vimeo";
			
		}
		else if(popped === "mp4") {
			
			return "local";
			
		}
		else {
		
			return false;
			
		}
		
	}
	
	function stopProp(event) {
	
		event.stopImmediatePropagation();
		
	}
	
	function preventDefault(event) {
	
		if(!$(event.target).is("a")) {
	
			event.stopPropagation();
			event.preventDefault();	
			
		}
		
	}
	
		
})(jQuery);

function jackboxFrameReady() {

	jQuery.fn.jackBox("frameReady");	
	
}