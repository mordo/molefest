jQuery("html").removeClass("no-js").addClass("js");  // remove no-js class -> js javascript enabled

/*
Copyright (c) 2012, Jarrod Overson All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer
in the documentation and/or other materials provided with the distribution. The names of its contributors may not be used
to endorse or promote products derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
IN NO EVENT SHALL JARROD OVERSON BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/


;(function ( $, window) {
  "use strict";

  var defaults = {
      pulses   : 1,
      interval : 0,
      returnDelay : 0,
      duration : 500
    };

  $.fn.pulse = function(properties, options, callback) {
    // $(...).pulse('destroy');
    var stop = properties === 'destroy';

    if (typeof options === 'function') {
      callback = options;
      options = {};
    }

    options = $.extend({}, defaults, options);

    if (!(options.interval >= 0))    options.interval = 0;
    if (!(options.returnDelay >= 0)) options.returnDelay = 0;
    if (!(options.duration >= 0))    options.duration = 500;
    if (!(options.pulses >= -1))     options.pulses = 1;
    if (typeof callback !== 'function') callback = function(){};

    return this.each(function () {
      var el = $(this),
          property,
          original = {};

      var data = el.data('pulse') || {};
      data.stop = stop;
      el.data('pulse', data);

      for (property in properties) {
        if (properties.hasOwnProperty(property)) original[property] = el.css(property);
      }

      var timesPulsed = 0;

      function animate() {
        if (el.data('pulse').stop) return;
        if (options.pulses > -1 && ++timesPulsed > options.pulses) return callback.apply(el);
        el.animate(
          properties,
          {
            duration : options.duration / 2,
            complete : function(){
              window.setTimeout(function(){
                el.animate(original, {
                  duration : options.duration / 2,
                  complete : function() {
                    window.setTimeout(animate, options.interval);
                  }
                });
              },options.returnDelay);
            }
          }
        );
      }

      animate();
    });
  };

})( jQuery, window, document );


//Generated by CoffeeScript 1.6.2
/*
jQuery Waypoints - v2.0.2
Copyright (c) 2011-2013 Caleb Troughton
Dual licensed under the MIT license and GPL license.
https://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt
*/
;(function(){var t=[].indexOf||function(t){for(var e=0,n=this.length;e<n;e++){if(e in this&&this[e]===t)return e}return-1},e=[].slice;(function(t,e){if(typeof define==="function"&&define.amd){return define("waypoints",["jquery"],function(n){return e(n,t)})}else{return e(t.jQuery,t)}})(this,function(n,r){var i,o,l,s,f,u,a,c,h,d,p,y,v,w,g,m;i=n(r);c=t.call(r,"ontouchstart")>=0;s={horizontal:{},vertical:{}};f=1;a={};u="waypoints-context-id";p="resize.waypoints";y="scroll.waypoints";v=1;w="waypoints-waypoint-ids";g="waypoint";m="waypoints";o=function(){function t(t){var e=this;this.$element=t;this.element=t[0];this.didResize=false;this.didScroll=false;this.id="context"+f++;this.oldScroll={x:t.scrollLeft(),y:t.scrollTop()};this.waypoints={horizontal:{},vertical:{}};t.data(u,this.id);a[this.id]=this;t.bind(y,function(){var t;if(!(e.didScroll||c)){e.didScroll=true;t=function(){e.doScroll();return e.didScroll=false};return r.setTimeout(t,n[m].settings.scrollThrottle)}});t.bind(p,function(){var t;if(!e.didResize){e.didResize=true;t=function(){n[m]("refresh");return e.didResize=false};return r.setTimeout(t,n[m].settings.resizeThrottle)}})}t.prototype.doScroll=function(){var t,e=this;t={horizontal:{newScroll:this.$element.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.$element.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};if(c&&(!t.vertical.oldScroll||!t.vertical.newScroll)){n[m]("refresh")}n.each(t,function(t,r){var i,o,l;l=[];o=r.newScroll>r.oldScroll;i=o?r.forward:r.backward;n.each(e.waypoints[t],function(t,e){var n,i;if(r.oldScroll<(n=e.offset)&&n<=r.newScroll){return l.push(e)}else if(r.newScroll<(i=e.offset)&&i<=r.oldScroll){return l.push(e)}});l.sort(function(t,e){return t.offset-e.offset});if(!o){l.reverse()}return n.each(l,function(t,e){if(e.options.continuous||t===l.length-1){return e.trigger([i])}})});return this.oldScroll={x:t.horizontal.newScroll,y:t.vertical.newScroll}};t.prototype.refresh=function(){var t,e,r,i=this;r=n.isWindow(this.element);e=this.$element.offset();this.doScroll();t={horizontal:{contextOffset:r?0:e.left,contextScroll:r?0:this.oldScroll.x,contextDimension:this.$element.width(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:r?0:e.top,contextScroll:r?0:this.oldScroll.y,contextDimension:r?n[m]("viewportHeight"):this.$element.height(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}};return n.each(t,function(t,e){return n.each(i.waypoints[t],function(t,r){var i,o,l,s,f;i=r.options.offset;l=r.offset;o=n.isWindow(r.element)?0:r.$element.offset()[e.offsetProp];if(n.isFunction(i)){i=i.apply(r.element)}else if(typeof i==="string"){i=parseFloat(i);if(r.options.offset.indexOf("%")>-1){i=Math.ceil(e.contextDimension*i/100)}}r.offset=o-e.contextOffset+e.contextScroll-i;if(r.options.onlyOnScroll&&l!=null||!r.enabled){return}if(l!==null&&l<(s=e.oldScroll)&&s<=r.offset){return r.trigger([e.backward])}else if(l!==null&&l>(f=e.oldScroll)&&f>=r.offset){return r.trigger([e.forward])}else if(l===null&&e.oldScroll>=r.offset){return r.trigger([e.forward])}})})};t.prototype.checkEmpty=function(){if(n.isEmptyObject(this.waypoints.horizontal)&&n.isEmptyObject(this.waypoints.vertical)){this.$element.unbind([p,y].join(" "));return delete a[this.id]}};return t}();l=function(){function t(t,e,r){var i,o;r=n.extend({},n.fn[g].defaults,r);if(r.offset==="bottom-in-view"){r.offset=function(){var t;t=n[m]("viewportHeight");if(!n.isWindow(e.element)){t=e.$element.height()}return t-n(this).outerHeight()}}this.$element=t;this.element=t[0];this.axis=r.horizontal?"horizontal":"vertical";this.callback=r.handler;this.context=e;this.enabled=r.enabled;this.id="waypoints"+v++;this.offset=null;this.options=r;e.waypoints[this.axis][this.id]=this;s[this.axis][this.id]=this;i=(o=t.data(w))!=null?o:[];i.push(this.id);t.data(w,i)}t.prototype.trigger=function(t){if(!this.enabled){return}if(this.callback!=null){this.callback.apply(this.element,t)}if(this.options.triggerOnce){return this.destroy()}};t.prototype.disable=function(){return this.enabled=false};t.prototype.enable=function(){this.context.refresh();return this.enabled=true};t.prototype.destroy=function(){delete s[this.axis][this.id];delete this.context.waypoints[this.axis][this.id];return this.context.checkEmpty()};t.getWaypointsByElement=function(t){var e,r;r=n(t).data(w);if(!r){return[]}e=n.extend({},s.horizontal,s.vertical);return n.map(r,function(t){return e[t]})};return t}();d={init:function(t,e){var r;if(e==null){e={}}if((r=e.handler)==null){e.handler=t}this.each(function(){var t,r,i,s;t=n(this);i=(s=e.context)!=null?s:n.fn[g].defaults.context;if(!n.isWindow(i)){i=t.closest(i)}i=n(i);r=a[i.data(u)];if(!r){r=new o(i)}return new l(t,r,e)});n[m]("refresh");return this},disable:function(){return d._invoke(this,"disable")},enable:function(){return d._invoke(this,"enable")},destroy:function(){return d._invoke(this,"destroy")},prev:function(t,e){return d._traverse.call(this,t,e,function(t,e,n){if(e>0){return t.push(n[e-1])}})},next:function(t,e){return d._traverse.call(this,t,e,function(t,e,n){if(e<n.length-1){return t.push(n[e+1])}})},_traverse:function(t,e,i){var o,l;if(t==null){t="vertical"}if(e==null){e=r}l=h.aggregate(e);o=[];this.each(function(){var e;e=n.inArray(this,l[t]);return i(o,e,l[t])});return this.pushStack(o)},_invoke:function(t,e){t.each(function(){var t;t=l.getWaypointsByElement(this);return n.each(t,function(t,n){n[e]();return true})});return this}};n.fn[g]=function(){var t,r;r=arguments[0],t=2<=arguments.length?e.call(arguments,1):[];if(d[r]){return d[r].apply(this,t)}else if(n.isFunction(r)){return d.init.apply(this,arguments)}else if(n.isPlainObject(r)){return d.init.apply(this,[null,r])}else if(!r){return n.error("jQuery Waypoints needs a callback function or handler option.")}else{return n.error("The "+r+" method does not exist in jQuery Waypoints.")}};n.fn[g].defaults={context:r,continuous:true,enabled:true,horizontal:false,offset:0,triggerOnce:false};h={refresh:function(){return n.each(a,function(t,e){return e.refresh()})},viewportHeight:function(){var t;return(t=r.innerHeight)!=null?t:i.height()},aggregate:function(t){var e,r,i;e=s;if(t){e=(i=a[n(t).data(u)])!=null?i.waypoints:void 0}if(!e){return[]}r={horizontal:[],vertical:[]};n.each(r,function(t,i){n.each(e[t],function(t,e){return i.push(e)});i.sort(function(t,e){return t.offset-e.offset});r[t]=n.map(i,function(t){return t.element});return r[t]=n.unique(r[t])});return r},above:function(t){if(t==null){t=r}return h._filter(t,"vertical",function(t,e){return e.offset<=t.oldScroll.y})},below:function(t){if(t==null){t=r}return h._filter(t,"vertical",function(t,e){return e.offset>t.oldScroll.y})},left:function(t){if(t==null){t=r}return h._filter(t,"horizontal",function(t,e){return e.offset<=t.oldScroll.x})},right:function(t){if(t==null){t=r}return h._filter(t,"horizontal",function(t,e){return e.offset>t.oldScroll.x})},enable:function(){return h._invoke("enable")},disable:function(){return h._invoke("disable")},destroy:function(){return h._invoke("destroy")},extendFn:function(t,e){return d[t]=e},_invoke:function(t){var e;e=n.extend({},s.vertical,s.horizontal);return n.each(e,function(e,n){n[t]();return true})},_filter:function(t,e,r){var i,o;i=a[n(t).data(u)];if(!i){return[]}o=[];n.each(i.waypoints[e],function(t,e){if(r(i,e)){return o.push(e)}});o.sort(function(t,e){return t.offset-e.offset});return n.map(o,function(t){return t.element})}};n[m]=function(){var t,n;n=arguments[0],t=2<=arguments.length?e.call(arguments,1):[];if(h[n]){return h[n].apply(null,t)}else{return h.aggregate.call(null,n)}};n[m].settings={resizeThrottle:100,scrollThrottle:30};return i.load(function(){return n[m]("refresh")})})}).call(this);

/**
 * Copyright (c) 2007-2012 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com
 * Dual licensed under MIT and GPL.
 * @author Ariel Flesler
 * @version 1.4.4
 */
;(function($){var h=$.scrollTo=function(a,b,c){$(window).scrollTo(a,b,c)};h.defaults={axis:'xy',duration:parseFloat($.fn.jquery)>=1.3?0:1,limit:true};h.window=function(a){return $(window)._scrollable()};$.fn._scrollable=function(){return this.map(function(){var a=this,isWin=!a.nodeName||$.inArray(a.nodeName.toLowerCase(),['iframe','#document','html','body'])!=-1;if(!isWin)return a;var b=(a.contentWindow||a).document||a.ownerDocument||a;return/webkit/i.test(navigator.userAgent)||b.compatMode=='BackCompat'?b.body:b.documentElement})};$.fn.scrollTo=function(e,f,g){if(typeof f=='object'){g=f;f=0}if(typeof g=='function')g={onAfter:g};if(e=='max')e=9e9;g=$.extend({},h.defaults,g);f=f||g.duration;g.queue=g.queue&&g.axis.length>1;if(g.queue)f/=2;g.offset=both(g.offset);g.over=both(g.over);return this._scrollable().each(function(){if(e==null)return;var d=this,$elem=$(d),targ=e,toff,attr={},win=$elem.is('html,body');switch(typeof targ){case'number':case'string':if(/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(targ)){targ=both(targ);break}targ=$(targ,this);if(!targ.length)return;case'object':if(targ.is||targ.style)toff=(targ=$(targ)).offset()}$.each(g.axis.split(''),function(i,a){var b=a=='x'?'Left':'Top',pos=b.toLowerCase(),key='scroll'+b,old=d[key],max=h.max(d,a);if(toff){attr[key]=toff[pos]+(win?0:old-$elem.offset()[pos]);if(g.margin){attr[key]-=parseInt(targ.css('margin'+b))||0;attr[key]-=parseInt(targ.css('border'+b+'Width'))||0}attr[key]+=g.offset[pos]||0;if(g.over[pos])attr[key]+=targ[a=='x'?'width':'height']()*g.over[pos]}else{var c=targ[pos];attr[key]=c.slice&&c.slice(-1)=='%'?parseFloat(c)/100*max:c}if(g.limit&&/^\d+$/.test(attr[key]))attr[key]=attr[key]<=0?0:Math.min(attr[key],max);if(!i&&g.queue){if(old!=attr[key])animate(g.onAfterFirst);delete attr[key]}});animate(g.onAfter);function animate(a){$elem.animate(attr,f,g.easing,a&&function(){a.call(this,e,g)})}}).end()};h.max=function(a,b){var c=b=='x'?'Width':'Height',scroll='scroll'+c;if(!$(a).is('html,body'))return a[scroll]-$(a)[c.toLowerCase()]();var d='client'+c,html=a.ownerDocument.documentElement,body=a.ownerDocument.body;return Math.max(html[scroll],body[scroll])-Math.min(html[d],body[d])};function both(a){return typeof a=='object'?a:{top:a,left:a}}})(jQuery);
/*----------------------------------------------------------------------------------
All jquery stuff is placed in this file
----------------------------------------------------------------------------------*/
  // modified Isotope methods for gutters in masonry
  jQuery.Bk_Isotope.prototype._getMasonryGutterColumns = function() {
    var gutter = this.options.masonry && this.options.masonry.gutterWidth || 0;
        containerWidth = this.element.width();
  
    this.masonry.columnWidth = this.options.masonry && this.options.masonry.columnWidth ||
                  // or use the size of the first item
                  this.$filteredAtoms.outerWidth(true) ||
                  // if there's no items, use size of container
                  containerWidth;

    this.masonry.columnWidth += gutter;

    this.masonry.cols = Math.floor( ( containerWidth + gutter ) / this.masonry.columnWidth );
    this.masonry.cols = Math.max( this.masonry.cols, 1 );
  };

  jQuery.Bk_Isotope.prototype._masonryReset = function() {
    // layout-specific props
    this.masonry = {};
    // FIXME shouldn't have to call this again
    this._getMasonryGutterColumns();
    var i = this.masonry.cols;
    this.masonry.colYs = [];
    while (i--) {
      this.masonry.colYs.push( 0 );
    }
  };

  jQuery.Bk_Isotope.prototype._masonryResizeChanged = function() {
    var prevSegments = this.masonry.cols;
    // update cols/rows
    this._getMasonryGutterColumns();
    // return if updated cols/rows is not equal to previous
    return ( this.masonry.cols !== prevSegments );
  };

 /*
  * Scroll to fixed plugin
  * 
  */
 (function(a){a.isScrollToFixed=function(b){return a(b).data("ScrollToFixed")!==undefined};a.ScrollToFixed=function(d,h){var k=this;k.$el=a(d);k.el=d;k.$el.data("ScrollToFixed",k);var c=false;var F=k.$el;var G;var D;var p;var C=0;var q=0;var i=-1;var e=-1;var t=null;var y;var f;function u(){F.trigger("preUnfixed.ScrollToFixed");j();F.trigger("unfixed.ScrollToFixed");e=-1;C=F.offset().top;q=F.offset().left;if(k.options.offsets){q+=(F.offset().left-F.position().left)}if(i==-1){i=q}G=F.css("position");c=true;if(k.options.bottom!=-1){F.trigger("preFixed.ScrollToFixed");w();F.trigger("fixed.ScrollToFixed")}}function m(){var H=k.options.limit;if(!H){return 0}if(typeof(H)==="function"){return H.apply(F)}return H}function o(){return G==="fixed"}function x(){return G==="absolute"}function g(){return !(o()||x())}function w(){if(!o()){t.css({display:F.css("display"),width:F.outerWidth(true),height:F.outerHeight(true),"float":F.css("float")});cssOptions={position:"fixed",top:k.options.bottom==-1?s():"",bottom:k.options.bottom==-1?"":k.options.bottom,"margin-left":"0px"};if(!k.options.dontSetWidth){cssOptions.width=F.width()}F.css(cssOptions);F.addClass("scroll-to-fixed-fixed");if(k.options.className){F.addClass(k.options.className)}G="fixed"}}function b(){var I=m();var H=q;if(k.options.removeOffsets){H=0;I=I-C}cssOptions={position:"absolute",top:I,left:H,"margin-left":"0px",bottom:""};if(!k.options.dontSetWidth){cssOptions.width=F.width()}F.css(cssOptions);G="absolute"}function j(){if(!g()){e=-1;t.css("display","none");F.css({width:"",position:D,left:"",top:p.top,"margin-left":""});F.removeClass("scroll-to-fixed-fixed");if(k.options.className){F.removeClass(k.options.className)}G=null}}function v(H){if(H!=e){F.css("left",q-H);e=H}}function s(){var H=k.options.marginTop;if(!H){return 0}if(typeof(H)==="function"){return H.apply(F)}return H}function z(){if(!a.isScrollToFixed(F)){return}var J=c;if(!c){u()}var H=a(window).scrollLeft();var K=a(window).scrollTop();var I=m();if(k.options.minWidth&&a(window).width()<k.options.minWidth){if(!g()||!J){n();F.trigger("preUnfixed.ScrollToFixed");j();F.trigger("unfixed.ScrollToFixed")}}else{if(k.options.bottom==-1){if(I>0&&K>=I-s()){if(!x()||!J){n();F.trigger("preAbsolute.ScrollToFixed");b();F.trigger("unfixed.ScrollToFixed")}}else{if(K>=C-s()){if(!o()||!J){n();F.trigger("preFixed.ScrollToFixed");w();e=-1;F.trigger("fixed.ScrollToFixed")}v(H)}else{if(!g()||!J){n();F.trigger("preUnfixed.ScrollToFixed");j();F.trigger("unfixed.ScrollToFixed")}}}}else{if(I>0){if(K+a(window).height()-F.outerHeight(true)>=I-(s()||-l())){if(o()){n();F.trigger("preUnfixed.ScrollToFixed");if(D==="absolute"){b()}else{j()}F.trigger("unfixed.ScrollToFixed")}}else{if(!o()){n();F.trigger("preFixed.ScrollToFixed");w()}v(H);F.trigger("fixed.ScrollToFixed")}}else{v(H)}}}}function l(){if(!k.options.bottom){return 0}return k.options.bottom}function n(){var H=F.css("position");if(H=="absolute"){F.trigger("postAbsolute.ScrollToFixed")}else{if(H=="fixed"){F.trigger("postFixed.ScrollToFixed")}else{F.trigger("postUnfixed.ScrollToFixed")}}}var B=function(H){if(F.is(":visible")){c=false;z()}};var E=function(H){z()};var A=function(){var I=document.body;if(document.createElement&&I&&I.appendChild&&I.removeChild){var K=document.createElement("div");if(!K.getBoundingClientRect){return null}K.innerHTML="x";K.style.cssText="position:fixed;top:100px;";I.appendChild(K);var L=I.style.height,M=I.scrollTop;I.style.height="3000px";I.scrollTop=500;var H=K.getBoundingClientRect().top;I.style.height=L;var J=(H===100);I.removeChild(K);I.scrollTop=M;return J}return null};var r=function(H){H=H||window.event;if(H.preventDefault){H.preventDefault()}H.returnValue=false};k.init=function(){k.options=a.extend({},a.ScrollToFixed.defaultOptions,h);k.$el.css("z-index",k.options.zIndex);t=a("<div />");G=F.css("position");D=F.css("position");p=a.extend({},F.offset());if(g()){k.$el.after(t)}a(window).bind("resize.ScrollToFixed",B);a(window).bind("scroll.ScrollToFixed",E);if(k.options.preFixed){F.bind("preFixed.ScrollToFixed",k.options.preFixed)}if(k.options.postFixed){F.bind("postFixed.ScrollToFixed",k.options.postFixed)}if(k.options.preUnfixed){F.bind("preUnfixed.ScrollToFixed",k.options.preUnfixed)}if(k.options.postUnfixed){F.bind("postUnfixed.ScrollToFixed",k.options.postUnfixed)}if(k.options.preAbsolute){F.bind("preAbsolute.ScrollToFixed",k.options.preAbsolute)}if(k.options.postAbsolute){F.bind("postAbsolute.ScrollToFixed",k.options.postAbsolute)}if(k.options.fixed){F.bind("fixed.ScrollToFixed",k.options.fixed)}if(k.options.unfixed){F.bind("unfixed.ScrollToFixed",k.options.unfixed)}if(k.options.spacerClass){t.addClass(k.options.spacerClass)}F.bind("resize.ScrollToFixed",function(){t.height(F.height())});F.bind("scroll.ScrollToFixed",function(){F.trigger("preUnfixed.ScrollToFixed");j();F.trigger("unfixed.ScrollToFixed");z()});F.bind("detach.ScrollToFixed",function(H){r(H);F.trigger("preUnfixed.ScrollToFixed");j();F.trigger("unfixed.ScrollToFixed");a(window).unbind("resize.ScrollToFixed",B);a(window).unbind("scroll.ScrollToFixed",E);F.unbind(".ScrollToFixed");k.$el.removeData("ScrollToFixed")});B()};k.init()};a.ScrollToFixed.defaultOptions={marginTop:0,limit:0,bottom:-1,zIndex:1000};a.fn.scrollToFixed=function(b){return this.each(function(){(new a.ScrollToFixed(this,b))})}})(jQuery); 
  

/*!
 * imagesLoaded PACKAGED v3.0.4
 * JavaScript is all like "You images are done yet or what?"
 */

 (function(){"use strict";function e(){}function t(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}var n=e.prototype;n.getListeners=function(e){var t,n,i=this._getEvents();if("object"==typeof e){t={};for(n in i)i.hasOwnProperty(n)&&e.test(n)&&(t[n]=i[n])}else t=i[e]||(i[e]=[]);return t},n.flattenListeners=function(e){var t,n=[];for(t=0;e.length>t;t+=1)n.push(e[t].listener);return n},n.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},n.addListener=function(e,n){var i,r=this.getListenersAsObject(e),o="object"==typeof n;for(i in r)r.hasOwnProperty(i)&&-1===t(r[i],n)&&r[i].push(o?n:{listener:n,once:!1});return this},n.on=n.addListener,n.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},n.once=n.addOnceListener,n.defineEvent=function(e){return this.getListeners(e),this},n.defineEvents=function(e){for(var t=0;e.length>t;t+=1)this.defineEvent(e[t]);return this},n.removeListener=function(e,n){var i,r,o=this.getListenersAsObject(e);for(r in o)o.hasOwnProperty(r)&&(i=t(o[r],n),-1!==i&&o[r].splice(i,1));return this},n.off=n.removeListener,n.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},n.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},n.manipulateListeners=function(e,t,n){var i,r,o=e?this.removeListener:this.addListener,s=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(i=n.length;i--;)o.call(this,t,n[i]);else for(i in t)t.hasOwnProperty(i)&&(r=t[i])&&("function"==typeof r?o.call(this,i,r):s.call(this,i,r));return this},n.removeEvent=function(e){var t,n=typeof e,i=this._getEvents();if("string"===n)delete i[e];else if("object"===n)for(t in i)i.hasOwnProperty(t)&&e.test(t)&&delete i[t];else delete this._events;return this},n.emitEvent=function(e,t){var n,i,r,o,s=this.getListenersAsObject(e);for(r in s)if(s.hasOwnProperty(r))for(i=s[r].length;i--;)n=s[r][i],o=n.listener.apply(this,t||[]),(o===this._getOnceReturnValue()||n.once===!0)&&this.removeListener(e,s[r][i].listener);return this},n.trigger=n.emitEvent,n.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},n.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},n._getOnceReturnValue=function(){return this.hasOwnProperty("_onceReturnValue")?this._onceReturnValue:!0},n._getEvents=function(){return this._events||(this._events={})},"function"==typeof define&&define.amd?define(function(){return e}):"undefined"!=typeof module&&module.exports?module.exports=e:this.EventEmitter=e}).call(this),function(e){"use strict";var t=document.documentElement,n=function(){};t.addEventListener?n=function(e,t,n){e.addEventListener(t,n,!1)}:t.attachEvent&&(n=function(t,n,i){t[n+i]=i.handleEvent?function(){var t=e.event;t.target=t.target||t.srcElement,i.handleEvent.call(i,t)}:function(){var n=e.event;n.target=n.target||n.srcElement,i.call(t,n)},t.attachEvent("on"+n,t[n+i])});var i=function(){};t.removeEventListener?i=function(e,t,n){e.removeEventListener(t,n,!1)}:t.detachEvent&&(i=function(e,t,n){e.detachEvent("on"+t,e[t+n]);try{delete e[t+n]}catch(i){e[t+n]=void 0}});var r={bind:n,unbind:i};"function"==typeof define&&define.amd?define(r):e.eventie=r}(this),function(e){"use strict";function t(e,t){for(var n in t)e[n]=t[n];return e}function n(e){return"[object Array]"===c.call(e)}function i(e){var t=[];if(n(e))t=e;else if("number"==typeof e.length)for(var i=0,r=e.length;r>i;i++)t.push(e[i]);else t.push(e);return t}function r(e,n){function r(e,n,s){if(!(this instanceof r))return new r(e,n);"string"==typeof e&&(e=document.querySelectorAll(e)),this.elements=i(e),this.options=t({},this.options),"function"==typeof n?s=n:t(this.options,n),s&&this.on("always",s),this.getImages(),o&&(this.jqDeferred=new o.Deferred);var a=this;setTimeout(function(){a.check()})}function c(e){this.img=e}r.prototype=new e,r.prototype.options={},r.prototype.getImages=function(){this.images=[];for(var e=0,t=this.elements.length;t>e;e++){var n=this.elements[e];"IMG"===n.nodeName&&this.addImage(n);for(var i=n.querySelectorAll("img"),r=0,o=i.length;o>r;r++){var s=i[r];this.addImage(s)}}},r.prototype.addImage=function(e){var t=new c(e);this.images.push(t)},r.prototype.check=function(){function e(e,r){return t.options.debug&&a&&s.log("confirm",e,r),t.progress(e),n++,n===i&&t.complete(),!0}var t=this,n=0,i=this.images.length;if(this.hasAnyBroken=!1,!i)return this.complete(),void 0;for(var r=0;i>r;r++){var o=this.images[r];o.on("confirm",e),o.check()}},r.prototype.progress=function(e){this.hasAnyBroken=this.hasAnyBroken||!e.isLoaded;var t=this;setTimeout(function(){t.emit("progress",t,e),t.jqDeferred&&t.jqDeferred.notify(t,e)})},r.prototype.complete=function(){var e=this.hasAnyBroken?"fail":"done";this.isComplete=!0;var t=this;setTimeout(function(){if(t.emit(e,t),t.emit("always",t),t.jqDeferred){var n=t.hasAnyBroken?"reject":"resolve";t.jqDeferred[n](t)}})},o&&(o.fn.imagesLoaded=function(e,t){var n=new r(this,e,t);return n.jqDeferred.promise(o(this))});var f={};return c.prototype=new e,c.prototype.check=function(){var e=f[this.img.src];if(e)return this.useCached(e),void 0;if(f[this.img.src]=this,this.img.complete&&void 0!==this.img.naturalWidth)return this.confirm(0!==this.img.naturalWidth,"naturalWidth"),void 0;var t=this.proxyImage=new Image;n.bind(t,"load",this),n.bind(t,"error",this),t.src=this.img.src},c.prototype.useCached=function(e){if(e.isConfirmed)this.confirm(e.isLoaded,"cached was confirmed");else{var t=this;e.on("confirm",function(e){return t.confirm(e.isLoaded,"cache emitted confirmed"),!0})}},c.prototype.confirm=function(e,t){this.isConfirmed=!0,this.isLoaded=e,this.emit("confirm",this,t)},c.prototype.handleEvent=function(e){var t="on"+e.type;this[t]&&this[t](e)},c.prototype.onload=function(){this.confirm(!0,"onload"),this.unbindProxyEvents()},c.prototype.onerror=function(){this.confirm(!1,"onerror"),this.unbindProxyEvents()},c.prototype.unbindProxyEvents=function(){n.unbind(this.proxyImage,"load",this),n.unbind(this.proxyImage,"error",this)},r}var o=e.jQuery,s=e.console,a=s!==void 0,c=Object.prototype.toString;"function"==typeof define&&define.amd?define(["eventEmitter/EventEmitter","eventie/eventie"],r):e.imagesLoaded=r(e.EventEmitter,e.eventie)}(window); 
 
 


/*
 * check to see if it is on mobile based on screen size mobile and ipad in vertical position
 */
function bk_is_on_mobile() {
	return (jQuery(window).width() <= 768);
}

/*
 * When window is resized and on pageload set min-height css rule for div.bk-post-page-content-outer-wrap with sidebar so dots will always
 * hit bottom of page
 * 
 */
function bk_set_sidebar_height() {
	var $content_wrap = jQuery("div.bk-post-page-content-outer-wrap.with-sidebar-right, div.bk-post-page-content-outer-wrap.with-sidebar-left");
	var $sidebar = $content_wrap.siblings("div.bk-sidebar.bk-secondary-sidebar");
	
	if( bk_is_on_mobile() ) {
		$content_wrap.css({"min-height" : 'none'});
	} else {
		$content_wrap.css({"min-height" : $sidebar.height() + 'px'});
	}
}

function bk_set_port_sidebar_height() {
	var $content_wrap = jQuery("article.fullwidth_meta_right div.bk-portfolio-description-wrap, article.fullwidth_meta_left div.bk-portfolio-description-wrap");
	var $sidebar = $content_wrap.siblings("article.fullwidth_meta_right div.bk-portfolio-meta-wrap, article.fullwidth_meta_left div.bk-portfolio-meta-wrap");
	
	if( bk_is_on_mobile() ) {
		$content_wrap.css({"min-height" : 'none'});
	} else {
		$content_wrap.css({"min-height" : $sidebar.outerHeight() + 'px'});
		
	}
}

document.onreadystatechange = function() {
    if(document.readyState === 'complete') { 
    	bk_set_sidebar_height();
    	bk_set_port_sidebar_height();
	}   
};

/*----------------------------------------------------------------------------------
document ready function
----------------------------------------------------------------------------------*/   
jQuery(document).ready(function($){
	
	/*
	 * Global vars
	 */
	var thumbs_fadein_offset = 75;  // initial vertical offset in pixels from target position when applying animation for portfolio/gallery/blog fading in thumbs 
	var thumbs_fadein_waterfall_delay = 100; // waterfall delay in ms for blog/portfolio/gallery thumbs - set to 0 if all have to fade in in the same time
	var thumbs_fadein_time = 500; // how long each thumb will animate
	
	/*
	 * Count Douwn EVENT
	*/
        jQuery('#countDownEvent').countdown('2017/10/01', function(event) {
        var $this = $(this).html(event.strftime(''
          + '<div class="countDownContent">'
		  + '<div class="countDownDiv"><p class="countDownTime">%w</p> <p class="countDownLabel">weeks </p></div>'
          + '<div class="countDownDiv"><p class="countDownTime">%d</p> <p class="countDownLabel">days  </p></div>'
          + '<div class="countDownDiv"><p class="countDownTime">%H</p> <p class="countDownLabel">hr    </p></div>'
          + '<div class="countDownDiv"><p class="countDownTime">%M</p> <p class="countDownLabel">min   </p></div>'
          + '<div class="countDownDiv"><p class="countDownTime">%S</p> <p class="countDownLabel">sec   </p></div>'
		  + '</div>'));
        });
	
	/*
	 * Scoial buttons opacity hovers
	 */
	
	jQuery(".bk_social_button_wrap, .bk_blog_social_button_wrap").hover(
		function () {
			jQuery(this).stop().fadeTo('fast', 1);
		},
		function () {
			jQuery(this).stop().fadeTo('fast', 0.5);
		}
	);
	
	
	/*
	 * Navigation hovers
	 */
	var bk_stacked_menu_child_pages_expanded = jQuery("#bk-header").hasClass("bk_stacked_menu_child_pages_expanded");
	
	function bk_open_navigation() {
		if( jQuery(this).hasClass("bk-opening") || ( bk_stacked_menu_child_pages_expanded && jQuery(this).hasClass("current-menu-ancestor") ) ) {
			return true;
		}
		
		jQuery(this).addClass("bk-opening");
		jQuery(this).find("> ul.sub-menu").slideDown(500, function () {
			jQuery(this).parent("li.menu-item").removeClass("bk-opening");
			//bk_check_vertical_header_position();
		});
	}
	
	function bk_close_navigation() {
		if( jQuery(this).hasClass("bk-closing") || ( bk_stacked_menu_child_pages_expanded && jQuery(this).hasClass("current-menu-ancestor") ) ) {
			return true;
		}
		
		jQuery(this).addClass("bk-closing");
		
		jQuery(this).find("> ul.sub-menu").slideUp(500, function () {
			jQuery(this).parent("li.menu-item").removeClass("bk-closing");
			//bk_check_vertical_header_position();
		});
	}
	
	/*
	 * Handle for responsive and simple stacked menu hovers
	 * 
	 */
	
	jQuery(".bk-stacked-menu li.menu-item").each(function() {
		if( jQuery(this).find(" > .bk-sub-menu ").length ) {
			jQuery(this).find(" > a.bk-menu-item-anchor").append('<span class="sf-sub-indicator"></span>');
		}
	});
	
	jQuery("#fullwidth_navigation .bk-stacked-menu li.menu-item").hoverIntent(bk_open_navigation, bk_close_navigation);
	
	jQuery("#bk-responsive-menu li").each( function() {
	  	if( jQuery("> ul", this).length ) {
	  		var $sub_menu = jQuery("> ul", this);
	  		//$sub_menu.hide();
	  		var $toggle = jQuery('> a > span.sf-sub-indicator', this);
	  		$toggle.addClass("bk-triggered");
	  		$toggle.click( function(event) {
	  			event.preventDefault();
	  			if( $sub_menu.is(":visible") ) {
	  				$sub_menu.slideUp('slow', function() {
	  					$toggle.toggleClass("open");
					  });
	  			} else {
	  				$sub_menu.slideDown('slow', function() {
	  					$toggle.toggleClass("open");
					  });
	  			}		
	  		});	
	  	}	
	  });
	
	
	/*
	 * Superfish dropdown menu handle
	 * 
	 */
	if(jQuery().superfish) {
		 jQuery("ul.sf-menu").superfish({autoArrows: true,
		 								 speed: "fast",
		 								 animation: {opacity:'show', height:'show'},
		 								 delay: 300 });  // call supersubs first, then superfish, so that subs are
	}
	
	/*
	 * this checks for window resize event to see if scroll to fixed plugin should be applied to header
	 * 
	 */
	function bk_check_fixed_horizontal_header() {
		if( !jQuery("#bk-header").hasClass("bk-fixed-header-top") ) {
			return;
		}
		
		if( jQuery(window).width() > 768 && !jQuery.isScrollToFixed('#bk-header.bk-fixed-header-top') ) {
			jQuery('#bk-header.bk-fixed-header-top').scrollToFixed({dontSetWidth : true, minWidth: 768, spacerClass: 'bk-fixed-header-spacer'});
			bk_recalculate_header_hidden_position();
		} else if( jQuery(window).width() <= 768 && jQuery.isScrollToFixed('#bk-header.bk-fixed-header-top') ) {
			jQuery('#bk-header.bk-fixed-header-top').trigger('detach.ScrollToFixed');
			//bk_recalculate_header_hidden_position();
		}
		
	}
	
	
	/*
	 * When window is resize and on page load also call function that will check if vertical naviagation header should
	 * switch position fixed <----> absolute in case if some content is not visible
	 * 
	 */
	function bk_check_vertical_header_position() {
		if( jQuery(window).width() <= 768 || !jQuery("#bk-header").hasClass("bk-fixed-header-left") ) {
			return;
		}
		
		var $header_inner_wrap = jQuery("#bk-header-inner-wrap");
		
		if( $header_inner_wrap.outerHeight() <= jQuery(window).height() - jQuery("#bk-header-tagline").height() ) {
			jQuery("#bk-header").css({'position' : 'fixed', 'height' : 'auto'});
	    } else {
	    	var min_height = $header_inner_wrap.outerHeight() + jQuery("#bk-header-tagline").height();
			jQuery("#bk-header").css({'position' : 'absolute', 'height' : min_height + 'px'});
	    }
	}
	
	jQuery(window).smartresize(function(){
		bk_check_vertical_header_position();
		bk_check_fixed_horizontal_header();
	});
	
	bk_check_vertical_header_position();
	bk_check_fixed_horizontal_header();
	
	jQuery(window).smartresize(function(){
		bk_set_sidebar_height();
	});
	
	bk_set_sidebar_height();
	
	
	
	/*
	 * Navigation toggle handle - shows hides navigation with smooth effect
	 * 
	 * 
	 */
	
	jQuery("#bk-navigation-toggle").click(function(e) {
		var $header_navigation_wrap = jQuery("#bk-header");
		var $content_outer_wrap = jQuery("#bk-content-outer-wrap");
		
		var speed = 500;
		
		//handle classic or fixed menu on the left side
		if( $header_navigation_wrap.hasClass("bk-fixed-header-left") && jQuery(window).width() > 768 ) {  
			if( $header_navigation_wrap.hasClass("bk-collapsed-header") ) { // if header naviagation is collapsed show it
				jQuery(window).trigger('bk_navigation_about_to_open');
				$header_navigation_wrap.stop().animate({"left" : "0px"}, speed, function() {
					$header_navigation_wrap.removeClass("bk-collapsed-header");
			    });
				
				$content_outer_wrap.stop().animate({"margin-left" : "280px"}, speed, function() {
					$header_navigation_wrap.removeClass("bk-navigation-hidden");
					jQuery(window).trigger('bk_navigation_toggled');
			    });
			} else { // otherwise hide it
				jQuery(window).trigger('bk_navigation_about_to_close');
				$header_navigation_wrap.stop().animate({"left" : "-270px"}, speed, function() {
					$header_navigation_wrap.addClass("bk-collapsed-header");
					//jQuery(window).trigger('bk_navigation_toggled');
			    });
				
				$content_outer_wrap.stop().animate({"margin-left" : "10px"}, speed, function() {
					$header_navigation_wrap.addClass("bk-navigation-hidden");
					jQuery(window).trigger('bk_navigation_toggled');
			    });
			}
	    } else if( $header_navigation_wrap.hasClass("bk-classic-header-top") || 
	    		   $header_navigation_wrap.hasClass("bk-fixed-header-top") ) { 
	    	if( $header_navigation_wrap.hasClass("bk-collapsed-header") ) { // if header naviagation is collapsed show it
				jQuery(window).trigger('bk_navigation_about_to_open');
				$header_navigation_wrap.stop().animate({"top" : "0px"}, speed, function() {
					$header_navigation_wrap.removeClass("bk-collapsed-header");
			    });
				
				$content_outer_wrap.stop().animate({"margin-top" : "0px"}, speed, function() {
					$header_navigation_wrap.removeClass("bk-navigation-hidden");
					jQuery(window).trigger('bk_navigation_toggled');
			    });
			} else { // otherwise hide it
				$header_top = ($header_navigation_wrap.height() - 10) * -1; // calculate header position 
				
				jQuery(window).trigger('bk_navigation_about_to_close');
				$header_navigation_wrap.stop().animate({"top" : $header_top + "px"}, speed, function() {
					$header_navigation_wrap.addClass("bk-collapsed-header");
			    });
				
				$content_outer_wrap.stop().animate({"margin-top" : $header_top + "px"}, speed, function() {
					$header_navigation_wrap.removeClass("bk-navigation-hidden");
					jQuery(window).trigger('bk_navigation_toggled');
			    });
			}
	    }
	});
	
	/*
	 * Fix for flex slider not changing its aspect ratio properly when navigation bar is being expandded/collapsed
	 */
	jQuery(window).on('bk_navigation_toggled', function() {
		jQuery('div.flexslider.bk-init-done').each( function() {
			jQuery(this).flexslider("setup");
		});
	});

	
	/*
	 * Responsive Navigation toggle handle - shows hides navigation with smooth effect
	 * 
	 * 
	 */
	
	jQuery("#bk-responsive-navigation-toggle").click(function(e) {
		 if( jQuery(window).width() <= 768 ) { // mobile navigation handle
		    	var $header_navigation_inner_wrap = jQuery("#bk-header-inner-wrap");
		    	var speed = 500;
		    	
		    	if( $header_navigation_inner_wrap.is(":hidden") ) {
					//jQuery(window).trigger('bk_navigation_about_to_open');
					$header_navigation_inner_wrap.stop().slideDown( speed, function() {
				    });
				} else { // otherwise hide it
					//jQuery(window).trigger('bk_navigation_about_to_close');
					$header_navigation_inner_wrap.stop().slideUp( speed, function() {
				    });	
				}
		 } 
	});
	
	
	//bk-fullscreen-google-maps-enabled
	
	/*
	 * Handle content wrap and overlay fadeout/in when navigation is toggled
	 * 
	 */
	jQuery(window).on('bk_navigation_about_to_close', function() {
		 if( jQuery("body").hasClass("bk-fullscreen-google-maps-enabled") || jQuery("body").hasClass("bk-fullscreen-slideshow-enabled") ) {
			 jQuery("#supersized-overlay").fadeOut('slow');
			 jQuery("#bk-content-inner-wrap").fadeOut('slow'); 
		 }	
	});
	
	jQuery(window).on('bk_navigation_about_to_open', function() {
		 if( jQuery("body").hasClass("bk-fullscreen-google-maps-enabled") || jQuery("body").hasClass("bk-fullscreen-slideshow-enabled") ) {
			 jQuery("#supersized-overlay").fadeIn('slow');
			 jQuery("#bk-content-inner-wrap").fadeIn('slow'); 
		 }  
	});
	
	
	/*
	 * On window resize recalculate header  and content wrap hidden position for horizontal header 
	 * 
	 */
	
	function bk_recalculate_header_hidden_position() {
		var $header_navigation_wrap = jQuery("#bk-header");
		var $content_outer_wrap = jQuery("#bk-content-outer-wrap");
		
		if( ( $header_navigation_wrap.hasClass("bk-classic-header-top") || $header_navigation_wrap.hasClass("bk-fixed-header-top") ) && jQuery(window).width() > 768 ) {
			if( $header_navigation_wrap.hasClass("bk-collapsed-header") ) {
				$header_top = ($header_navigation_wrap.height() - 10) * -1; // calculate header position 
				$header_navigation_wrap.stop().css({"top" : $header_top + "px"});
				$content_outer_wrap.stop().css({"margin-top" : $header_top + "px"});
			} else {
				$header_navigation_wrap.stop().css({"top" : "0px"});
				$content_outer_wrap.stop().css({"margin-top" : "0px"});
			}
		}
	}
	
	jQuery(window).resize(function(){
		bk_recalculate_header_hidden_position();
	});
	
	bk_recalculate_header_hidden_position(); // run this to hide header on load for fixed and classic top position.	
	
	/*
	 * Scrolls to first item that will appear in viewport inside portfolio, gallery, or blog
	 * takes into consideration gutters and other settings to scroll nicely to sweetspot
	 * 
	 * @param
	 * 
	 * offset - offset of rist element in loademore, infinite scroll loaded subset
	 * gutter - port, blog, gallery gutter
	 * 
	 * thumbs_fadein_offset - global var at the top of this page
	 * 
	 */
	function bk_scroll_to_first_element(offset_top, gutter) {
		// scroll to pos - item top offset minus initial fade and swipe offset plus blog gutter
		var scroll_to_pos = offset_top - ( thumbs_fadein_offset + gutter );
		
		if( !bk_is_on_mobile() && jQuery("#bk-header").hasClass("bk-fixed-header-top") ) {
			if( jQuery("#bk-header").hasClass("bk-collapsed-header") ) {
				scroll_to_pos -= 10;
			} else {
				scroll_to_pos -= jQuery("#bk-header").height();
			}
		}
		
		jQuery("body").scrollTo( scroll_to_pos ,'slow' );
	}
	
	/*
	 * this function takes as parameter portfolio container width and optional gutter size and calculates portfolio column widht depening on size
	 * 
	 */
	
	function bk_get_portfolio_column_width( container_width, gutter, portfolio_base_size ) {
		var base_size = 320;
		switch( portfolio_base_size ) {
		  default:
		  case "small":
			 base_size = 260; 
		  break;
		  case "normal":
		     base_size = 320; 
	   	  break;
		  case "medium":
			 base_size = 328; 
		  break;
			  
		  case "large":
			 base_size = 410; 
		  break;	  
		}
		
		var column_count = Math.ceil(container_width / base_size);  // how many columns will grid have
		if( column_count < 1) {
			column_count = 1;
		}
		var column_width = (container_width - gutter * ( column_count - 1 ) ) / column_count;
		return Math.floor(column_width);
	}
	
	/*
	 * simple stacked gallery handle
	 * 
	 */
	jQuery("ul.bk-stacked-gallery").each(function() {
		bk_show_loading_icon();
		
		var $container = jQuery(this);
		$container.imagesLoaded(function() {
			
			bk_hide_loading_icon();
			bk_fade_in_portfolio_items($container.find("li.bk-stacked-gallery-item"), function() {});
		});
	});
	/*
	 * helper function -> takes colleciton of portfolio items elements and fades in all of them in sequence
	 */
	function bk_fade_in_portfolio_items($items, callback_ready) {
		var loaded = 0;
		$items.each( function(index) {
			var top = jQuery(this).css("top");
			var init_top = "+=" + thumbs_fadein_offset;
			
			
			jQuery(this).css({"opacity" : "0", display: "block", top: init_top});
			jQuery(this).delay(index * thumbs_fadein_waterfall_delay).animate({opacity : "1", top: top}, thumbs_fadein_time, function() {
		    	loaded++;
		    	//console.log("image ready" + index);
		    	if( loaded == $items.length ) {
		    		callback_ready.call();
		    	}
		    });
		    
		    
		    //jQuery(this).delay(index * 50).fadeTo(500, 1);
		});
		
		if( $items.length == 0) {
    		callback_ready.call();
    	}
	}
	
	/*
	 * helper function takes as parameter collection of portfolio items and base size -> sets proper width on portfolio item
	 * in order to fit all layouts -> especially metro layout 
	 * 
	 */
	function bk_set_portfolio_items_sizes( $items, base_column_width, gutter_width, portfolio_layout, container_width ) {
		var fi = 1.6141732283464566929133858267717;
		
		$items.each( function() {
			if( portfolio_layout == "grid" || portfolio_layout == "masonry" ) {
				jQuery(this).width(base_column_width);
			} else if( portfolio_layout == "mixed_masonry") {
				if( jQuery(this).hasClass("portfolio-masonry-small") ) {
					jQuery(this).width(base_column_width);
				} else if ( jQuery(this).hasClass("portfolio-masonry-large") ) {
					var item_width = base_column_width * 2 + gutter_width;
					if( item_width > container_width ) {	// if width of calculate element is bigger than container - only when inside single portfolio item - most propably when description is on the left or right side
						item_width = container_width;
					}
					
					jQuery(this).width(item_width);
				} else if ( jQuery(this).hasClass("portfolio-masonry-x-large") ) {
					jQuery(this).width(base_column_width * 3 + 2 * gutter_width);
				}	
			} else if( portfolio_layout == "metro" ) {
				if( jQuery(this).hasClass("portfolio-grid-1-1") ) {
					jQuery(this).width(base_column_width);
					jQuery(this).find("div.bk-img-wrap").height(Math.round(base_column_width / fi));
				} else if ( jQuery(this).hasClass("portfolio-grid-1-2") ) {
					jQuery(this).width(base_column_width);
					jQuery(this).find("div.bk-img-wrap").height(Math.round(base_column_width / fi) * 2 + gutter_width);
				} else if ( jQuery(this).hasClass("portfolio-grid-2-1") ) {
					var item_width = base_column_width * 2 + gutter_width;
					if( item_width > container_width ) {	// if width of calculate element is bigger than container - only when inside single portfolio item - most propably when description is on the left or right side
						jQuery(this).width(container_width);
						jQuery(this).find("div.bk-img-wrap").height(Math.round(container_width / 2 / fi) );
					} else {
						jQuery(this).width(base_column_width * 2 + gutter_width);
						jQuery(this).find("div.bk-img-wrap").height(Math.round(base_column_width / fi) );
					}	
				} else if ( jQuery(this).hasClass("portfolio-grid-2-2") ) {
					var item_width = base_column_width * 2 + gutter_width;
					if( item_width > container_width ) {	// if width of calculate element is bigger than container - only when inside single portfolio item - most propably when description is on the left or right side
						jQuery(this).width(container_width);
						jQuery(this).find("div.bk-img-wrap").height(Math.round(container_width / fi) );
					} else {
						jQuery(this).width(base_column_width * 2 + gutter_width);
						jQuery(this).find("div.bk-img-wrap").height(Math.round(base_column_width / fi) * 2 + gutter_width );
					}
				}
		    }
		});
	}
	
	/*
	 * helper fucntion - lighter version of above function, handles blog items sizes
	 * 
	 */
	function bk_set_blog_items_sizes( $items, base_column_width  ) {
		$items.each( function() {	
				jQuery(this).width(base_column_width);
		});
	}	
	
	/*
	 * this function creates portfolio and hanldes all ajax calls etc...
	 * 
	 */
	function bk_fade_in_load_more_button( $container ) {
		if( $container.hasClass("load_more_button") ) {
			$container.find("div.bk-load-more-wrap").show("drop", { direction: "down" }, 500);
		}
	}
	
	/*
	 * Handle isotope blog 
	 * 
	 */
	function bk_blog_isotope( $blog_outer_wrap ) {
		bk_show_loading_icon();
		
		var blog_base_size = $blog_outer_wrap.data("blog_base_size");	// base size for portfolio items -> small, medium or large
		var blog_gutter = parseInt($blog_outer_wrap.data("blog_gutter")); // gutter for portfolio items
		var blog_image_effect =  $blog_outer_wrap.data("blog_image_effect");
		var blog_image_overlay =  $blog_outer_wrap.data("blog_image_overlay");
		
		var $container = $blog_outer_wrap.find('ul.bk-blog-wrap').first(); // portfolio thumbs container ul
		
		$container.imagesLoaded(function() {
			bk_hide_loading_icon();
			
			var blog_column_width = bk_get_portfolio_column_width( $container.width(), blog_gutter, blog_base_size );
			
			bk_set_blog_items_sizes( $container.find("li.bk-blog-entry-wrap"), blog_column_width );
			
			$container.find('div.flexslider').each(function(index) {
				  bk_run_flexslider_in_blog_grid( jQuery(this) );
			});
			
			$container.bk_isotope({
				itemSelector: 'li.bk-blog-entry-wrap',
				layoutMode: 'masonry',
				resizable: false, // disable normal resizing
				masonry: {
					columnWidth: blog_column_width,
			        gutterWidth: blog_gutter
			    }
			});

			$container.find("li.bk-blog-entry-wrap").fadeIn("slow", function () {
				$blog_outer_wrap.find("div.bk-load-more-wrap, div.bk-pagination-wrap").fadeIn();
				bk_window_blog_smartresize_handle();
			}); 
		});
		
		jQuery(window).smartresize(function(){
			bk_window_blog_smartresize_handle();
		});
		
		jQuery(window).on('bk_navigation_toggled', function() {
			bk_window_blog_smartresize_handle();
		});
		
		/*
		inifinite scroll handle
		*/
		
		if( $blog_outer_wrap.hasClass("infinite_scroll") && jQuery().infinitescroll ) {
			$blog_outer_wrap.find("div.bk-pagination-wrap").hide();
			var $button = $blog_outer_wrap.find("div.bk-infinite-scroll-info-wrap a.bk-load-more-button");
		
			var count = parseInt($button.data("load_more_count"));
			var show_cats = $button.data("show_cats");
			var offset = jQuery(this).attr("data-offset"); // pulled throught data attr because it's value is changing during runtime adn data() seems to be pulled only once
			var inactive_text = $button.data("inactive_text");

				var $ajax_icon = $button.children("span.ajax-loading-icon");
		
				var inactive_text = $button.data("inactive_text");
				var active_text = $button.data("active_text");
		
				$container.infinitescroll({
					navSelector  : 'div.bk-pagination-wrap',    // selector for the paged navigation
					nextSelector : 'div.bk-pagination-wrap li:not(.current) a',  // selector for the NEXT link (to page 2)
					itemSelector : '.bk-blog-entry-wrap',     // selector for all items you'll retrieve
					//binder: jQuery("#bk-content-outer-wrap"),
					debug: false,
					dataType: 'json',
					bk_ajax: bk_settings.bkajax_ajaxurl,
						bk_data: {
							action : 'bk_load_more_blog_items_ajax',
							base_size: blog_base_size,
							image_effect: blog_image_effect,
							image_overlay: blog_image_overlay,
							count : count,
							show_cats : show_cats,
							offset : $button.attr("data-offset")  // offset of first ajax call will be updated inside plugin
						},
						loading: {
							finishedMsg: inactive_text,
							img: "",
							msg: null,
							msgText: active_text,
							selector: "#bk-content-wrap",
							speed: 'fast'
						}
					},
					function( data ) {
						if( data.loaded_items > 0 ) {
							$container.bk_isotope( 'insert', jQuery(data.items) );
			        		var $new_items =  $container.find("li.bk-blog-entry-wrap").slice( data.loaded_items * -1 );
			        		 
			        		var blog_column_width = bk_get_portfolio_column_width( $container.width(), blog_gutter, blog_base_size );
			    			bk_set_blog_items_sizes( $container.find("li.bk-blog-entry-wrap"), blog_column_width );
			        		
			    			$container.imagesLoaded(function() { 
			        			$new_items.addClass("no-transition");
			        			bk_append_and_relayout_blog( $new_items );
			        			$container.bk_isotope( 'reLayout', function() {
			        				$new_items.removeClass("no-transition");
			        				//jQuery("#bk-content-outer-wrap").scrollTo( 'max' ,'slow' );
			        				bk_append_to_jackbox( $container.find("a.jackbox[data-group]") ); 
			        					
			        				bk_fade_in_portfolio_items( $new_items, function() { 
			        					bk_window_blog_smartresize_handle();  // call this in case if scrollbar appears on the right to slightly relaout items
				        			});
			        			});
			    			});
							
							$button.attr("data-offset", data.new_offset);
							
							if( data.new_offset >= data.total_items_matched ) {
							  jQuery("div.bk-infscr-loading-wrap span.ajax-overlay-info").text(inactive_text).removeClass("loading");
							  jQuery("div.bk-infscr-loading-wrap span.ajax-loading-icon").hide();
				            }
							
						} else {
							jQuery("div.bk-infscr-loading-wrap span.ajax-overlay-info").text(inactive_text).removeClass("loading");
							jQuery("div.bk-infscr-loading-wrap span.ajax-loading-icon").hide();
						}
					}
				);
		}
		
		/*
		Load more button handle
		*/
		$blog_outer_wrap.find("div.bk-load-more-wrap.portfolio a.bk-load-more-button").click(function(e) {
			var $button = jQuery(this);
		
			if( $button.hasClass("ajax-deactivated") || $button.hasClass("loading") )
				return;
		
			var count = parseInt($button.data("load_more_count"));
			var show_cats = $button.data("show_cats");
			var offset = jQuery(this).attr("data-offset"); // pulled throught data attr because it's value is changing during runtime adn data() seems to be pulled only once
			var inactive_text = $button.data("inactive_text");
			var loading_text = $button.data("loading_text");
			var active_text = $button.data("active_text");
			
			$button.find("span.ajax-loading-text").text(loading_text);
		
				var $ajax_icon = $button.children("span.ajax-loading-icon");
		
				$button.addClass("loading");
				$ajax_icon.fadeIn(300);
		
				jQuery.post(
				bk_settings.bkajax_ajaxurl,
				{
					action : 'bk_load_more_blog_items_ajax',
					base_size: blog_base_size,
					image_effect: blog_image_effect,
					image_overlay: blog_image_overlay,
					count : count,
					show_cats : show_cats,
					offset : offset
				},
				function( data ) {
					if( data.loaded_items > 0 ) {
						$container.bk_isotope( 'insert', jQuery(data.items) );
		        		var $new_items =  $container.find("li.bk-blog-entry-wrap").slice( data.loaded_items * -1 );
		        		 
		        		var blog_column_width = bk_get_portfolio_column_width( $container.width(), blog_gutter, blog_base_size );
		    			bk_set_blog_items_sizes( $container.find("li.bk-blog-entry-wrap"), blog_column_width );
		        		
		    			$container.imagesLoaded(function() { 
		        			$new_items.addClass("no-transition");
		        			bk_append_and_relayout_blog( $new_items );
		        			$container.bk_isotope( 'reLayout', function() {
		        				$new_items.removeClass("no-transition");	
		        				
		        				bk_append_to_jackbox( $container.find("a.jackbox[data-group]") ); 
		        					
		        				bk_fade_in_portfolio_items( $new_items, function() {
		        					bk_window_blog_smartresize_handle();  // call this in case if scrollbar appears on the right to slightly relaout items
			        			});

		        				bk_scroll_to_first_element($new_items.first().offset().top, blog_gutter);
		        				
		        			});
		    			});
						
						$button.attr("data-offset", data.new_offset);
						$button.find("span.ajax-loading-info").text("(" + data.new_offset + "/" + data.total_items_matched + ")");
						
						if( data.new_offset >= data.total_items_matched ) {
							$button.addClass("ajax-deactivated");
							$button.text(inactive_text);
						} else {
							$button.find("span.ajax-loading-text").text(active_text);
						}
						
					} else {
						$button.addClass("ajax-deactivated");
						$button.text(inactive_text);
					}
					$ajax_icon.fadeOut(300);
					$button.removeClass("loading");
				},
				"json"
				).error(function() { $ajax_icon.fadeOut(300); $button.removeClass("loading"); });
		});
		
		function bk_append_and_relayout_blog( $items ) {
			if( !$blog_outer_wrap.hasClass("bk-blog-column-count-1") ) {
				$items.find('div.flexslider').each(function(index) {
					bk_run_flexslider_in_blog_grid( jQuery(this) );
				});
				
				//$container.bk_isotope( 'insert', $items );
		
				//$items.imagesLoaded(function(){
				//	setTimeout(function() { $container.bk_isotope('reLayout'); }, 600);
				//});
			} else {
				$items.find('div.flexslider').each(function(index) {
					bk_run_flexslider( jQuery(this) );
				});
				
				//$items.hide().appendTo( $container ).fadeIn('slow');
			}		
			
			//bk_append_to_jackbox( $container.find("a.jackbox[data-group]") );
		}
		
		/*
		 * Blog smartresize handle
		 */
		
		function bk_window_blog_smartresize_handle() {
			var blog_column_width = bk_get_portfolio_column_width( $container.width(), blog_gutter, blog_base_size  );
			
			bk_set_blog_items_sizes( $container.find("li.bk-blog-entry-wrap"), blog_column_width );
			$container.bk_isotope({
				  masonry: { columnWidth: blog_column_width }
			});
			
			$container.find("div.flexslider.bk-init-done").each(function() {
				jQuery(this).flexslider("setup");
			});
			
			$container.bk_isotope('reLayout', function() {
	    			
			});
		}
		
		/*
		  run flex slider in blog grid - need some calculation and shifting to make use of variable height
		*/
		function bk_run_flexslider_in_blog_grid( $flexslider ) {
			var autoplay = $flexslider.data("autoplay");
				
			//console.log("length: " + $flexslider.find("ul.slides > li").length);
			
			if( $flexslider.find("ul.slides > li").length > 1 ) {
				
			
					$flexslider.flexslider({				controlNav: 0,
															directionNav: 1, 
															animation: 'fade',
															smoothHeight: 1,
															pauseOnHover: true,
															slideshowSpeed: 5000,
															animationSpeed: 800,
															slideshow: autoplay,
															before: function(slider) {
																	bk_stop_playback_if_any( jQuery(slider) );
																	if( true ) {
															        
																        var current_slide_height = jQuery(slider.slides[ slider.currentSlide ]).height();
																        var next_slide_height = jQuery(slider.slides[ slider.animatingTo ]).height();
																        var $entry_wrap = jQuery(slider).parents("li.bk-blog-entry-wrap").first();
																        var $article_wrap = $entry_wrap.find("article.bk-post-summary");
																        var diff = current_slide_height - next_slide_height;
																        
																        var new_height = $article_wrap.height() - diff;
																        
																        //console.log("before " + current_slide_height + " animatingTo " + next_slide_height );
																        
																        $entry_wrap.css({ height: new_height + "px" });
																		    
																		    var delay = 0;
																		    if( diff > 0 )
																		        delay = 600;
																		    
																		    setTimeout(function() { 
																		    	$container.bk_isotope('reLayout', function() {
																		    		//$entry_wrap.css({ height: "auto" });	
																		    	}); 
																		    }, delay);
																	}
														      },
														  after: function(slider){
															  var $entry_wrap = jQuery(slider).parents("li.bk-blog-entry-wrap").first();
															  $container.bk_isotope('reLayout', function() {
														    		$entry_wrap.css({ height: "auto" });	
														      });
														  },    
													      start: function(slider) {
													    	  slider.setup();
													      	  setTimeout(function() {
													      		slider.setup();
													      		//console.log("start relayout fired"); 
																    $container.bk_isotope('reLayout'); 
																}, 300);
													      }	
				});
					
				$flexslider.addClass("bk-init-done");
			
			}
		}
		
	}
	
	
	jQuery("div.bk-blog-outer-wrap").each( function() {
		 bk_blog_isotope( jQuery(this) );
	});
	
	/*
	 * Show loading ICON in the center of page while blog posts or portfolio items are being loaded in background
	 * 
	 */
	function bk_show_loading_icon() {
		if( !jQuery("#bk_loading_icon").length ) {  // check if loading indicator is present
			jQuery("#bk-fullscreen-background-wrap").append('<div id="bk_loading_icon"></div>');
			jQuery("#bk_loading_icon").stop().fadeIn("slow");
		}
	}
	
	function bk_hide_loading_icon() {
		jQuery("#bk_loading_icon").stop().fadeOut("slow");
	}
	
	/*
	 * handle isotope portfolio
	 */
	function bk_portfolio_isotope( $portfolio_wrap ) {
		
		bk_show_loading_icon();
		
		// Setting Up Our Variables
		var $container = $portfolio_wrap.find('ul.filterable-grid').first(); // portfolio thumbs container ul
		var $filter = $portfolio_wrap.find('ul.portfolio-filter'); // Set Our Filter Link
		
		if( jQuery("ul.bk-sidebar-portfolio-filter").length ) { // if found sidebar filter then
			$portfolio_wrap.find('ul.portfolio-filter').hide();
			$filter = jQuery("ul.bk-sidebar-portfolio-filter");
		}
		
		var portfolio_base_size = $portfolio_wrap.data("portfolio_base_size");	// base size for portfolio items -> small, medium or large
		var portfolio_gutter = parseInt($portfolio_wrap.data("portfolio_gutter")); // gutter for portfolio items
		var portfolio_layout = $portfolio_wrap.data("portfolio_layout"); // masonry, grid or metro
		var portfolio_filter_mode =  $portfolio_wrap.data("portfolio_filter_mode"); 
		var portfolio_description =  $portfolio_wrap.data("portfolio_description");
		var portfolio_image_effect =  $portfolio_wrap.data("portfolio_image_effect");
		var portfolio_image_overlay =  $portfolio_wrap.data("portfolio_image_overlay");
		var portfolio_tags_cats_link_enabled = $portfolio_wrap.data("portfolio_tags_cats_link_enabled");
		var portfolio_linked_popup_gallery = $portfolio_wrap.data("portfolio_linked_popup_gallery");
		
		var bk_global_unique_portfolio_id = $portfolio_wrap.data("bk_global_unique_portfolio_id"); 
		
		var is_gallery_post_type = $portfolio_wrap.hasClass("bk-gallery-wrap"); 
		
		/*
		 * wait for images to load and run isotope
		 * 
		 */
		
		$container.imagesLoaded(function() {
			bk_hide_loading_icon();
			
			var portfolio_column_width = bk_get_portfolio_column_width( $container.width(), portfolio_gutter, portfolio_base_size );
			
			bk_set_portfolio_items_sizes( $container.find("li.portfolio-item"), portfolio_column_width, portfolio_gutter, portfolio_layout, $container.width() );
			
			$container.bk_isotope({
				itemSelector: 'li.portfolio-item',
				layoutMode: 'masonry',
				resizable: false, // disable normal resizing
				masonry: {
					columnWidth: portfolio_column_width,
			        gutterWidth: portfolio_gutter
			    },
			    getSortData : {
			        matched : function ( $elem ) {
			          var matched = parseInt( $elem.attr('data-matched') );
			          if( matched ) {
			        	  return 0;
			          } else {
			        	  return 1;
			          }
			        },
			        original_index : function ( $elem ) {
				      return parseInt( $elem.attr('data-original_index') );
				    }
			    }	
			});

			bk_fade_in_portfolio_items($container.find("li.portfolio-item"), function () {
				bk_window_smartresize_handle();
				$portfolio_wrap.find("div.bk-load-more-wrap, div.bk-pagination-wrap").fadeIn().show();
			}); 
		});
		
		jQuery(window).smartresize(function(){
			bk_window_smartresize_handle();
		});
		
		jQuery(window).on('bk_navigation_toggled', function() {
			bk_window_smartresize_handle();
		});
		
		function bk_window_smartresize_handle() {
			var portfolio_column_width = bk_get_portfolio_column_width( $container.width(), portfolio_gutter, portfolio_base_size );
			
			bk_set_portfolio_items_sizes( $container.find("li.portfolio-item"), portfolio_column_width, portfolio_gutter, portfolio_layout, $container.width() );
			$container.bk_isotope({
				  masonry: { columnWidth: portfolio_column_width }
			});
		}
		
		if( $portfolio_wrap.hasClass("bk-single-portfolio-item")  ) {  // if it is single portfolio item gallery then return - no need to search for load more button, filter etc...
			return;
		}
		
		/*
		  Load more button handle
		*/
		$portfolio_wrap.find("div.bk-load-more-wrap.portfolio a.bk-load-more-button").click(function(e) {
			var $button = jQuery(this);
			
			if( $button.hasClass("ajax-deactivated") || $button.hasClass("loading") )
					return;
			
			var count = parseInt($button.data("load_more_count"));
			var show_cats = $button.data("show_cats");
			var portfolio_order_by = $button.data("portfolio_order_by");
			var portfolio_order = $button.data("portfolio_order");
			var offset = jQuery(this).attr("data-offset"); // pulled throught data attr because it's value is changing during runtime adn data() seems to be pulled only once
			var inactive_text = $button.data("inactive_text");
			var loading_text = $button.data("loading_text");
			var active_text = $button.data("active_text");
			
			var action = 'bk_load_more_portfolio_items_ajax';  // this is defualt ajax action for portfolio items
			
			if( is_gallery_post_type ) {
				action = 'bk_load_more_gallery_items_ajax'; 
			}
			
			$button.find("span.ajax-loading-text").text(loading_text);
			
			$button.addClass("loading");
			
			jQuery.post(
					    bk_settings.bkajax_ajaxurl,
					    {
					        action : action,
					        count : count,
					        portfolio_layout : portfolio_layout,
					        show_cats : show_cats,
					        portfolio_order_by : portfolio_order_by,
					        portfolio_order : portfolio_order,
					        portfolio_description: portfolio_description,
					        portfolio_image_effect: portfolio_image_effect,
					        portfolio_image_overlay: portfolio_image_overlay,
					        portfolio_tags_cats_link_enabled: portfolio_tags_cats_link_enabled,
					        portfolio_linked_popup_gallery: portfolio_linked_popup_gallery,
					        bk_global_unique_portfolio_id: bk_global_unique_portfolio_id,
					        portfolio_base_size: portfolio_base_size,
					        offset : offset
					    },
					    function( data ) {
					        if( data.loaded_items > 0 ) {
					        		$container.bk_isotope( 'insert', jQuery(data.items) );
					        		//var $new_items = jQuery($container.find("li.portfolio-item").slice( data.loaded_items * -1 ).get().reverse());
					        		var $new_items =  $container.find("li.portfolio-item").slice( data.loaded_items * -1 );
					        		 
					        		var portfolio_column_width = bk_get_portfolio_column_width( $container.width(), portfolio_gutter, portfolio_base_size );
					        		bk_set_portfolio_items_sizes( $new_items, portfolio_column_width, portfolio_gutter, portfolio_layout, $container.width() );
			
					        		$container.imagesLoaded(function() { 
					        			$new_items.addClass("no-transition");
					        			
					        			$container.bk_isotope( 'reLayout', function() {
					        				$new_items.removeClass("no-transition");
					        				//jQuery("body").scrollTo( 'max' ,'slow' );
					        				if( !portfolio_linked_popup_gallery ) {
					        				     bk_append_to_jackbox( $container.find("a.jackbox[data-group]") ); 
					        				}
					        				// if all filter is selected or filter is not displayed fade in all items
					        				
					        				if( ($filter.length && $filter.find('li.current a').hasClass("all")) || !$filter.length ) {  
						        				bk_fade_in_portfolio_items( $new_items, function() { 
						        					bk_window_smartresize_handle();  // call this in case if scrollbar appears on the right to slightly relaout items
						        					bk_linked_gallery_filter_update();
						        				});
						        				
						        				bk_scroll_to_first_element($new_items.first().offset().top, portfolio_gutter);
					        			    } else {
					        			    	$new_items.css({"opacity" : "0", "display" : "block"});
					        			    	
					        			    	if( portfolio_filter_mode == 'shuffle' ) {
					        			    		bk_fade_in_portfolio_items( $new_items, function() {
					        			    			bk_linked_gallery_filter_update();
					        			    		});
					        			    		
					        			    		bk_scroll_to_first_element($new_items.first().offset().top, portfolio_gutter);
					        			    	} else {
					        			    		var selector = $filter.find('li.current a').attr('class');
					        			    		
					        			    		var $matched_elements = $container.find("li.portfolio-item." + selector);
					        						var $not_matched_elements = $container.find("li.portfolio-item:not(." + selector + ")");
					        						
					        						$not_matched_elements.fadeTo(400, 0.3).addClass("isotope-inactive").attr("data-matched", 0);
					        						$matched_elements.fadeTo(400, 1).removeClass("isotope-inactive").attr("data-matched", 1);
					        						
					        						if( portfolio_filter_mode == "fade_and_shuffle"  ) {
					        							$container.bk_isotope('updateSortData', $container.find("li.portfolio-item") );
					        							$container.bk_isotope({ sortBy : 'matched', sortAscending : true }, function() {
					        								bk_window_smartresize_handle();  // in case of (dis)appearing scrollbar should not happen here because all elements are visible - even not matched 
					        								bk_linked_gallery_filter_update();
					        							});
					        						} else {
					        							bk_window_smartresize_handle();
					        							bk_linked_gallery_filter_update();
					        						}
					        						
					        						bk_scroll_to_first_element($new_items.first().offset().top, portfolio_gutter);
					        			    	}
					        			    	$filter.find('li.current a').trigger('click');
					        			    }
					        			});
					        		});
					        		
					        		$button.attr("data-offset", data.new_offset);
					        		$button.find("span.ajax-loading-info").text("(" + data.new_offset + "/" + data.total_items_matched + ")"); 
					        		
					        		if( data.new_offset >= data.total_items_matched ) {
					        			$button.addClass("ajax-deactivated");
					        		    $button.text(inactive_text);
					        		} else {
					        			$button.find("span.ajax-loading-text").text(active_text);
					        		}	
					        		
					        } else {
					        		$button.addClass("ajax-deactivated");
					        		$button.text(inactive_text);	
					        }
					        $button.removeClass("loading");   		
					    },
					    "json" 
					).error(function() { $button.removeClass("loading"); });
		});
		
		/*
		  inifinite scroll handle
		*/
		
		if( $portfolio_wrap.hasClass("infinite_scroll") && jQuery().infinitescroll ) {
		    $portfolio_wrap.find("div.bk-pagination-wrap").hide();
		    var $button = $portfolio_wrap.find("div.bk-infinite-scroll-info-wrap a.bk-load-more-button");
			
			var count = parseInt($button.data("load_more_count"));
			var show_cats = $button.data("show_cats");
			var portfolio_order_by = $button.data("portfolio_order_by");
			var portfolio_order = $button.data("portfolio_order");
			var offset = jQuery(this).attr("data-offset"); // pulled throught data attr because it's value is changing during runtime adn data() seems to be pulled only once
			var inactive_text = $button.data("inactive_text");
			var active_text = $button.data("active_text");
			
			var action = 'bk_load_more_portfolio_items_ajax';  // this is defualt ajax action for portfolio items
			
			if( is_gallery_post_type ) {
				action = 'bk_load_more_gallery_items_ajax'; 
			}
			
			var $ajax_icon = $button.children("span.ajax-loading-icon");
    
		    $container.infinitescroll({
		      navSelector  : 'div.bk-pagination-wrap',    // selector for the paged navigation 
		      nextSelector : 'div.bk-pagination-wrap li:not(.current) a',  // selector for the NEXT link (to page 2)
		      itemSelector : '.portfolio-item',     // selector for all items you'll retrieve
		      //binder: jQuery("#bk-content-outer-wrap"),
		      debug: false,
		      dataType: 'json',
		      bk_ajax: bk_settings.bkajax_ajaxurl,
		      bk_data: {
						    	  	action : action,
							        count : count,
							        portfolio_layout : portfolio_layout,
							        show_cats : show_cats,
							        portfolio_order_by : portfolio_order_by,
							        portfolio_order : portfolio_order,
							        portfolio_description: portfolio_description,
							        portfolio_image_effect: portfolio_image_effect,
							        portfolio_tags_cats_link_enabled: portfolio_tags_cats_link_enabled,
							        portfolio_linked_popup_gallery: portfolio_linked_popup_gallery,
							        bk_global_unique_portfolio_id: bk_global_unique_portfolio_id,
							        portfolio_image_overlay: portfolio_image_overlay,
							        offset : $button.attr("data-offset")  // offset of first ajax call will be updated inside plugin
			  },
		      loading: {
		          finishedMsg: inactive_text,
		          img: "",
		          msg: null,
		          msgText: active_text,
		          selector: "#bk-content-wrap", // "#" + $portfolio_wrap.attr("id"),
		          speed: 'fast'
		      	} 
		      },
		      function( data ) {
		    	  			if( data.loaded_items > 0 ) {
		    	  				$container.bk_isotope( 'insert', jQuery(data.items) );
				        		//var $new_items = jQuery($container.find("li.portfolio-item").slice( data.loaded_items * -1 ).get().reverse());
				        		var $new_items =  $container.find("li.portfolio-item").slice( data.loaded_items * -1 );
				        		
				        		var portfolio_column_width = bk_get_portfolio_column_width( $container.width(), portfolio_gutter, portfolio_base_size );
				        		bk_set_portfolio_items_sizes( $new_items, portfolio_column_width, portfolio_gutter, portfolio_layout, $container.width() );
		
				        		$container.imagesLoaded(function() { 
				        			$new_items.addClass("no-transition");
				        			
				        			$container.bk_isotope( 'reLayout', function() {
				        				$new_items.removeClass("no-transition");
				        				//jQuery("#bk-content-outer-wrap").scrollTo( 'max' ,'slow' );
				        				bk_append_to_jackbox( $container.find("a.jackbox[data-group]") );
				        				// if all filter is selected or filter is not displayed fade in all items
				        				if( ($filter.length && $filter.find('li.current a').hasClass("all")) || !$filter.length ) {  
					        				bk_fade_in_portfolio_items( $new_items, function() { 
					        					bk_window_smartresize_handle();  // call this in case if scrollbar appears on the right to slightly relaout items
					        				});
				        			    } else {
				        			    	$new_items.css({"opacity" : "0", "display" : "block"});
				        			    	
				        			    	if( portfolio_filter_mode == 'shuffle' ) {
				        			    		bk_fade_in_portfolio_items( $new_items, function() {});
				        			    	} else {
				        			    		var selector = $filter.find('li.current a').attr('class');
				        			    		
				        			    		var $matched_elements = $container.find("li.portfolio-item." + selector);
				        						var $not_matched_elements = $container.find("li.portfolio-item:not(." + selector + ")");
				        						
				        						$not_matched_elements.fadeTo(400, 0.3).addClass("isotope-inactive").attr("data-matched", 0);
				        						$matched_elements.fadeTo(400, 1).removeClass("isotope-inactive").attr("data-matched", 1);
				        						
				        						if( portfolio_filter_mode == "fade_and_shuffle"  ) {
				        							$container.bk_isotope('updateSortData', $container.find("li.portfolio-item") );
				        							$container.bk_isotope({ sortBy : 'matched', sortAscending : true }, function() {
				        								bk_window_smartresize_handle();  // in case of (dis)appearing scrollbar should not happen here because all elements are visible - even not matched 
				        							});
				        						} else {
				        							bk_window_smartresize_handle(); 
				        						}
				        			    	}
				        			    	$filter.find('li.current a').trigger('click');
				        			    }
				        			});
				        		});
							        
							    if( data.new_offset >= data.total_items_matched ) {
							        jQuery("div.bk-infscr-loading-wrap span.ajax-overlay-info").text(inactive_text).removeClass("loading");
							        jQuery("div.bk-infscr-loading-wrap span.ajax-loading-icon").hide();
							    }
							    
							    
							    
							} else {
								jQuery("div.bk-infscr-loading-wrap span.ajax-overlay-info").text(inactive_text).removeClass("loading");
								jQuery("div.bk-infscr-loading-wrap span.ajax-loading-icon").hide();
							} 
		      }
		    );
		}		
		
		
		/**
		 * Hnalde linked gallery filter click popup update - adds/removes active/inactive portfolio thumbs links to popup gallery
		 * 
		 */
		function bk_linked_gallery_filter_update() {
			
			if( !portfolio_linked_popup_gallery ) {  // check if linked gallery mode is enabled
				return;
			}
			
			
			$container.find("a.jackbox").each( function() { // first remove all items from popup
					//console.log("removing item: " + jQuery(this).attr("data-title"));
					//console.log("href: " + jQuery(this).attr("href"));
					jQuery(this).jackBox("removeItem");
					//jQuery(this).attr("data-jackbox-state", "");
					//console.log("--------");
				});

			
			
			$container.find("li.isotope-item").not(".isotope-hidden, .isotope-inactive").each( function() { // find all isotope portfolio items which aren't inactive or hidden - filtered out 
				jQuery(this).find("a.jackbox").each( function() {  // find all jackbox links inside this item and loop through each one of them - there might be more than one since galleries are supported
					//if( jQuery(this).attr("data-jackbox-state") != "init" ) {
					  //console.log("adding item: " + jQuery(this).attr("data-title"));
					  //console.log("href: " + jQuery(this).attr("href"));
					  jQuery(this).jackBox("newItem"); // add new item to list
					  //jQuery(this).attr("data-jackbox-state", "init");
				    //}
				});
			});
				
			//console.log("FILTERED OUT ---------------------------");
			//console.log(" ");
			//console.log(" ");
			//console.log(" ");

		}
		
		
		/*
		 * filterlink click handle
		 * 
		 */
		
		$filter.find("li a").click(function(e) {
			var selector = jQuery(this).attr('class');
			jQuery(this).parents('ul.portfolio-filter').find('li.current').removeClass('current');
			jQuery(this).parent('li').addClass('current');
			
			if( portfolio_filter_mode == "shuffle" ) {  // shuffle mode
				$container.bk_isotope({ filter: '.' + selector }, function() {
					bk_window_smartresize_handle();  // in case of (dis)appearing scrollbar
					bk_linked_gallery_filter_update();
				});	
			} else {
				//fade filter mode
				var $matched_elements = $container.find("li.portfolio-item." + selector);
				var $not_matched_elements = $container.find("li.portfolio-item:not(." + selector + ")");
				
				$not_matched_elements.css({"opacity" : "0.3"}).addClass("isotope-inactive").attr("data-matched", 0);
				$matched_elements.css({"opacity" : "1"}).removeClass("isotope-inactive").attr("data-matched", 1);
				
				// fade and shuffle
				if( portfolio_filter_mode == "fade_and_shuffle"  ) {
					if( selector == "all" ) {
						$container.bk_isotope({ sortBy : 'original-index', sortAscending : true },function() {
							bk_window_smartresize_handle();  // in case of (dis)appearing scrollbar should not happen here because all elements are visible - even not matched 
							bk_linked_gallery_filter_update(); 
						});	
					} else {
						$container.bk_isotope('updateSortData', $container.find("li.portfolio-item") );
						$container.bk_isotope({ sortBy : 'matched', sortAscending : true }, function() {
							bk_window_smartresize_handle();  // in case of (dis)appearing scrollbar should not happen here because all elements are visible - even not matched 
							//bk_linked_gallery_filter_update();
						});	
						
						bk_linked_gallery_filter_update();
					}
				} else {
					bk_linked_gallery_filter_update();
				}
			}
		});
	}
	
	
	/*
	 * Handle Woccomerce shop isotope layout
	 */
	
	/*
	 * handle isotope portfolio
	 */
	function bk_product_isotope( $product_wrap ) {
		
		bk_show_loading_icon();
		
		var $container = $product_wrap.find('ul.products').first();
		
		
		var portfolio_base_size = $product_wrap.data("products_base_size");	// base size for portfolio items -> small, medium or large
		var portfolio_gutter = parseInt($product_wrap.data("products_gutter")); // gutter for portfolio items
		var portfolio_layout = 'grid'; 
		
		/*
		 * wait for images to load and run isotope
		 * 
		 */
		
		$container.imagesLoaded(function() {
			bk_hide_loading_icon();
			
			var portfolio_column_width = bk_get_portfolio_column_width( $container.width(), portfolio_gutter, portfolio_base_size );
			
			bk_set_portfolio_items_sizes( $container.find("li.product"), portfolio_column_width, portfolio_gutter, portfolio_layout, $container.width() );
			
			$container.bk_isotope({
				itemSelector: 'li.product',
				layoutMode: 'masonry',
				resizable: false, // disable normal resizing
				masonry: {
					columnWidth: portfolio_column_width,
			        gutterWidth: portfolio_gutter
			    }
			});

			bk_fade_in_portfolio_items($container.find("li.product"), function () {
				bk_window_smartresize_handle();
			}); 
		});
		
		jQuery(window).smartresize(function(){
			bk_window_smartresize_handle();
		});
		
		jQuery(window).on('bk_navigation_toggled', function() {
			bk_window_smartresize_handle();
		});
		
		function bk_window_smartresize_handle() {
			var portfolio_column_width = bk_get_portfolio_column_width( $container.width(), portfolio_gutter, portfolio_base_size );
			
			bk_set_portfolio_items_sizes( $container.find("li.product"), portfolio_column_width, portfolio_gutter, portfolio_layout, $container.width() );
			$container.bk_isotope({
				  masonry: { columnWidth: portfolio_column_width }
			});
		}
		
	}
	
	/*
	 * 
	 * Woocommerce
	 * 
	 */
	
	if( jQuery().footable ) {
		jQuery(".woocommerce table.shop_table").footable();
	}
	
	jQuery(".woocommerce div.bk_products_wrap").each( function() {
		bk_product_isotope( jQuery(this) );
	});
	
	if( jQuery().customSelect ) {
		//var $custom_selects = jQuery('form.woocommerce-ordering select.orderby, .woocommerce div.product form.cart .variations select, .woocommerce-page div.product form.cart .variations select');
		
		jQuery('form.woocommerce-ordering select.orderby').customSelect({
		    customClass: "bk_custom_select" // Specify a different class name (default is 'customSelect')
		});
		
	}
	
	/*
	 * Handle love button
	 * 
	 */
	jQuery("body").delegate("a.bk-love-button", "click", function() {
		if( jQuery(this).hasClass("loading") || jQuery(this).hasClass("inactive") )
				return false;

		var heart = jQuery(this).children("span.heart-icon");

		heart.pulse({'opacity': '0.5'}, 
				    {
						pulses : -1, 
						duration : 1000,
						interval : 300
					});
		
		var post_id = jQuery(this).attr("data-post-id");		
		var $counter = jQuery(this);
		$counter.addClass("loading");
		
		jQuery.post(
			bk_settings.bkajax_ajaxurl,
			{
				action : 'bk_love_portfolio_item_ajax',
				id: post_id
			},
			function( data ) {
				$counter.find("span.love-counter").text(data.love_count);
				$counter.removeClass("loading");
				$counter.attr('title', $counter.attr('data-like_inactive_title'));
				$counter.addClass("inactive");
				heart.pulse('destroy');
			},
			"json"
			).error(function() { 
				$counter.removeClass("loading");
				heart.pulse('destroy');
			});
		
	});	
	
	/*
	 * run istope on portfolio
	 * 
	 */
	//if(jQuery().bk_isotope) {
		jQuery("div.bk-portfolio-wrap").each( function() {
			bk_portfolio_isotope( jQuery(this) );
	  });
	//}
	
	if( jQuery.browser.msie && parseInt( jQuery.browser.version, 10) < 9 ) {
		jQuery("div.bk-img-overlay a, div.bk-img-overlay span").fadeTo(0,0);
	}	
	
	/*
	 * handle portfolio/gallery/product mouseenter / mouseleve events
	 */
	jQuery("div.bk-img-wrap").live("mouseenter", function (event) {
		if( jQuery(this).hasClass("isotope-hidden") || jQuery(this).hasClass("isotope-inactive") ) 
				return false;
				
		var $overlay = jQuery(this).find("div.bk-img-overlay");
		if( jQuery.browser.msie && parseInt( jQuery.browser.version, 10) < 9 ) {
			$overlay = jQuery(this).find("div.bk-img-overlay, div.bk-img-overlay a, div.bk-img-overlay span");
		}	
		$overlay.addClass("mouseover");
	
		$overlay.stop().animate({'opacity' : 1}, {duration: 300, queue: false});
		return false;
	});

	jQuery("div.bk-img-wrap").live("mouseleave", function (event) {
		if( jQuery(this).hasClass("isotope-hidden") || jQuery(this).hasClass("isotope-inactive") ) 
				return false;
		
		var $overlay = jQuery(this).find("div.bk-img-overlay");
		if( jQuery.browser.msie && parseInt( jQuery.browser.version, 10) < 9 ) {
			$overlay = jQuery(this).find("div.bk-img-overlay, div.bk-img-overlay a, div.bk-img-overlay span");
		}	
		$overlay.removeClass("mouseover");
		if( !$overlay.hasClass("loading") )
			 $overlay.stop().animate({'opacity' : 0}, {duration: 300, queue: false});
		return false;
	});
	
	/*
	 * Init jackbox - run only on pageload so all links are before init state - no need to check for data-jackbox-state
	 * 
	 */
	
	var jackbox_init = false; // indictates if jackbox was inited - if on pageload at least one link was faound and plugin was inited. If so next links will be added via append to jackbox otherwise first subset will init jackbox
	
	function bk_init_jackbox( $links ) {
				$links.jackBox("init", { 
				    showInfoByDefault: false,       // show item info automatically when content loads, true/false
				    preloadGraphics: false,
				    thumbnailWidth: 75,             // the default video width, can also be set per video in the data-attributes
				    thumbnailHeight: 75,
				    className: ".jackbox",
				    useThumbTooltips: false,
				    useTwitter: bk_settings.bk_jackbox_use_twitter,
					useGoogle: bk_settings.bk_jackbox_use_google,
					usePinterest: bk_settings.bk_jackbox_use_pinterest,
					useFacebook: bk_settings.bk_jackbox_use_facebook,
					deepLinking: bk_settings.bk_jackbox_deeplinking,
				    useThumbs: bk_settings.bk_jackbox_show_thumbs,
				    useKeyboardControls: bk_settings.bk_jackbox_use_keyboard,
					fullscreenScalesContent: bk_settings.bk_jackbox_fullscreen_scale_content
				});
		
				jackbox_init = true;
				
				$links.attr("data-jackbox-state", "init"); // mark all links as init
	}
	
	/*
	 * Append new items to jackbox - only when ajax call were issued and new items are visible - check for init state to exclude links that were previously initiated
	 * 
	 */
	function bk_append_to_jackbox( $links ) {
		//console.log($links);
		
		if( !jackbox_init ) {
			bk_init_jackbox( $links );
		} else {
			$links.each(function(index) {
				if( jQuery(this).attr("data-jackbox-state") != "init" ) {
					jQuery(this).jackBox("newItem");	
					jQuery(this).attr("data-jackbox-state", "init");
				}
			});
			
		}
	}
	
	/*
	 * Run jackbox on all links for the first time
	 */
	if(jQuery().jackBox) {
		
		if( bk_settings.bk_jackbox_content_image_popup ) {
		    bk_add_images_to_jackbox();
	    }
		
		$links = jQuery("a.jackbox[data-group]");
		if( $links.length ) {
			bk_init_jackbox( $links );
		}
	}
	
	
	/*
	 * Append to jackbox links / images that are inserted into post/page/port body via default wordpress editor as standalone images
	 * as well as default wordpress galleries
	 * 
	 */
	
	function bk_add_images_to_jackbox() {
		var image_id = 0;
		var $links = jQuery("#bk-content-wrap a").each(function(index) {
			
			$link = jQuery(this);
			
			if( $link.is("a") && 
				!$link.hasClass("jackbox") && 
				/(jpg|jpeg|bmp|gif|png)$/.test($link.attr('href')) && 
				$link.children("img") &&
				!$link.parents(".isotope").length ) {
				
				
				
				if( $link.parents("div.gallery").length ) {  // inside gallery
					$link.attr("data-group", $link.parents("div.gallery").attr("id"));
					$link.attr("data-title", $link.children("img").attr("alt"));
				} else { // standalone image
					$link.attr("data-group", "image" + "_" + image_id);
					image_id++;
					$link.attr("data-title", $link.children("img").attr("alt"));
				}
				
				$link.attr("class", "jackbox");
			}
		});	
	}
	
	
	
	/*
	  Stops iframed youtube video via postMessage
	*/
	function bk_stop_youtube_video( iframe ) {
		var iframewindow = iframe.contentWindow? iframe.contentWindow : iframe.contentDocument.defaultView;
		iframewindow.postMessage('{"event":"command","func":"stopVideo","args":""}', '*');
	}
	
	/*
	  Stops iframed vimeo video via postMessage
	*/
	function bk_stop_vimeo_video( iframe ) {
		var iframewindow = iframe.contentWindow? iframe.contentWindow : iframe.contentDocument.defaultView;
		iframewindow.postMessage('{"event":"command","method":"unload"}', '*');
	}		
	
	function bk_stop_jp_player( player_id ) {
		//console.log("about to stop player: " + player_id);
		jQuery("#" + player_id).jPlayer("stop");
	}	
	
	/*
	 Stops playback of youtube, vimeo, selfohosted video or audio if any
	*/
	function bk_stop_playback_if_any( $wrap ) {
		$wrap.find("div.bk-youtube-video").each(function( index ) {
			bk_stop_youtube_video( jQuery(this).find("iframe")[0] );
		});
		
		$wrap.find("div.bk-vimeo-video").each(function( index ) {
			bk_stop_vimeo_video( jQuery(this).find("iframe")[0] );
		});
		
		$wrap.find("div.jp-jplayer").each(function( index ) {
			bk_stop_jp_player( jQuery(this).attr("id") );
		});	
	}	
	
	
	/*
	  FlexSlider handle
	*/
	function bk_run_flexslider( $flexslider ) {
		var autoplay = ( $flexslider.data("autoplay") == undefined ) ? 0 : $flexslider.data("autoplay");
		var smooth_height = ( $flexslider.data("smooth_height") == undefined ) ? 1 : $flexslider.data("smooth_height");
		
		var slideshow_speed = ( !$flexslider.data("slideshow_speed") ) ? 3000 : $flexslider.data("slideshow_speed");
		var animation_speed = ( !$flexslider.data("animation_speed") ) ? 800 : $flexslider.data("animation_speed");
		  
		if( autoplay == 1 || autoplay == 'on' ) {
		  	autoplay = 1;
		} else {
		  	autoplay = 0;
		}
		
		if( smooth_height == 1 || smooth_height == 'on' ) {
			smooth_height = 1;
		} else {
			smooth_height = 0;
		}
		
		jQuery($flexslider).imagesLoaded(function() { 
			
			if( jQuery($flexslider).find("ul.slides > li").length > 1 ) {
			
				jQuery($flexslider).flexslider({	controlNav: 0,
													directionNav: 1, 
													animation: 'fade',
													smoothHeight: smooth_height,
													pauseOnHover: true,
													slideshowSpeed: slideshow_speed,
													animationSpeed: animation_speed,
													slideshow: autoplay,
													before: function(slider) {
														bk_stop_playback_if_any( jQuery(slider) );
													}
											   });
				
				jQuery($flexslider).addClass("bk-init-done");
			
			}
			
		});									     											
	}													
																			 
	jQuery('div.flexslider').each(function(index) {
		  if( !jQuery(this).parents(".bk-blog-outer-wrap").length && !jQuery(this).hasClass("bk_woo_product") ) {  // check if this slider is inside blog - need special handling if so - handled in blog section
		  	 bk_run_flexslider( jQuery(this) );
	      }
	});
	
	if( jQuery("body").hasClass("single-product") ) { // handle single product flexlsider with thumbs
		
		if( jQuery("#bk-product-flexslider-images").find("ul.slides > li").length > 1 ) {
		
			jQuery('#bk-product-flexslider-navigation').flexslider({
				    animation: "slide",
				    controlNav: false,
				    animationLoop: false,
				    slideshow: false,
				    itemWidth: 75,
				    itemMargin: 10,
				    asNavFor: '#bk-product-flexslider-images'
			 });
				   
			 jQuery('#bk-product-flexslider-images').flexslider({
				    animation: "fade",
				    controlNav: false,
				    animationLoop: false,
				    slideshow: false,
				    sync: "#bk-product-flexslider-navigation"
			 });
		 
		}
	}
	
	/*
	 * Handle fullscreen google maps 
	 */
	function bk_init_background_google_map() {
		
		var marker_image = jQuery("#bk-background-google-map-canvas").data("marker");
		var coords = jQuery("#bk-background-google-map-canvas").data("location");
		var title = jQuery("#bk-background-google-map-canvas").data("title");
		
		coords = coords.split(",");
		
		var location = new google.maps.LatLng(parseFloat(coords[0]), parseFloat(coords[1]));
		
		var mapOptions = {
			zoom: 15,
			mapTypeId: google.maps.MapTypeId.ROADMAP,
			center: location,
			disableDefaultUI: true,
			styles: [
			         {
			        	"stylers": [
			        	      { "saturation": -100 }
			        	]
			          }
			        ]
		};

		var map = new google.maps.Map(document.getElementById('bk-background-google-map-canvas'),
			          mapOptions);
		

		var marker = new google.maps.Marker({
			    map:map,
			    animation: google.maps.Animation.DROP,
			    position: location,
			    icon: marker_image,
			    title: title
		});
	}
	
	
	if( jQuery("body").hasClass("bk-fullscreen-google-maps-enabled") ) {
		bk_init_background_google_map();
	}
	
	/*
	 * Add image overlays to small widgets etcc
	 * 
	 */
	jQuery("div.flickr-photos img, ul.bk-recent-portfolio-widget img, ul.bk-recent-posts-widget li div.widget-thumb img").each(function(index) {
		add_image_overlay( jQuery(this) );
	});

	function add_image_overlay( $image ) {
		if( $image.parent().is('a') ) {
			var link = $image.parent().attr("href");
			var link_type = '';
			
			if (link.match(/youtube\.com\/watch/i) || link.match(/youtu\.be/i) || link.match(/vimeo\.com/i)) {
				link_type = 'video';
			} else if (link.match(/\.(jpg|png|gif)$/i)) {
				link_type = 'image';
			}	
						
			$image.after('<div class="bk-img-overlay hoverable ' + link_type + '" ></div>');
	  }
	}
	
	jQuery("div.bk-img-overlay.hoverable").live("mouseenter", function (event) {
		jQuery(this).stop().animate({'opacity' : 0.9}, {duration: 'medium', queue: false});
		return false;
	});

	jQuery("div.bk-img-overlay.hoverable").live("mouseleave", function (event) {
		jQuery(this).stop().animate({'opacity' : 0.0}, {duration: 'medium', queue: false});
		return false;
	});
	
	/*
	 * Back to top button
	 */
	
	if( bk_settings.bk_back_to_top_enabled ) {
		jQuery('body').append('<div id="bk-back-to-top-button"></div>');
		
		var $back_to_top = jQuery('#bk-back-to-top-button');
		
		$back_to_top.click(function(direction) {
			jQuery("body").scrollTo( "0px" ,'slow' );
		});
		
		jQuery(window).scroll(function() {
			var window_offset = jQuery(window).scrollTop(); // position of top window edge while scrolling 0 .... 1000000+ pixels
			var $header_navigation_wrap = jQuery("#bk-header");
			
			var trigger_offset = 0; // this is default trigger offset for 
			
			if( $header_navigation_wrap.hasClass("bk-classic-header-top") || 
		    	$header_navigation_wrap.hasClass("bk-fixed-header-top") ||
		    	( $header_navigation_wrap.hasClass("bk-fixed-header-left") && jQuery(window).width() <= 768 ) ) {
				if( $header_navigation_wrap.hasClass("bk-collapsed-header") ) {
					trigger_offset = 10;
				} else {
					trigger_offset = $header_navigation_wrap.height();
				}
			} else if ( $header_navigation_wrap.hasClass("bk-fixed-header-left") && jQuery(window).width() > 768 ) {
			   trigger_offset = 0;
			}
		
		    if( ( window_offset > trigger_offset ) && !$back_to_top.is(':visible') ) {
		    	$back_to_top.stop().fadeIn("fast");
		    } else if( ( window_offset <= trigger_offset ) && $back_to_top.is(':visible') ) {
		    	$back_to_top.stop().fadeOut("fast");
		    }
		});
	}
	
	/*
	Shortcodes
	*/
	  
	/*
	 * accordion
	 */
	jQuery( "div.bk-accordion" ).each(function(index) {
			var collapsible = jQuery(this).data("closeable");
			var active = ( jQuery(this).data("collapsed") == 1 ) ? 'false' : 0;
			
			 jQuery(this).accordion({
					header: "> div.bk-toggle-header",
					icons: false,
					autoHeight: false,
					collapsible: collapsible,
					active: active
			 });		
		});	
	
	/*
	 * toggle
	 */
	jQuery( "div.bk-toggle-header" ).click(function(){
	  	    jQuery(this).siblings('div.bk-toggle-content-outer-wrap').animate({
				    height: 'toggle'
				  }, 'slow', function() {
				    
				  });
				  jQuery(this).parents('div.bk-toggle').toggleClass('bk-toggle-closed');
	});
	
	/*
	 * tabs
	 */
	jQuery( "div.bk-tabs" ).tabs();
	
	/*
	 * progressbar
	 */
	
	jQuery('div.bk-progress-bar-wrap.animated').waypoint({
		  handler: function() {
		    var progress = jQuery(this).data('progress');
			var $progress_bar = jQuery(this).find("div.bk-progress-bar");
		    var $counter = jQuery(this).find("span.bk-progress-bar-counter");
		    
		    $progress_bar.animate({
		        width: progress + '%'
		    	},{ 
		    	duration: 1600,
		    	easing: 'easeInOutExpo',
		        step: function(now, max) {
		        	$counter.text( Math.round( now  ) );
		        }	
		    });
		  },
		  offset: '100%',
		  triggerOnce: true
	});
	
	/*
	End of shortcodes
	*/
	
	/*
	 * Contact form
	 */
	jQuery('form.bk-contact-form').submit(function() {
		  var valid_form = true;
		
		  jQuery(this).find("span.bk-contact-form-required").hide();
		  
		  var first_name = jQuery(this).children('input[type="text"][name="firstname"]').val();
		  var subject = jQuery(this).children('input[type="text"][name="subject"]').val();
		  var email_address = jQuery(this).children('input[type="text"][name="email"]').val();
		  var message = jQuery(this).children('textarea[name="message"]').val();
		  
		  if( first_name.length == 0 ) {
			  jQuery(this).find('label[for="firstname"] span.bk-contact-form-required').fadeIn();
			  valid_form = false;
		  }
		  
		  if( subject.length == 0 ) {
			  jQuery(this).find('label[for="subject"] span.bk-contact-form-required').fadeIn();
			  valid_form = false;
		  }
		  
		  if( email_address.length == 0 ) {
			  jQuery(this).find('label[for="email"] span.bk-contact-form-required.bk-empty').fadeIn();
			  valid_form = false;
		  } else if( !validate_email_input( email_address ) ) {
			  jQuery(this).find('label[for="email"] span.bk-contact-form-required.bk-invalid').fadeIn();
			  valid_form = false;
		  }
		  
		  if( message.length == 0 ) {
			  jQuery(this).find('label[for="message"] span.bk-contact-form-required').fadeIn();
			  valid_form = false;
		  }
		  
		  if( valid_form ) {
			  var wrap = jQuery(this).parents('div.contact-wrap').first();
		      var form_wrap = wrap.children('div.contact-form-wrap').first();
		      var response_wrap = wrap.children('div.contact-response-wrap').first();
		      var $button = wrap.find("a.submit");
		    
			  $button.addClass("loading");
			  $ajax_icon = $button.find("span.ajax-loading-icon");
			  $ajax_icon.fadeIn(300);
			  
			  jQuery.post(
					    bk_settings.bkajax_ajaxurl,
					    {
					        action : 'bk_contact_form_ajax',
					        email_address : email_address,
					        first_name : first_name,
					        subject: subject,
					        message : message
					    },
					    function( data ) {
					       $button.removeClass("loading");
					       $ajax_icon.fadeOut(300);
					       form_wrap.fadeOut('medium',function() {
								    response_wrap.html(data).fadeIn('medium'); 
								 });  
					    } 
					);
		  } 			  
		  
		  return false;
	 });
		
	 function validate_email_input( email ) {
	  	var emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,6}$/i;
	  	
	  	if( !emailRegex.test( email ) ) {
	  		return false;
	  	}	else {
	  		return true;
	  	}	 
	  }	
	
	 jQuery('form.bk-contact-form a.submit').click(function(event){
		 if( jQuery(this).hasClass("loading") )
		 		return false;
		 event.preventDefault();
		 jQuery(this).parent("form.bk-contact-form").submit(); 	  
	 });

});	
/*
  various javascript functions
*/

function bk_make_tweets(data) {
	var tweets = '';
	jQuery.each(data, function (i, tweet) {
		if( "undefined" != tweet.text ) {
			var text = tweet.text.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig, '<a href="$&">$&</a> ').replace(/@(.*?)(\s|\(|\)|$)/g, '<a href="http://twitter.com/$1">@$1 </a>$2').replace(/#(.*?)(\s|$)/g, '<a href="http://twitter.com/search?q=%23$1">#$1 </a>');
			tweets += '<li><p><span aria-hidden="true" class="icon-twitter-3 bk-widget-small-icon"></span>' + text + '</p>';
			tweets += '<span class="widget-time"><a href="http://twitter.com/' + tweet.user.screen_name + '/statuses/' + tweet.id_str + '" class="tweettime">' + human_time_diff( strtotime(tweet.created_at), Math.round( new Date().getTime() / 1000 ) ) + '</a></span>';
			tweets += '</li>';
		}	
	});
	return tweets;
}

function human_time_diff( time, now ) {
	var diff = Math.abs(now - time);
	if( diff <= 60 ) {
		return "less than a minute ago";
	} else if( diff <= 120 ) {
		return "about a minute ago";
	} else if( diff <= 300 ) {
		return "few minutes ago";
	}	else if( diff <= 3600 ) {
		return Math.round( diff / 60 ) + " minutes ago";
	}	else if( ( diff <= 86400 ) ) {
		var hours = Math.round( diff / 3600 );
		if( hours == 1 )
				return hours + " hour ago";
		else
			  return hours + " hours ago"; 		
	} else if( diff >= 86400 ) {
		var days = Math.round( diff / 86400 );
		if( days == 1 )
				return days + " day ago";
		else
			  return days + " days ago";
	} 		
}

function strtotime (str, now) {
    // Convert string representation of date and time to a timestamp  
    // 
    // version: 1109.2015
    // discuss at: http://phpjs.org/functions/strtotime
    // +   original by: Caio Ariede (http://caioariede.com)
    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +      input by: David
    // +   improved by: Caio Ariede (http://caioariede.com)
    // +   improved by: Brett Zamir (http://brett-zamir.me)
    // +   bugfixed by: Wagner B. Soares
    // +   bugfixed by: Artur Tchernychev
    // %        note 1: Examples all have a fixed timestamp to prevent tests to fail because of variable time(zones)
    // *     example 1: strtotime('+1 day', 1129633200);
    // *     returns 1: 1129719600
    // *     example 2: strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200);
    // *     returns 2: 1130425202
    // *     example 3: strtotime('last month', 1129633200);
    // *     returns 3: 1127041200
    // *     example 4: strtotime('2009-05-04 08:30:00');
    // *     returns 4: 1241418600
    var i, match, s, strTmp = '',
        parse = '';
 
    strTmp = str;
    strTmp = strTmp.replace(/\s{2,}|^\s|\s$/g, ' '); // unecessary spaces
    strTmp = strTmp.replace(/[\t\r\n]/g, ''); // unecessary chars
    if (strTmp == 'now') {
        return (new Date()).getTime() / 1000; // Return seconds, not milli-seconds
    } else if (!isNaN(parse = Date.parse(strTmp))) {
        return (parse / 1000);
    } else if (now) {
        now = new Date(now * 1000); // Accept PHP-style seconds
    } else {
        now = new Date();
    }
 
    strTmp = strTmp.toLowerCase();
 
    var __is = {
        day: {
            'sun': 0,
            'mon': 1,
            'tue': 2,
            'wed': 3,
            'thu': 4,
            'fri': 5,
            'sat': 6
        },
        mon: {
            'jan': 0,
            'feb': 1,
            'mar': 2,
            'apr': 3,
            'may': 4,
            'jun': 5,
            'jul': 6,
            'aug': 7,
            'sep': 8,
            'oct': 9,
            'nov': 10,
            'dec': 11
        }
    };
 
    var process = function (m) {
        var ago = (m[2] && m[2] == 'ago');
        var num = (num = m[0] == 'last' ? -1 : 1) * (ago ? -1 : 1);
 
        switch (m[0]) {
        case 'last':
        case 'next':
            switch (m[1].substring(0, 3)) {
            case 'yea':
                now.setFullYear(now.getFullYear() + num);
                break;
            case 'mon':
                now.setMonth(now.getMonth() + num);
                break;
            case 'wee':
                now.setDate(now.getDate() + (num * 7));
                break;
            case 'day':
                now.setDate(now.getDate() + num);
                break;
            case 'hou':
                now.setHours(now.getHours() + num);
                break;
            case 'min':
                now.setMinutes(now.getMinutes() + num);
                break;
            case 'sec':
                now.setSeconds(now.getSeconds() + num);
                break;
            default:
                var day;
                if (typeof(day = __is.day[m[1].substring(0, 3)]) != 'undefined') {
                    var diff = day - now.getDay();
                    if (diff == 0) {
                        diff = 7 * num;
                    } else if (diff > 0) {
                        if (m[0] == 'last') {
                            diff -= 7;
                        }
                    } else {
                        if (m[0] == 'next') {
                            diff += 7;
                        }
                    }
                    now.setDate(now.getDate() + diff);
                }
            }
            break;
 
        default:
            if (/\d+/.test(m[0])) {
                num *= parseInt(m[0], 10);
 
                switch (m[1].substring(0, 3)) {
                case 'yea':
                    now.setFullYear(now.getFullYear() + num);
                    break;
                case 'mon':
                    now.setMonth(now.getMonth() + num);
                    break;
                case 'wee':
                    now.setDate(now.getDate() + (num * 7));
                    break;
                case 'day':
                    now.setDate(now.getDate() + num);
                    break;
                case 'hou':
                    now.setHours(now.getHours() + num);
                    break;
                case 'min':
                    now.setMinutes(now.getMinutes() + num);
                    break;
                case 'sec':
                    now.setSeconds(now.getSeconds() + num);
                    break;
                }
            } else {
                return false;
            }
            break;
        }
        return true;
    };
 
    match = strTmp.match(/^(\d{2,4}-\d{2}-\d{2})(?:\s(\d{1,2}:\d{2}(:\d{2})?)?(?:\.(\d+))?)?$/);
    if (match != null) {
        if (!match[2]) {
            match[2] = '00:00:00';
        } else if (!match[3]) {
            match[2] += ':00';
        }
 
        s = match[1].split(/-/g);
 
        for (i in __is.mon) {
            if (__is.mon[i] == s[1] - 1) {
                s[1] = i;
            }
        }
        s[0] = parseInt(s[0], 10);
 
        s[0] = (s[0] >= 0 && s[0] <= 69) ? '20' + (s[0] < 10 ? '0' + s[0] : s[0] + '') : (s[0] >= 70 && s[0] <= 99) ? '19' + s[0] : s[0] + '';
        return parseInt(this.strtotime(s[2] + ' ' + s[1] + ' ' + s[0] + ' ' + match[2]) + (match[4] ? match[4] / 1000 : ''), 10);
    }
 
    var regex = '([+-]?\\d+\\s' + '(years?|months?|weeks?|days?|hours?|min|minutes?|sec|seconds?' + '|sun\\.?|sunday|mon\\.?|monday|tue\\.?|tuesday|wed\\.?|wednesday' + '|thu\\.?|thursday|fri\\.?|friday|sat\\.?|saturday)' + '|(last|next)\\s' + '(years?|months?|weeks?|days?|hours?|min|minutes?|sec|seconds?' + '|sun\\.?|sunday|mon\\.?|monday|tue\\.?|tuesday|wed\\.?|wednesday' + '|thu\\.?|thursday|fri\\.?|friday|sat\\.?|saturday))' + '(\\sago)?';
 
    match = strTmp.match(new RegExp(regex, 'gi')); // Brett: seems should be case insensitive per docs, so added 'i'
    if (match == null) {
        return false;
    }
 
    for (i = 0; i < match.length; i++) {
        if (!process(match[i].split(' '))) {
            return false;
        }
    }
 
    return (now.getTime() / 1000);
}			